{"file":"vnode-converter.js","mappings":";;;;;MAqBa,WAAW;;;;;QAKd,WAAM,GAAmB,EAAE,CAAC;sBAJiB,IAAI;;IAMzD,kBAAkB;QAChB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACb,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,SAAS;YACvB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;KACJ;IAED,MAAM;;QACJ,IAAI,CAAC,MAAM,GAAG,MAAA,MAAA,IAAI,CAAC,MAAM,oDAAI,mCAAI,IAAI,CAAC;QACtC,QACE,EAAC,IAAI,qDACH,KAAK,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,IAEpD,IAAI,CAAC,MAAM,CACP,EACP;KACH;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/vnode/vnode-converter.tsx"],"sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Host,\n  Prop,\n  type VNode,\n  h,\n} from '@stencil/core';\n\n/**\n * VNode to html converter for stencil components.\n * Transform VNode to html string.\n */\n/**\n * @internal\n */\n@Component({\n  tag: 'vnode-html',\n})\nexport class VNodeToHtml {\n  @Prop() redraw: (() => VNode[]) | null | undefined = null;\n  @Event() html: EventEmitter<{ html: string; vnodes: (VNode[]) | null }>;\n  @Element() el: HTMLElement;\n\n  private vnodes: VNode[] | null = [];\n\n  componentDidRender() {\n    this.html.emit({\n      html: this.el.innerHTML,\n      vnodes: this.vnodes,\n    });\n  }\n\n  render() {\n    this.vnodes = this.redraw?.() ?? null;\n    return (\n      <Host\n        style={{ visibility: 'hidden', position: 'absolute' }}\n      >\n        {this.vnodes}\n      </Host>\n    );\n  }\n}\n"],"version":3}