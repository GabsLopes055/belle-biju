{"file":"revogr-data2.js","mappings":"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","names":[],"sources":["src/components/data/row-renderer.tsx","src/plugins/groupingRow/grouping.row.renderer.tsx","src/components/data/row-highlight.plugin.ts","src/components/vnode/vnode.utils.ts","src/components/data/cell-renderer.tsx","src/components/data/revogr-data-style.scss?tag=revogr-data","src/components/data/revogr-data.tsx"],"sourcesContent":["import { h, type VNode } from '@stencil/core';\nimport { JSXBase } from '@stencil/core/internal';\nimport { DATA_ROW } from '../../utils/consts';\n\nexport interface RowProps extends JSXBase.HTMLAttributes {\n  size: number;\n  start: number;\n  index: number;\n  rowClass?: string;\n  depth?: number;\n}\n\nexport const PADDING_DEPTH = 10;\n\nconst RowRenderer = ({ rowClass, index, size, start, depth }: RowProps, cells: VNode[]) => {\n  const props = {\n    ...{ [DATA_ROW]: index },\n  };\n  return (\n    <div\n      {...props}\n      class={`rgRow ${rowClass || ''}`}\n      style={{\n        height: `${size}px`,\n        transform: `translateY(${start}px)`,\n        paddingLeft: depth ? `${PADDING_DEPTH * depth}px` : undefined,\n      }}\n    >\n      {cells}\n    </div>\n  );\n};\n\nexport default RowRenderer;\n","import { h } from '@stencil/core';\nimport RowRenderer, { RowProps } from '../../components/data/row-renderer';\nimport { GROUP_DEPTH, GROUP_EXPANDED, GROUP_EXPAND_BTN, PSEUDO_GROUP_ITEM } from './grouping.const';\nimport { GroupLabelTemplateFunc } from './grouping.row.types';\nimport { DataType, PositionItem } from '@type';\nimport { RevoGridCustomEvent } from 'src';\n\ninterface GroupRowPros extends RowProps {\n  model: DataType;\n  hasExpand: boolean;\n  groupingCustomRenderer?: GroupLabelTemplateFunc | null;\n}\ntype Props = GroupRowPros & PositionItem;\n\nfunction expandEvent(e: MouseEvent, model: DataType, virtualIndex: number) {\n  const event = new CustomEvent('groupexpandclick', {\n    detail: {\n      model,\n      virtualIndex,\n    },\n    cancelable: true,\n    bubbles: true,\n  }) as RevoGridCustomEvent<HTMLRevoGridElementEventMap['groupexpandclick']>;\n  e.target?.dispatchEvent(event);\n}\n\nconst GroupingRowRenderer = (props: Props) => {\n  const { model, itemIndex, hasExpand, groupingCustomRenderer } = props;\n  const name = model[PSEUDO_GROUP_ITEM];\n  const expanded = model[GROUP_EXPANDED];\n  const depth = parseInt(model[GROUP_DEPTH], 10) || 0;\n  \n  if (!hasExpand) {\n    return <RowRenderer {...props} rowClass=\"groupingRow\" depth={depth} />;\n  }\n\n  if (groupingCustomRenderer) {\n    return (\n      <RowRenderer {...props} rowClass=\"groupingRow\" depth={depth}>\n        <div onClick={e => expandEvent(e, model, itemIndex)}>\n          {groupingCustomRenderer(h, { name, model, itemIndex, expanded, depth })}\n        </div>\n      </RowRenderer>\n    );\n  }\n\n  return (\n    <RowRenderer {...props} rowClass=\"groupingRow\" depth={depth}>\n      <button class={{ [GROUP_EXPAND_BTN]: true }} onClick={e => expandEvent(e, model, itemIndex)}>\n        <svg aria-hidden=\"true\" style={{ transform: `rotate(${!expanded ? -90 : 0}deg)` }} focusable=\"false\" viewBox=\"0 0 448 512\">\n          <path\n            fill=\"currentColor\"\n            d=\"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z\"\n          ></path>\n        </svg>\n      </button>\n      {name}\n    </RowRenderer>\n  );\n};\nexport default GroupingRowRenderer;\n","import { type VNode } from '@stencil/core';\nimport { ROW_FOCUSED_CLASS } from '../../utils/consts';\nimport { RangeArea } from '@type';\n\n/**\n * Class is responsible for highlighting rows in a table.\n */\nexport class RowHighlightPlugin {\n  private currentRange: RangeArea | null = null;\n  selectionChange(e: RangeArea, renderedRows: Map<number, VNode>) {\n    // clear previous range\n    if (this.currentRange) {\n      renderedRows.forEach((row, y) => {\n        // skip current range\n        if (e && y >= e.y && y <= e.y1) {\n          return;\n        }\n\n        // clear previous range\n        if (\n          row &&\n          row.$elm$ instanceof HTMLElement &&\n          row.$elm$.classList.contains(ROW_FOCUSED_CLASS)\n        ) {\n          row.$elm$.classList.remove(ROW_FOCUSED_CLASS);\n          if (row.$attrs$?.class.includes(ROW_FOCUSED_CLASS)) {\n            row.$attrs$.class = row.$attrs$.class.replace(\n              ROW_FOCUSED_CLASS,\n              '',\n            );\n          }\n        }\n      });\n    }\n\n    // apply new range\n    if (e) {\n      for (let y = e.y; y <= e.y1; y++) {\n        const row = renderedRows.get(y);\n        if (\n          row &&\n          row.$elm$ instanceof HTMLElement &&\n          !row.$elm$.classList.contains(ROW_FOCUSED_CLASS)\n        ) {\n          const attrs = (row.$attrs$ = row.$attrs$ || {});\n          attrs.class = (attrs.class || '') + ' ' + ROW_FOCUSED_CLASS;\n          row.$elm$.classList.add(ROW_FOCUSED_CLASS);\n        }\n      }\n    }\n    this.currentRange = e;\n  }\n\n  isRowFocused(y: number) {\n    return (\n      this.currentRange && y >= this.currentRange.y && y <= this.currentRange.y1\n    );\n  }\n}\n","import { type VNode } from '@stencil/core';\nimport { type JSX } from '../../components';\n\n/**\n * Converts a VNode element into an HTML element and appends it to the specified parentHolder.\n */\nexport function convertVNodeToHTML(parentHolder: Element, redraw: JSX.VnodeHtml['redraw']): Promise<{ html: string; vnodes: (VNode[]) | null }> {\n  return new Promise<{ html: string; vnodes: (VNode[]) | null }>(resolve => {\n    const vnode = document.createElement('vnode-html');\n    parentHolder.appendChild(vnode);\n    vnode.redraw = redraw;\n    vnode.addEventListener('html', e => {\n      vnode.remove();\n      resolve(e.detail);\n    });\n  });\n}\n","import { h, type VNode, Build, EventEmitter } from '@stencil/core';\nimport {\n  DragStartEvent,\n  CellTemplateProp,\n} from '@type';\n\nimport {\n  DRAGGABLE_CLASS,\n  DRAG_ICON_CLASS,\n  getCellDataParsed,\n} from '../../utils';\n\nimport { isRowDragService } from './column.service';\n\ninterface RenderProps {\n  schemaModel: CellTemplateProp;\n  additionalData?: any;\n  dragStartCell?: EventEmitter<DragStartEvent>;\n}\n\n\nfunction renderCell(v: RenderProps) {\n  const els: (VNode | string)[] = [];\n\n  // #region Custom cell\n  const template = v.schemaModel.column?.cellTemplate;\n  if (template) {\n    els.push(template(h, v.schemaModel, v.additionalData));\n  }\n  // #endregion\n\n  // #region Regular cell\n  else {\n    if (!v.schemaModel.column) {\n      // something is wrong with data\n      if (Build.isDev) {\n        console.error('Investigate column problem.', v.schemaModel);\n      }\n      return '';\n    }\n\n    // Row drag\n    if (\n      v.schemaModel.column.rowDrag &&\n      isRowDragService(v.schemaModel.column.rowDrag, v.schemaModel)\n    ) {\n      els.push(\n        <span\n          class={DRAGGABLE_CLASS}\n          onMouseDown={originalEvent =>\n            v.dragStartCell?.emit({\n              originalEvent,\n              model: v.schemaModel,\n            })\n          }\n        >\n          <span class={DRAG_ICON_CLASS} />\n        </span>,\n      );\n    }\n    \n    els.push(`${\n      getCellDataParsed(v.schemaModel.model, v.schemaModel.column)\n    }`);\n  }\n  return els;\n}\n\nexport const CellRenderer = ({\n  renderProps,\n  cellProps,\n}: {\n  renderProps: RenderProps;\n  cellProps: any;\n}): VNode => {\n  const render = renderCell.bind(null, renderProps);\n  return (\n    <div {...cellProps} redraw={render}>\n      {render()}\n    </div>\n  );\n};\n","revogr-data {\n  display: block;\n  width: 100%;\n  position: relative;\n\n  .rgRow {\n    position: absolute;\n    width: 100%;\n    left: 0;\n\n    &.groupingRow {\n      font-weight: 600;\n      text-align: left;\n\n      .group-expand {\n        width: 25px;\n        height: 100%;\n        max-height: 25px;\n        margin-right: 2px;\n        background-color: transparent;\n        border-color: transparent;\n        vertical-align: middle;\n        padding-left: 5px;\n\n        svg {\n          width: 7px;\n        }\n      }\n    }\n  }\n\n  .revo-draggable {\n    $w: 24px;\n\n    border: none;\n    height: 32px;\n    display: inline-flex;\n    outline: 0;\n    padding: 0;\n    font-size: 0.8125rem;\n    box-sizing: border-box;\n    align-items: center;\n    white-space: nowrap;\n    vertical-align: middle;\n    justify-content: center;\n    text-decoration: none;\n    width: $w;\n    height: 100%;\n    cursor: pointer;\n    display: inline-flex;\n\n    &:hover {\n      > .revo-drag-icon {\n        opacity: 1;\n        zoom: 1.2;\n        font-weight: 600;\n      }\n    }\n\n    > .revo-drag-icon {\n      pointer-events: none;\n      transition: opacity 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, zoom 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n    }\n  }\n\n  .rgCell {\n    top: 0;\n    left: 0;\n    position: absolute;\n    box-sizing: border-box;\n    height: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    outline: none;\n\n    &.align-center {\n      text-align: center;\n    }\n    &.align-left {\n      text-align: left;\n    }\n    &.align-right {\n      text-align: right;\n    }\n  }\n}\n","import {\n  type VNode,\n  Component,\n  Host,\n  Watch,\n  Element,\n  Event,\n  Prop,\n  EventEmitter,\n  h,\n  Method,\n  State,\n} from '@stencil/core';\n\nimport ColumnService from './column.service';\nimport { DATA_COL, DATA_ROW, ROW_FOCUSED_CLASS } from '../../utils/consts';\n\nimport { DSourceState, getSourceItem } from '@store';\nimport RowRenderer, { PADDING_DEPTH } from './row-renderer';\nimport GroupingRowRenderer from '../../plugins/groupingRow/grouping.row.renderer';\nimport { isGrouping } from '../../plugins/groupingRow/grouping.service';\nimport { AllDimensionType, CellTemplateProp, DimensionCols, DimensionRows } from '@type';\nimport { RowHighlightPlugin } from './row-highlight.plugin';\nimport { convertVNodeToHTML } from '../vnode/vnode.utils';\nimport { CellRenderer } from './cell-renderer';\nimport {\n  ViewportState,\n  DimensionSettingsState,\n  BeforeRowRenderEvent,\n  Providers,\n  ColumnRegular,\n  DataType,\n  CellProps,\n  BeforeCellRenderEvent,\n  DragStartEvent,\n  VirtualPositionItem,\n  RangeArea,\n  SelectionStoreState,\n} from '@type';\nimport { Observable } from '../../utils';\n\n/**\n * This component is responsible for rendering data\n * Rows, columns, groups and cells\n */\n@Component({\n  tag: 'revogr-data',\n  styleUrl: 'revogr-data-style.scss',\n})\nexport class RevogrData {\n  // #region Properties\n  /**\n   * Readonly mode\n   */\n  @Prop() readonly: boolean;\n  /**\n   * Range allowed\n   */\n  @Prop() range: boolean;\n\n  /**\n   * Defines property from which to read row class\n   */\n  @Prop() rowClass: string;\n  /**\n   * Additional data to pass to renderer\n   * Used in plugins such as vue or react to pass root app entity to cells\n   */\n  @Prop() additionalData: any;\n  /** Stores */\n  /** Selection, range, focus for row selection */\n  @Prop() rowSelectionStore!: Observable<SelectionStoreState>;\n  /** Viewport Y */\n  @Prop() viewportRow!: Observable<ViewportState>;\n  /** Viewport X */\n  @Prop() viewportCol!: Observable<ViewportState>;\n  /** Dimension settings Y */\n  @Prop() dimensionRow!: Observable<DimensionSettingsState>;\n\n  /** Static stores, not expected to change during component lifetime */\n  /**\n   * Column source\n   */\n  @Prop() colData!: Observable<DSourceState<ColumnRegular, DimensionCols>>;\n  /**\n   * Data rows source\n   */\n  @Prop() dataStore!: Observable<DSourceState<DataType, DimensionRows>>;\n  /**\n   * Row data type\n   */\n  @Prop({ reflect: true }) type!: DimensionRows;\n\n  /**\n   * Column data type\n   */\n  @Prop({ reflect: true }) colType!: DimensionCols | 'rowHeaders';\n\n  /**\n   * Prevent rendering until job is done.\n   * Can be used for initial rendering performance improvement.\n   * When several plugins require initial rendering this will prevent double initial rendering.\n   */\n  @Prop() jobsBeforeRender: (Promise<any> | (() => Promise<any>))[] = [];\n  // #endregion\n\n  /**\n   * Before each row render\n   */\n  @Event() beforerowrender: EventEmitter<BeforeRowRenderEvent>;\n  \n  /**\n   * When data render finished for the designated type\n   */\n  @Event() afterrender: EventEmitter<{ type: DimensionRows }>;\n  /**\n   * Before each cell render function. Allows to override cell properties\n   */\n  @Event({ eventName: 'beforecellrender' })\n  beforeCellRender: EventEmitter<BeforeCellRenderEvent<CellTemplateProp>>;\n\n  /**\n   * Before data render\n   */\n  @Event({ eventName: 'beforedatarender' })\n  beforeDataRender: EventEmitter<AllDimensionType>;\n  /**\n   * Event emitted on cell drag start\n   */\n  @Event({ eventName: 'dragstartcell' })\n  dragStartCell: EventEmitter<DragStartEvent>;\n\n  /**\n   * Pointed cell update.\n   */\n  @Method() async updateCell(e: {\n    row: number; // virtual\n    col: number; // virtual\n  }) {\n    // Stencil tweak to update cell content\n    const cell = this.renderedRows.get(e.row)?.$children$?.[e.col];\n    if (cell?.$attrs$?.redraw) {\n      const children = await convertVNodeToHTML(\n        this.element,\n        cell.$attrs$.redraw,\n      );\n      cell.$elm$.innerHTML = children.html;\n      cell.$key$ = Math.random();\n    }\n  }\n\n  @Element() element!: Element;\n  @State() providers: Providers;\n  private columnService: ColumnService;\n  private rowHighlightPlugin: RowHighlightPlugin;\n  /**\n   * Rendered rows - virtual index vs vnode\n   */\n  private renderedRows = new Map<number, VNode>();\n  private rangeUnsubscribe: (() => void) | undefined;\n\n  @Watch('dataStore') onDataStoreChange() {\n    this.onStoreChange();\n  }\n  @Watch('colData') onColDataChange() {\n    this.onStoreChange();\n  }\n  onStoreChange() {\n    this.columnService?.destroy();\n    this.columnService = new ColumnService(this.dataStore, this.colData);\n    // make sure we have correct data, before render\n    this.providers = {\n      type: this.type,\n      readonly: this.readonly,\n      data: this.dataStore,\n      viewport: this.viewportCol,\n      dimension: this.dimensionRow,\n      selection: this.rowSelectionStore,\n    };\n\n    this.rangeUnsubscribe?.();\n    this.rangeUnsubscribe = this.rowSelectionStore.onChange(\n      'range',\n      (e: RangeArea) =>\n        this.rowHighlightPlugin.selectionChange(e, this.renderedRows),\n    );\n  }\n\n  connectedCallback() {\n    this.rowHighlightPlugin = new RowHighlightPlugin();\n    this.onStoreChange();\n  }\n\n  disconnectedCallback() {\n    this.columnService?.destroy();\n    this.rangeUnsubscribe?.();\n  }\n\n  async componentWillRender() {\n    this.beforeDataRender.emit({\n      rowType: this.type,\n      colType: this.colType as DimensionCols,\n    });\n    return Promise.all(this.jobsBeforeRender.map(p => typeof p === 'function' ? p() : p));\n  }\n\n  componentDidRender() {\n    this.afterrender.emit({ type: this.type });\n  }\n\n  render() {\n    this.renderedRows = new Map();\n    const columnsData = this.columnService.columns;\n    if (!columnsData.length) {\n      return;\n    }\n    const rows = this.viewportRow.get('items');\n    if (!rows.length) {\n      return;\n    }\n    const cols = this.viewportCol.get('items');\n    if (!cols.length) {\n      return;\n    }\n    const rowsEls: VNode[] = [];\n    const depth = this.dataStore.get('groupingDepth');\n    const groupingCustomRenderer = this.dataStore.get('groupingCustomRenderer');\n    const groupDepth = this.columnService.hasGrouping ? depth : 0;\n    for (let rgRow of rows) {\n      const dataItem = getSourceItem(this.dataStore, rgRow.itemIndex);\n\n      // #region Grouping\n      if (isGrouping(dataItem)) {\n        rowsEls.push(\n          <GroupingRowRenderer\n            {...rgRow}\n            index={rgRow.itemIndex}\n            model={dataItem}\n            groupingCustomRenderer={groupingCustomRenderer}\n            hasExpand={this.columnService.hasGrouping}\n          />,\n        );\n        continue;\n      }\n      // #endregion\n      const cells: (VNode | string | void)[] = [];\n\n      // #region Cells\n      for (let rgCol of cols) {\n        const smodel: CellTemplateProp = {\n          ...this.columnService.rowDataModel(\n            rgRow.itemIndex,\n            rgCol.itemIndex,\n          ),\n          providers: this.providers,\n        };\n\n        // call before cell render\n        const cellEvent = this.triggerBeforeCellRender(smodel, rgRow, rgCol);\n\n        // if event was prevented\n        if (cellEvent.defaultPrevented) {\n          continue;\n        }\n\n        const {\n          detail: { column: columnProps, row: rowProps, model: schemaModel },\n        } = cellEvent;\n\n        const defaultProps: CellProps = {\n          [DATA_COL]: columnProps.itemIndex,\n          [DATA_ROW]: rowProps.itemIndex,\n          style: {\n            width: `${columnProps.size}px`,\n            transform: `translateX(${columnProps.start}px)`,\n            height: rowProps.size ? `${rowProps.size}px` : undefined,\n          },\n        };\n        /**\n         * For grouping, can be removed in the future and replaced with event\n         */\n        if (groupDepth && !columnProps.itemIndex && defaultProps.style) {\n          defaultProps.style.paddingLeft = `${PADDING_DEPTH * groupDepth}px`;\n        }\n\n        const props = this.columnService.mergeProperties(\n          rowProps.itemIndex,\n          columnProps.itemIndex,\n          defaultProps,\n          schemaModel,\n        );\n\n        // Never use webcomponent for cell render\n        // It's very slow because of webcomponent initialization takes time\n        const cellNode = <CellRenderer\n          renderProps={{\n            schemaModel,\n            additionalData: this.additionalData,\n            dragStartCell: this.dragStartCell,\n          }}\n          cellProps={props}\n        />;\n        cells.push(cellNode);\n      }\n      // #endregion\n\n      // #region Rows\n      let rowClass = this.rowClass\n        ? this.columnService.getRowClass(rgRow.itemIndex, this.rowClass)\n        : '';\n      if (this.rowHighlightPlugin.isRowFocused(rgRow.itemIndex)) {\n        rowClass += ` ${ROW_FOCUSED_CLASS}`;\n      }\n      const row: VNode = (\n        <RowRenderer\n          index={rgRow.itemIndex}\n          rowClass={rowClass}\n          size={rgRow.size}\n          start={rgRow.start}\n        >\n          {cells}\n        </RowRenderer>\n      );\n      this.beforerowrender.emit({\n        node: row,\n        item: rgRow,\n        model: dataItem,\n        colType: this.columnService.type,\n        rowType: this.type,\n      });\n      rowsEls.push(row);\n      this.renderedRows.set(rgRow.itemIndex, row);\n      // #endregion\n    }\n    return (\n      <Host>\n        <slot />\n        {rowsEls}\n      </Host>\n    );\n  }\n\n  triggerBeforeCellRender(\n    model: CellTemplateProp,\n    row: VirtualPositionItem,\n    column: VirtualPositionItem,\n  ) {\n    const detail: BeforeCellRenderEvent<CellTemplateProp> = {\n      column,\n      row,\n      model,\n      rowType: model.type,\n      colType: model.colType,\n    };\n    return this.beforeCellRender.emit(detail);\n  }\n}\n"],"version":3}