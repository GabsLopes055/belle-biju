import { PluginBaseComponent, PluginProviders, PluginServiceBase } from "../../types/index";
import { GridPlugin } from "../../plugins/index";
/**
 * Plugin service
 * Manages plugins
 */
export declare class PluginService implements PluginServiceBase {
    /**
     * Plugins
     * Define plugins collection
     */
    internalPlugins: PluginBaseComponent[];
    /**
     * Get all plugins
     */
    get(): PluginBaseComponent[];
    /**
     * Add plugin to collection
     */
    add(plugin: PluginBaseComponent): void;
    /**
     * Add user plugins and create
     */
    addUserPluginsAndCreate(element: HTMLRevoGridElement, plugins?: GridPlugin[], prevPlugins?: GridPlugin[], pluginData?: PluginProviders): void;
    /**
     * Get plugin by class
     */
    getByClass<T extends PluginBaseComponent>(pluginClass: new (...args: any[]) => T): T | undefined;
    /**
     * Remove plugin
     */
    remove(plugin: PluginBaseComponent): void;
    /**
     * Remove all plugins
     */
    destroy(): void;
}
