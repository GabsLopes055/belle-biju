/**
 * Collects data for pinned columns in the required @ViewportProps format.
 */
import type { DimensionRows, MultiDimensionType, SlotType, Cell, ViewportColumn, ColumnRegular, DimensionCols, ViewportState, DimensionSettingsState, DataType } from "../../types/index";
import type { Observable } from '../../utils';
import type { DSourceState } from '../../store';
/**
 * Represents the slot names for the viewport slots.
 */
export declare const HEADER_SLOT = "header";
export declare const FOOTER_SLOT = "footer";
export declare const CONTENT_SLOT = "content";
export declare const DATA_SLOT = "data";
/**
 * Returns the last visible cell in the viewport for a given row type.
 * Coordinates are not zero-based and are relative to the viewport.
 * If needed to be zero-based they can be adjusted by subtracting 1.
 */
export declare function getLastCell(data: ViewportColumn, rowType: MultiDimensionType): Cell;
/**
 * Represents the partition of viewport data.
 */
export type VPPartition = {
    colData: Observable<DSourceState<ColumnRegular, DimensionCols>>;
    viewportCol: Observable<ViewportState>;
    viewportRow: Observable<ViewportState>;
    lastCell: Cell;
    slot: SlotType;
    type: DimensionRows;
    canDrag: boolean;
    position: Cell;
    dataStore: Observable<DSourceState<DataType, DimensionRows>>;
    dimensionCol: Observable<DimensionSettingsState>;
    dimensionRow: Observable<DimensionSettingsState>;
    style?: {
        height: string;
    };
};
export declare function viewportDataPartition(data: ViewportColumn, type: DimensionRows, slot: SlotType, fixed?: boolean): VPPartition;
