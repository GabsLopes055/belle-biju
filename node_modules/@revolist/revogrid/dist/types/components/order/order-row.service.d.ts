import { DimensionSettingsState, PositionItem, Cell } from "../../types/index";
type EventData = {
    el: HTMLElement;
    rows: DimensionSettingsState;
    cols: DimensionSettingsState;
};
interface Config {
    positionChanged(from: number, to: number): void;
}
export default class RowOrderService {
    private config;
    private currentCell;
    private previousRow;
    constructor(config: Config);
    /** Drag finished, calculate and apply changes */
    endOrder(e: MouseEvent, data: EventData): void;
    /** Drag started, reserve initial cell for farther use */
    startOrder(e: MouseEvent, data: EventData): Cell;
    move(y: number, data: EventData): PositionItem | null;
    /** Drag stopped, probably cursor outside of document area */
    clear(): void;
    /** Calculate cell based on x, y position */
    getRow(y: number, { el, rows }: EventData): PositionItem;
    /** Calculate cell based on x, y position */
    getCell({ x, y }: Cell, { el, rows, cols }: EventData): Cell;
}
export {};
