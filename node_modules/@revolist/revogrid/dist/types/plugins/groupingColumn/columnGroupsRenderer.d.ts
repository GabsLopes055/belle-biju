import { h } from '../../stencil-public-runtime';
import { Group } from "../../store/index";
import { DimensionSettingsState, Providers, DimensionCols } from "../../types/index";
import { ResizeProps } from '../../components/header/resizable.directive';
type Props<T> = {
    visibleProps: {
        [prop: string]: number;
    };
    groups: Record<number, Group[]>;
    dimensionCol: Pick<DimensionSettingsState, 'indexes' | 'originItemSize' | 'indexToItem'>;
    depth: number;
    canResize: boolean;
    providers: Providers<T>;
    additionalData: any;
    onResize(changedX: number, startIndex: number, endIndex: number): void;
} & Partial<Pick<ResizeProps, 'active'>>;
declare const ColumnGroupsRenderer: ({ additionalData, providers, depth, groups, visibleProps, dimensionCol, canResize, active, onResize }: Props<DimensionCols | "rowHeaders">) => ReturnType<typeof h>[];
export default ColumnGroupsRenderer;
