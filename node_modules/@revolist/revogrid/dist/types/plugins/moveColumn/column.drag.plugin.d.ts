import { BasePlugin } from '../base.plugin';
import type { ColumnPropProp, DimensionCols, PluginProviders } from "../../types/index";
export type DragStartEventDetails = {
    event: MouseEvent;
    data: ColumnPropProp;
};
type LocalSubscriptions = Record<string, LocalSubscription>;
type LocalSubscription = {
    target: Element | Document;
    callback(...params: any[]): void;
};
export type ColumnDragEventData = {
    elRect: DOMRect;
    gridRect: DOMRect;
    scrollOffset: number;
    type: DimensionCols;
};
export declare class ColumnMovePlugin extends BasePlugin {
    revogrid: HTMLRevoGridElement;
    providers: PluginProviders;
    private moveFunc;
    private staticDragData;
    private dragData;
    private readonly orderUi;
    protected readonly localSubscriptions: LocalSubscriptions;
    constructor(revogrid: HTMLRevoGridElement, providers: PluginProviders);
    dragStart({ event, data }: DragStartEventDetails): void;
    doMove(e: MouseEvent): void;
    move(e: MouseEvent): void;
    onMouseOut(_: MouseEvent): void;
    onMouseUp(e: MouseEvent): void;
    private clearLocalSubscriptions;
    clearOrder(): void;
    /**
     * Clearing subscription
     */
    clearSubscriptions(): void;
    private getData;
    private getDimension;
}
export declare function getLeftRelative(absoluteX: number, gridPos: number, offset: number): number;
export {};
