import { Observable } from '../../utils';
import { DimensionSettingsState, ViewSettingSizeProp, MultiDimensionType } from "../../types/index";
export type DimensionStoreCollection = {
    [T in MultiDimensionType]: DimensionStore;
};
export declare class DimensionStore {
    readonly type: MultiDimensionType;
    readonly store: Observable<DimensionSettingsState>;
    constructor(type: MultiDimensionType);
    getCurrentState(): DimensionSettingsState;
    dispose(): void;
    setStore<T extends Record<string, any>>(data: Partial<T>): void;
    drop(): void;
    /**
     * Set custom dimension sizes and overwrite old
     * Generates new indexes based on sizes
     * @param sizes - sizes to set
     */
    setDimensionSize(sizes?: ViewSettingSizeProp): void;
    updateSizesPositionByIndexes(newItemsOrder: number[], prevItemsOrder?: number[]): void;
}
