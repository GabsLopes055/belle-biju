/**
 * Selection store
 */
import { Observable } from '../../utils';
import { SelectionStoreState, Cell, TempRange, RangeArea, Nullable } from "../../types/index";
export declare class SelectionStore {
    readonly store: Observable<SelectionStoreState>;
    private unsubscribe;
    constructor();
    onChange<Key extends keyof SelectionStoreState>(propName: Key, cb: (newValue: SelectionStoreState[Key]) => void): void;
    clearFocus(): void;
    setFocus(focus: Cell, end?: Cell): void;
    setNextFocus(focus: Cell): void;
    setTempArea(range: Nullable<TempRange> | null): void;
    clearTemp(): void;
    /** Can be applied from selection change or from simple keyboard change clicks */
    setRangeArea(range: RangeArea | null): void;
    setRange(start: Cell, end: Cell): void;
    setLastCell(lastCell: Cell): void;
    setEdit(val?: string | boolean): void;
    dispose(): void;
}
