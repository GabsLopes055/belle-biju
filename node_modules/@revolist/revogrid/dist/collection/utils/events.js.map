{"version":3,"file":"events.js","sourceRoot":"","sources":["../../src/utils/events.ts"],"names":[],"mappings":"AAAA,SAAS,OAAO,CAAC,CAA0B;IACzC,OAAO,CAAC,CAAE,CAAgB,CAAC,OAAO,CAAC;AACrC,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,UAAkB,EAAE,UAAmB;IACvE,IAAI,UAAU,IAAI,UAAU,EAAE,CAAC;QAC7B,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,YAAY,OAAO,IAAI,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC;YAChG,OAAO,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAGD;;GAEG;AACH,MAAM,UAAU,oBAAoB,CAClC,CAA0B,EAC1B,IAAsE,EACtE,UAAmB,CAAC,mBAAmB;;IAEvC,sCAAsC;IACtC,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QACf,gDAAgD;QAChD,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACzB,MAAM,UAAU,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAChC,kEAAkE;YAClE,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,CAAC;gBAC/C,sBAAsB;gBACtB,OAAO,IAAI,CAAC;YACd,CAAC;YACD,6EAA6E;YAC7E,OAAQ,UAAU,CAAC,IAAI,CAAY,IAAI,CAAC,CAAC;QAC3C,CAAC;QACD,uCAAuC;QACvC,OAAO,IAAI,CAAC;IACd,CAAC;IACD,0GAA0G;IAC1G,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACtB,CAAC","sourcesContent":["function isTouch(e: MouseEvent | TouchEvent): e is TouchEvent {\n  return !!(e as TouchEvent).touches;\n}\n\nexport function verifyTouchTarget(touchEvent?: Touch, focusClass?: string) {\n  if (focusClass && touchEvent) {\n    if (!(touchEvent.target instanceof Element && touchEvent.target.classList.contains(focusClass))) { \n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Function to get the value of a specific property from a MouseEvent or TouchEvent object.\n */\nexport function getPropertyFromEvent(\n  e: MouseEvent | TouchEvent,\n  prop: keyof Pick<Touch, 'clientX' | 'clientY' | 'screenX' | 'screenY'>,\n  focusClass?: string // for touch events\n): number | null {\n  // Check if the event is a touch event\n  if (isTouch(e)) {\n    // If the event has touches, get the first touch\n    if (e.touches.length > 0) {\n      const touchEvent = e.touches[0];\n      // Check if the target of the touch event is the specified element\n      if (!verifyTouchTarget(touchEvent, focusClass)) {\n        // If not, return null\n        return null;\n      }\n      // Get the value of the specified property from the touch event and return it\n      return (touchEvent[prop] as number) || 0;\n    }\n    // If there are no touches, return null\n    return null;\n  }\n  // If the event is not a touch event, get the value of the specified property from the event and return it\n  return e[prop] || 0;\n}\n"]}