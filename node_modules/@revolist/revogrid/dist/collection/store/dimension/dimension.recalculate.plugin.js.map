{"version":3,"file":"dimension.recalculate.plugin.js","sourceRoot":"","sources":["../../../src/store/dimension/dimension.recalculate.plugin.ts"],"names":[],"mappings":"AAGA;;GAEG;AACH,MAAM,CAAC,MAAM,yBAAyB,GAAG,CAAC,YAGzC,EAA2C,EAAE;IAC5C;;OAEG;IACH,OAAO;QACL;;WAEG;QACH,GAAG,CAAC,CAAC;YACH,QAAQ,CAAC,EAAE,CAAC;gBACV,KAAK,OAAO,CAAC;gBACb,KAAK,OAAO,CAAC;gBACb,KAAK,gBAAgB,CAAC,CAAC,CAAC;oBACtB,uBAAuB;oBACvB,IAAI,QAAQ,GAAG,CAAC,CAAC;oBACjB,MAAM,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC/B,QAAQ;4BACN,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gCAClC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;oBAC7C,CAAC;oBACD,YAAY,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;oBACpC,MAAM;gBACR,CAAC;YACH,CAAC;QACH,CAAC;KACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { DimensionSettingsState } from '@type';\nimport type { Observable, PluginSubscribe } from '../../utils';\n\n/**\n * Plugin which recalculates realSize on changes of sizes, originItemSize and count\n */\nexport const recalculateRealSizePlugin = (storeService: {\n  store: Observable<DimensionSettingsState>;\n  setStore: (k: Partial<DimensionSettingsState>) => void;\n}): PluginSubscribe<DimensionSettingsState> => {\n  /**\n   * Recalculates realSize if size, origin size or count changes\n   */\n  return {\n    /**\n     * Reacts on changes of count, sizes and originItemSize\n     */\n    set(k) {\n      switch (k) {\n        case 'count':\n        case 'sizes':\n        case 'originItemSize': {\n          // recalculate realSize\n          let realSize = 0;\n          const count = storeService.store.get('count');\n          for (let i = 0; i < count; i++) {\n            realSize +=\n              storeService.store.get('sizes')[i] ||\n              storeService.store.get('originItemSize');\n          }\n          storeService.setStore({ realSize });\n          break;\n        }\n      }\n    },\n  };\n};\n"]}