{"version":3,"file":"vnode.utils.js","sourceRoot":"","sources":["../../../src/components/vnode/vnode.utils.ts"],"names":[],"mappings":"AAGA;;GAEG;AACH,MAAM,UAAU,kBAAkB,CAAC,YAAqB,EAAE,MAA+B;IACvF,OAAO,IAAI,OAAO,CAA6C,OAAO,CAAC,EAAE;QACvE,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QACnD,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAChC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;QACtB,KAAK,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE;YACjC,KAAK,CAAC,MAAM,EAAE,CAAC;YACf,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { type VNode } from '@stencil/core';\nimport { type JSX } from '../../components';\n\n/**\n * Converts a VNode element into an HTML element and appends it to the specified parentHolder.\n */\nexport function convertVNodeToHTML(parentHolder: Element, redraw: JSX.VnodeHtml['redraw']): Promise<{ html: string; vnodes: (VNode[]) | null }> {\n  return new Promise<{ html: string; vnodes: (VNode[]) | null }>(resolve => {\n    const vnode = document.createElement('vnode-html');\n    parentHolder.appendChild(vnode);\n    vnode.redraw = redraw;\n    vnode.addEventListener('html', e => {\n      vnode.remove();\n      resolve(e.detail);\n    });\n  });\n}\n"]}