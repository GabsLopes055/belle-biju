/*!
 * Built by Revolist OU ❤️
 */
import { Host, h, } from "@stencil/core";
/**
 * VNode to html converter for stencil components.
 * Transform VNode to html string.
 */
/**
 * @internal
 */
export class VNodeToHtml {
    constructor() {
        this.vnodes = [];
        this.redraw = null;
    }
    componentDidRender() {
        this.html.emit({
            html: this.el.innerHTML,
            vnodes: this.vnodes,
        });
    }
    render() {
        var _a, _b;
        this.vnodes = (_b = (_a = this.redraw) === null || _a === void 0 ? void 0 : _a.call(this)) !== null && _b !== void 0 ? _b : null;
        return (h(Host, { key: '73a019dbc046a9d4504bc84a80868e8023d1f502', style: { visibility: 'hidden', position: 'absolute' } }, this.vnodes));
    }
    static get is() { return "vnode-html"; }
    static get properties() {
        return {
            "redraw": {
                "type": "unknown",
                "mutable": false,
                "complexType": {
                    "original": "(() => VNode[]) | null | undefined",
                    "resolved": "(() => VNode[]) | null | undefined",
                    "references": {
                        "VNode": {
                            "location": "import",
                            "path": "@stencil/core",
                            "id": "node_modules::VNode"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "defaultValue": "null"
            }
        };
    }
    static get events() {
        return [{
                "method": "html",
                "name": "html",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "complexType": {
                    "original": "{ html: string; vnodes: (VNode[]) | null }",
                    "resolved": "{ html: string; vnodes: VNode[] | null; }",
                    "references": {
                        "VNode": {
                            "location": "import",
                            "path": "@stencil/core",
                            "id": "node_modules::VNode"
                        }
                    }
                }
            }];
    }
    static get elementRef() { return "el"; }
}
//# sourceMappingURL=vnode-converter.js.map
