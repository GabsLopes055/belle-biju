{"version":3,"file":"revo-grid.js","sourceRoot":"","sources":["../../../src/components/revoGrid/revo-grid.tsx"],"names":[],"mappings":"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":["import {\n  type VNode,\n  Component,\n  Prop,\n  h,\n  Watch,\n  Element,\n  Listen,\n  Event,\n  EventEmitter,\n  Method,\n  Host,\n} from '@stencil/core';\n\nimport type {\n  MultiDimensionType,\n  DimensionRows,\n  DimensionCols,\n  DimensionType,\n  DimensionTypeCol,\n  RowHeaders,\n  ColumnRegular,\n  ColumnGrouping,\n  DataType,\n  RowDefinition,\n  ColumnType,\n  FocusTemplateFunc,\n  PositionItem,\n  ColumnProp,\n  ViewPortScrollEvent,\n  InitialHeaderClick,\n  AllDimensionType,\n  Editors,\n  BeforeSaveDataDetails,\n  BeforeRangeSaveDataDetails,\n  Cell,\n  ChangedRange,\n  RangeArea,\n  AfterEditEvent,\n  Theme,\n  PluginBaseComponent,\n  HeaderProperties,\n  PluginProviders,\n  FocusAfterRenderEvent,\n  ExtraNodeFuncConfig,\n  RowDragStartDetails,\n  AdditionalData,\n} from '@type';\n\nimport ColumnDataProvider from '../../services/column.data.provider';\nimport { DataProvider } from '../../services/data.provider';\nimport { DSourceState, getVisibleSourceItem, rowTypes } from '@store';\nimport DimensionProvider from '../../services/dimension.provider';\nimport ViewportProvider from '../../services/viewport.provider';\nimport ThemeService from '../../themeManager/theme.service';\nimport { timeout } from '../../utils';\nimport {\n  AutoSizeColumnPlugin,\n  type AutoSizeColumnConfig,\n} from '../../plugins/column.auto-size.plugin';\n\nimport {\n  FilterPlugin,\n} from '../../plugins/filter/filter.plugin';\nimport { SortingPlugin } from '../../plugins/sorting/sorting.plugin';\nimport { ExportFilePlugin } from '../../plugins/export/export.plugin';\nimport { DataInput } from '../../plugins/export/types';\nimport { GroupingRowPlugin } from '../../plugins/groupingRow/grouping.row.plugin';\nimport type { GroupingOptions } from '../../plugins/groupingRow/grouping.row.types';\nimport ViewportService, { FocusedData } from './viewport.service';\nimport { DATA_SLOT, HEADER_SLOT } from './viewport.helpers';\nimport GridScrollingService from './viewport.scrolling.service';\nimport { SelectionStoreConnector } from '../../services/selection.store.connector';\nimport OrderRenderer, { OrdererService } from '../order/order-renderer';\nimport {\n  StretchColumn,\n  isStretchPlugin,\n} from '../../plugins/column.stretch.plugin';\nimport { rowDefinitionByType, rowDefinitionRemoveByType } from './grid.helpers';\nimport { ColumnMovePlugin } from '../../plugins/moveColumn/column.drag.plugin';\nimport { getPropertyFromEvent } from '../../utils/events';\nimport { isMobileDevice } from '../../utils/mobile';\nimport type { Observable } from '../../utils';\nimport type { GridPlugin } from '../../plugins/base.plugin';\nimport { ColumnCollection, getColumnByProp, getColumns } from '../../utils/column.utils';\nimport { WCAGPlugin } from '../../plugins/wcag';\nimport { ColumnFilterConfig, FilterCollectionItem } from '../../plugins/filter/filter.types';\nimport { PluginService } from './plugin.service';\nimport { SortingConfig, SortingOrder } from '../../plugins';\n\n\n/**\n * Revogrid - High-performance, customizable grid library for managing large datasets.\n * ### Events guide\n *\n * For a comprehensive events guide, check the [Events API Page](/guide/api/events).\n * All events propagate to the root level of the grid. [Dependency tree](#Dependencies).\n * \n * ### Type definitions\n *\n * Read [type definition file](https://github.com/revolist/revogrid/blob/master/src/interfaces.d.ts) for the full interface information.\n * \n * All complex property types such as `ColumnRegular`, `ColumnProp`, `ColumnDataSchemaModel` can be found there.\n * \n * ### HTMLRevoGridElement\n *\n * @slot data-{column-type}-{row-type}. @example data-rgCol-rgRow - main data slot. Applies extra elements in <revogr-data />.\n * @slot focus-{column-type}-{row-type}. @example focus-rgCol-rgRow - focus layer for main data. Applies extra elements in <revogr-focus />.\n * @slot viewport - Viewport slot.\n * @slot header - Header slot.\n * @slot footer - Footer slot.\n*/\n@Component({\n  tag: 'revo-grid',\n  styleUrl: 'revo-grid-style.scss',\n})\nexport class RevoGridComponent {\n  // #region Properties\n  /** Excel like functionality.\n   * Show row numbers.\n   * Also can be used for custom row header render if object provided.\n   */\n  @Prop() rowHeaders: RowHeaders | boolean;\n\n  /**\n   * Defines how many rows/columns should be rendered outside visible area.\n   */\n  @Prop() frameSize = 1;\n\n  /**\n   * Indicates default rgRow size.\n   * By default 0, means theme package size will be applied\n   *\n   * Alternatively you can use `rowSize` to reset viewport\n   */\n  @Prop() rowSize = 0;\n\n  /** Indicates default column size. */\n  @Prop() colSize = 100;\n\n  /** When true, user can range selection. */\n  @Prop() range = false;\n\n  /** When true, grid in read only mode. */\n  @Prop() readonly = false;\n\n  /** When true, columns are resizable. */\n  @Prop() resize = false;\n\n  /** When true cell focus appear. */\n  @Prop() canFocus = true;\n\n  /** When true enable clipboard. */\n  @Prop() useClipboard = true;\n\n  /**\n   * Columns - defines an array of grid columns.\n   * Can be column or grouped column.\n   */\n  @Prop() columns: (ColumnRegular | ColumnGrouping)[] = [];\n  /**\n   * Source - defines main data source.\n   * Can be an Object or 2 dimensional array([][]);\n   * Keys/indexes referenced from columns Prop.\n   */\n  @Prop() source: DataType[] = [];\n\n  /** Pinned top Source: {[T in ColumnProp]: any} - defines pinned top rows data source. */\n  @Prop() pinnedTopSource: DataType[] = [];\n\n  /** Pinned bottom Source: {[T in ColumnProp]: any} - defines pinned bottom rows data source. */\n  @Prop() pinnedBottomSource: DataType[] = [];\n\n  /** Custom row properies to be applied. See `RowDefinition` for more info. */\n  @Prop() rowDefinitions: RowDefinition[] = [];\n\n  /** Custom editors register. */\n  @Prop() editors: Editors = {};\n\n  /**\n   * Apply changes in editor when closed except 'Escape' cases.\n   * If custom editor in use method getValue required.\n   * Check interfaces.d.ts `EditorBase` for more info.\n   */\n  @Prop() applyOnClose = false;\n\n  /**\n   * Custom grid plugins. Can be added or removed at runtime.\n   * Every plugin should be inherited from BasePlugin class.\n   * \n   * For more details check [Plugin guide](https://rv-grid.com/guide/plugin/)\n   */\n  @Prop() plugins: GridPlugin[] = [];\n\n  /**\n   * Column Types Format.\n   * Every type represent multiple column properties.\n   * Types will be merged but can be replaced with column properties.\n   * Types were made as separate objects to be reusable per multiple columns.\n   */\n  @Prop() columnTypes: { [name: string]: ColumnType } = {};\n\n  /** Theme name. */\n  @Prop({ reflect: true, mutable: true }) theme: Theme = 'default';\n\n  /**\n   * Row class property mapping.\n   * Map custom classes to rows from row object data.\n   * Define this property in rgRow object and this will be mapped as rgRow class.\n   */\n  @Prop({ reflect: true }) rowClass = '';\n\n  /**\n   * Autosize config.\n   * Enables columns autoSize.\n   * For more details check `autoSizeColumn` plugin.\n   * By default disabled, hence operation is not performance efficient.\n   * `true` to enable with default params (double header separator click for autosize).\n   * Or define config. See `AutoSizeColumnConfig` for more details.\n   */\n  @Prop() autoSizeColumn: boolean | AutoSizeColumnConfig = false;\n\n  /**\n   * Enables filter plugin.\n   * Can be boolean.\n   * Or can be filter collection See `FilterCollection` for more info.\n   */\n  @Prop() filter: boolean | ColumnFilterConfig = false;\n\n  /**\n   * Alternative way to set sorting.\n   * `{columns: [{prop: 'name', order: 'asc'}]}`\n   * Use SortingPlugin to get current sorting state\n   */\n  @Prop() sorting?: SortingConfig;\n\n  /**\n   * Apply changes typed in editor on editor close except Escape cases.\n   * If custom editor in use method `getValue` required.\n   * Check `interfaces.d.ts` `EditorBase` for more info.\n   */\n  @Prop() focusTemplate: FocusTemplateFunc;\n\n  /**\n   * Enable column move plugin.\n   */\n  @Prop() canMoveColumns = false;\n  /**\n   * Trimmed rows.\n   * Functionality which allows to hide rows from main data set.\n   * `trimmedRows` are physical `rgRow` indexes to hide.\n   */\n  @Prop() trimmedRows: Record<number, boolean> = {};\n\n  /**\n   * Enable export plugin.\n   */\n  @Prop() exporting = false;\n\n  /**\n   * Group rows based on this property.\n   * Define properties to be groped by grouping plugin See `GroupingOptions`.\n   */\n  @Prop() grouping: GroupingOptions;\n\n  /**\n   * Stretch strategy for columns by `StretchColumn` plugin.\n   * For example if there are more space on the right last column size would be increased.\n   */\n  @Prop() stretch: boolean | string = false;\n\n  /**\n   * Additional data to be passed to plugins, renders or editors.\n   * For example if you need to pass Vue component instance.\n   */\n  @Prop() additionalData: AdditionalData = {};\n\n  /**\n   * Disable lazy rendering mode for the `X axis`.\n   * Use when not many columns present and you don't need rerenader cells during scroll.\n   * Can be used for initial rendering performance improvement.\n   */\n  @Prop() disableVirtualX = false;\n  /**\n   * Disable lazy rendering mode for the `Y axis`.\n   * Use when not many rows present and you don't need rerenader cells during scroll.\n   * Can be used for initial rendering performance improvement.\n   */\n  @Prop() disableVirtualY = false;\n\n  /**\n   * Please only hide the attribution if you are subscribed to Pro version\n   */\n  @Prop() hideAttribution = false;\n\n  /**\n   * Prevent rendering until job is done.\n   * Can be used for initial rendering performance improvement.\n   * When several plugins require initial rendering this will prevent double initial rendering.\n   */\n  @Prop() jobsBeforeRender: Promise<any>[] = [];\n\n  /**\n   * Register new virtual node inside of grid.\n   * Used for additional items creation such as plugin elements.\n   * Should be set before grid render inside of plugins.\n   * Can return VNode result of h() function or a function that returns VNode.\n   * Function can be used for performance improvement and additional renders.\n   */\n  @Prop() registerVNode: (\n    | VNode\n    | ((c: ExtraNodeFuncConfig) => VNode)\n  )[] = [];\n\n\n  /**\n   * Enable accessibility. If disabled, the grid will not be accessible.\n   * @default true\n   */\n  @Prop() accessible = true;\n\n\n\n  /**\n   * Disable native drag&drop plugin.\n   */\n  @Prop() canDrag = true;\n\n  // #endregion\n\n  // #region Events\n  /**\n   * New content size has been applied. The size excludes the header.\n   * Currently, the event responsible for applying the new content size does not provide the actual size.\n   * To retrieve the actual content size, you can utilize the `getContentSize` function after the event has been triggered.\n   */\n  @Event() contentsizechanged: EventEmitter<MultiDimensionType>;\n\n  /**\n   * Before the data is edited.\n   * To prevent the default behavior of editing data and use your own implementation, call `e.preventDefault()`.\n   * To override the edit result with your own value, set the `e.val` property to your desired value.\n   */\n  @Event() beforeedit: EventEmitter<BeforeSaveDataDetails>;\n\n  /**\n   * Before applying range data, specifically when a range selection occurs.\n   * To customize the data and prevent the default edit data from being set, you can call `e.preventDefault()`.\n   */\n  @Event() beforerangeedit: EventEmitter<BeforeRangeSaveDataDetails>;\n\n  /**\n   * After data applied or range changed.\n   */\n  @Event() afteredit: EventEmitter<AfterEditEvent>;\n\n  /**\n   * Before autofill is applied.\n   * To prevent the default behavior of applying the edit data, you can call `e.preventDefault()`.\n   */\n  @Event() beforeautofill: EventEmitter<ChangedRange>;\n\n  /**\n   * Before autofill is applied. Runs before beforeautofill event.\n   * Use e.preventDefault() to prevent range.\n   */\n  @Event() beforerange: EventEmitter<ChangedRange>;\n\n  /**\n   * After focus render finished.\n   * Can be used to access a focus element through `event.target`.\n   * This is just a duplicate of `afterfocus` from `revogr-focus.tsx`.\n   */\n  @Event() afterfocus: EventEmitter<FocusAfterRenderEvent>;\n\n  /**\n   * Before the order of `rgRow` is applied.\n   * To prevent the default behavior of changing the order of `rgRow`, you can call `e.preventDefault()`.\n   */\n  @Event() roworderchanged: EventEmitter<{ from: number; to: number }>;\n\n  /**\n   * By `SortingPlugin`\n   * <br>Triggered immediately after header click.\n   * <br>First in sorting event sequence. Ff this event stops no other event called.\n   * <br>Use `e.preventDefault()` to prevent sorting.\n   */\n  @Event() beforesorting: EventEmitter<{\n    column: ColumnRegular;\n    order: 'desc' | 'asc';\n    additive: boolean;\n  }>;\n\n  /**\n   * By `SortingPlugin`\n   * <br>Same as `beforesorting` but triggered after `beforeanysource` (when source is changed).\n   * <br>Use `e.preventDefault()` to prevent sorting data change.\n   */\n  @Event() beforesourcesortingapply: EventEmitter<{\n    type: DimensionRows;\n    sorting?: SortingOrder;\n  }>;\n\n  /**\n   * By `SortingPlugin`\n   * <br> After `beforesorting`\n   * <br>Triggered after column data updated with new sorting order.\n   * <br>Use `e.preventDefault()` to prevent sorting data change.\n   */\n  @Event() beforesortingapply: EventEmitter<{\n    column: ColumnRegular;\n    order: 'desc' | 'asc';\n    additive: boolean;\n  }>;\n\n  /**\n   * This event is triggered when the row order change is started.\n   * To prevent the default behavior of changing the row order, you can call `e.preventDefault()`.\n   * To change the item name at the start of the row order change, you can set `e.text` to the desired new name.\n   */\n  @Event() rowdragstart: EventEmitter<RowDragStartDetails>;\n\n  /**\n   * On header click.\n   */\n  @Event() headerclick: EventEmitter<ColumnRegular>;\n\n  /**\n   * Before the cell focus is changed.\n   * To prevent the default behavior of changing the cell focus, you can call `e.preventDefault()`.\n   */\n  @Event() beforecellfocus: EventEmitter<BeforeSaveDataDetails>;\n\n  /**\n   * Before the grid focus is lost.\n   * To prevent the default behavior of changing the cell focus, you can call `e.preventDefault()`.\n   */\n  @Event() beforefocuslost: EventEmitter<FocusedData | null>;\n\n  /**\n   * Before main source/rows data apply.\n   * You can override data source here\n   */\n  @Event() beforesourceset: EventEmitter<{\n    type: DimensionRows;\n    source: DataType[];\n  }>;\n\n  /**\n   * Before data apply on any source type. Can be source from pinned and main viewport.\n   * You can override data source here\n   */\n  @Event() beforeanysource: EventEmitter<{\n    type: DimensionRows;\n    source: DataType[];\n  }>;\n\n  /**\n   * After main source/rows updated\n   */\n  @Event() aftersourceset: EventEmitter<{\n    type: DimensionRows;\n    source: DataType[];\n  }>;\n\n  /**\n   * Emitted after each source update, whether from the pinned or main viewport.\n   * Useful for tracking all changes originating from sources in both the pinned and main viewports.\n   */\n  @Event() afteranysource: EventEmitter<{\n    type: DimensionRows;\n    source: DataType[];\n  }>;\n\n  /**\n   * Emitted before a column update is applied.\n   * Listeners can use this event to perform any necessary actions or modifications before the column update is finalized.\n   */\n  @Event() beforecolumnsset: EventEmitter<ColumnCollection>;\n\n  /**\n   * Emitted before a column update is applied, after the column set is gathered and the viewport is updated.\n   * Useful for performing actions or modifications before the final application of the column update.\n   */\n  @Event() beforecolumnapplied: EventEmitter<ColumnCollection>;\n\n  /**  Column updated */\n  @Event() aftercolumnsset: EventEmitter<{\n    columns: ColumnCollection;\n    order: SortingOrder;\n  }>;\n\n  /**\n   * Emitted before applying a filter to the data source.\n   * Use e.preventDefault() to prevent cell focus change.\n   * Modify if you need to change filters.\n   */\n  @Event() beforefilterapply: EventEmitter<{ collection: Record<ColumnProp, FilterCollectionItem> }>;\n\n  /**\n   * Emitted before applying a filter to the data source.\n   * Use e.preventDefault() to prevent the default behavior of trimming values and applying the filter.\n   * Modify the `collection` property if you want to change the filters.\n   * Modify the `itemsToFilter` property if you want to filter the indexes for trimming.\n   */\n  @Event() beforefiltertrimmed: EventEmitter<{\n    collection: Record<ColumnProp, FilterCollectionItem>;\n    itemsToFilter: Record<number, boolean>;\n  }>;\n\n  /**\n   * Emitted before trimming values.\n   * Use e.preventDefault() to prevent the default behavior of trimming values.\n   * Modify the `trimmed` property if you want to filter the indexes for trimming.\n   */\n  @Event() beforetrimmed: EventEmitter<{\n    trimmed: Record<number, boolean>;\n    trimmedType: string;\n    type: string;\n  }>;\n\n  /**\n   * Emitted after trimmed values have been applied.\n   * Useful for notifying when trimming of values has taken place.\n   */\n  @Event() aftertrimmed: EventEmitter;\n\n  /**\n   * Emitted when the viewport is scrolled.\n   * Useful for tracking viewport scrolling events.\n   */\n  @Event() viewportscroll: EventEmitter<ViewPortScrollEvent>;\n\n  /**\n   * Before export\n   * Use e.preventDefault() to prevent export\n   * Replace data in Event in case you want to modify it in export\n   */\n  @Event() beforeexport: EventEmitter<DataInput>;\n\n  /**\n   * Emitted before editing starts.\n   * Use e.preventDefault() to prevent the default edit behavior.\n   */\n  @Event() beforeeditstart: EventEmitter<BeforeSaveDataDetails>;\n\n  /**\n   * Emitted after column resizing.\n   * Useful for retrieving the resized columns.\n   */\n  @Event() aftercolumnresize: EventEmitter<{\n    [index: number]: ColumnRegular;\n  }>;\n\n  /**\n   * Emitted before the row definition is applied.\n   * Useful for modifying or preventing the default row definition behavior.\n   */\n  @Event() beforerowdefinition: EventEmitter<{ vals: any; oldVals: any }>;\n\n  /**\n   * Emitted when the filter configuration is changed\n   */\n  @Event() filterconfigchanged: EventEmitter;\n\n  /**\n   * Emitted when the sorting configuration is changed\n   * SortingPlugin subsribed to this event\n   */\n  @Event() sortingconfigchanged: EventEmitter<SortingConfig>;\n\n  /**\n   * Emmited when the row headers are changed.\n   */\n  @Event() rowheaderschanged: EventEmitter;\n\n  /**\n   * Emmited before the grid is rendered.\n   */\n  @Event() beforegridrender: EventEmitter;\n\n\n  /**\n   * Emmited after the grid is rendered.\n   */\n  @Event() aftergridrender: EventEmitter;\n\n  /**\n   * Emmited after the grid is initialized. Connected to the DOM.\n   */\n  @Event() aftergridinit: EventEmitter;\n\n  /**\n   * Emmited after the additional data is changed\n   */\n  @Event() additionaldatachanged: EventEmitter<any>;\n\n  /**\n   * Emmited after the theme is changed\n   */\n  @Event() afterthemechanged: EventEmitter<Theme>;\n\n\n  /**\n   * Emmited after grid created\n   */\n  @Event() created: EventEmitter;\n\n  // #endregion\n\n  // #region Methods\n  /**\n   * Refreshes data viewport.\n   * Can be specific part as rgRow or pinned rgRow or 'all' by default.\n   */\n  @Method() async refresh(type: DimensionRows | 'all' = 'all') {\n    if (!this.dataProvider) {\n      throw new Error('Not connected');\n    }\n    this.dataProvider.refresh(type);\n  }\n\n  /**\n   * Refreshes data at specified cell.\n   * Useful for performance optimization.\n   * No viewport update will be triggered.\n   * \n   * @example\n   * const grid = document.querySelector('revo-grid');\n   * grid.setDataAt({ row: 0, col: 0, val: 'test' }); // refresh\n   */\n  @Method() async setDataAt(\n    { row, col, colType = 'rgCol', rowType = 'rgRow', val, skipDataUpdate = false }: {\n      row: number; // virtual\n      col: number; // virtual\n      val?: any;\n      skipDataUpdate?: boolean;\n    } & AllDimensionType,\n  ) {\n    if (this.dataProvider && this.columnProvider && !skipDataUpdate) {\n      const columnProp = this.columnProvider.getColumn(col, colType)?.prop;\n      if (typeof columnProp !== 'undefined') {\n        this.dataProvider.setCellData({\n          type: rowType,\n          rowIndex: row,\n          prop: columnProp,\n          val,\n        }, false);\n      }\n    }\n    const dataElement: HTMLRevogrDataElement | null =\n      this.element.querySelector(\n        `revogr-data[type=\"${rowType}\"][col-type=\"${colType}\"]`,\n      );\n    return dataElement?.updateCell({\n      row,\n      col,\n    });\n  }\n\n  /**\n   * Scrolls viewport to specified row by index.\n   */\n  @Method() async scrollToRow(coordinate = 0) {\n    if (!this.dimensionProvider) {\n      throw new Error('Not connected');\n    }\n    const y = this.dimensionProvider.getViewPortPos({\n      coordinate,\n      dimension: 'rgRow',\n    });\n    await this.scrollToCoordinate({ y });\n  }\n\n  /**\n   * Scrolls viewport to specified column by index.\n   */\n  @Method() async scrollToColumnIndex(coordinate = 0) {\n    if (!this.dimensionProvider) {\n      throw new Error('Not connected');\n    }\n    const x = this.dimensionProvider.getViewPortPos({\n      coordinate,\n      dimension: 'rgCol',\n    });\n    await this.scrollToCoordinate({ x });\n  }\n\n  /**\n   * Scrolls viewport to specified column by prop\n   */\n  @Method() async scrollToColumnProp(\n    prop: ColumnProp,\n    dimension: DimensionTypeCol = 'rgCol',\n  ) {\n    if (!this.dimensionProvider || !this.columnProvider) {\n      throw new Error('Not connected');\n    }\n\n    const coordinate = this.columnProvider.getColumnIndexByProp(\n      prop,\n      dimension,\n    );\n    if (coordinate < 0) {\n      // already on the screen\n      return;\n    }\n    const x = this.dimensionProvider.getViewPortPos({\n      coordinate,\n      dimension,\n    });\n    await this.scrollToCoordinate({ x });\n  }\n\n  /** Update columns */\n  @Method() async updateColumns(cols: ColumnRegular[]) {\n    this.columnProvider?.updateColumns(cols);\n  }\n\n  /** Add trimmed by type */\n  @Method() async addTrimmed(\n    trimmed: Record<number, boolean>,\n    trimmedType = 'external',\n    type: DimensionRows = 'rgRow',\n  ) {\n    if (!this.dataProvider) {\n      throw new Error('Not connected');\n    }\n    const event = this.beforetrimmed.emit({\n      trimmed,\n      trimmedType,\n      type,\n    });\n    if (event.defaultPrevented) {\n      return event;\n    }\n    this.dataProvider.setTrimmed({ [trimmedType]: event.detail.trimmed }, type);\n    this.aftertrimmed.emit();\n    return event;\n  }\n\n  /**  Scrolls view port to coordinate */\n  @Method() async scrollToCoordinate(cell: Partial<Cell>) {\n    this.viewport?.scrollToCell(cell);\n  }\n\n  /**  Open editor for cell. */\n  @Method() async setCellEdit(\n    rgRow: number,\n    prop: ColumnProp,\n    rowSource: DimensionRows = 'rgRow',\n  ) {\n    const rgCol = getColumnByProp(this.columns, prop);\n    if (!rgCol) {\n      return;\n    }\n    await timeout();\n    const colGroup = rgCol.pin || 'rgCol';\n    if (!this.columnProvider) {\n      throw new Error('Not connected');\n    }\n    this.viewport?.setEdit(\n      rgRow,\n      this.columnProvider.getColumnIndexByProp(prop, colGroup),\n      colGroup,\n      rowSource,\n    );\n  }\n\n  /**  Set focus range. */\n  @Method() async setCellsFocus(\n    cellStart: Cell = { x: 0, y: 0 },\n    cellEnd: Cell = { x: 0, y: 0 },\n    colType = 'rgCol',\n    rowType = 'rgRow',\n  ) {\n    this.viewport?.setFocus(colType, rowType, cellStart, cellEnd);\n  }\n\n  /**  Get data from source */\n  @Method() async getSource(type: DimensionRows = 'rgRow') {\n    if (!this.dataProvider) {\n      throw new Error('Not connected');\n    }\n    return this.dataProvider.stores[type].store.get('source');\n  }\n\n  /**\n   * Get data from visible part of source\n   * Trimmed/filtered rows will be excluded\n   * @param type - type of source\n   */\n  @Method() async getVisibleSource(type: DimensionRows = 'rgRow') {\n    if (!this.dataProvider) {\n      throw new Error('Not connected');\n    }\n    return getVisibleSourceItem(this.dataProvider.stores[type].store);\n  }\n\n  /**\n   * Provides access to rows internal store observer\n   * Can be used for plugin support\n   * @param type - type of source\n   */\n  @Method() async getSourceStore(\n    type: DimensionRows = 'rgRow',\n  ): Promise<Observable<DSourceState<DataType, DimensionRows>>> {\n    if (!this.dataProvider) {\n      throw new Error('Not connected');\n    }\n    return this.dataProvider.stores[type].store;\n  }\n  /**\n   * Provides access to column internal store observer\n   * Can be used for plugin support\n   * @param type - type of column\n   */\n  @Method() async getColumnStore(\n    type: DimensionCols = 'rgCol',\n  ): Promise<Observable<DSourceState<ColumnRegular, DimensionCols>>> {\n    if (!this.columnProvider) {\n      throw new Error('Not connected');\n    }\n    return this.columnProvider.stores[type].store;\n  }\n\n  /**\n   * Update column sorting\n   * @param column - column prop and cellCompare\n   * @param order - order to apply\n   * @param additive - if false will replace current order\n   * \n   * later passed to SortingPlugin\n   */\n  @Method() async updateColumnSorting(\n    column: Pick<ColumnRegular, 'prop' | 'cellCompare'>,\n    order: 'asc' | 'desc' | undefined,\n    additive: boolean,\n  ) {\n    this.sortingconfigchanged.emit({\n      columns: [{\n        prop: column.prop,\n        order,\n        cellCompare: column.cellCompare,\n      }],\n      additive,\n    });\n  }\n\n  /**\n   * Clears column sorting\n   */\n  @Method() async clearSorting() {\n    this.sortingconfigchanged.emit({\n      columns: [],\n    });\n  }\n\n  /**\n   * Receive all columns in data source\n   */\n  @Method() async getColumns(): Promise<ColumnRegular[]> {\n    if (!this.columnProvider) {\n      throw new Error('Not connected');\n    }\n    return this.columnProvider.getColumns();\n  }\n\n  /**\n   * Clear current grid focus. Grid has no longer focus on it.\n   */\n  @Method() async clearFocus() {\n    const focused = this.viewport?.getFocused();\n    const event = this.beforefocuslost.emit(focused);\n    if (event.defaultPrevented) {\n      return;\n    }\n    this.selectionStoreConnector?.clearAll();\n  }\n\n  /**\n   * Get all active plugins instances\n   */\n  @Method() async getPlugins(): Promise<PluginBaseComponent[]> {\n    return this.pluginService.get();\n  }\n\n  /**\n   * Get the currently focused cell.\n   */\n  @Method() async getFocused(): Promise<FocusedData | null> {\n    return this.viewport?.getFocused() ?? null;\n  }\n\n  /**\n   * Get size of content\n   * Including all pinned data\n   */\n  @Method() async getContentSize(): Promise<Cell> {\n    if (!this.dimensionProvider) {\n      throw new Error('Not connected');\n    }\n    return this.dimensionProvider?.getFullSize();\n  }\n  /**\n   * Get the currently selected Range.\n   */\n  @Method() async getSelectedRange(): Promise<RangeArea & AllDimensionType | null> {\n    return this.viewport?.getSelectedRange() ?? null;\n  }\n\n  /**\n   * Refresh extra elements. Triggers re-rendering of extra elements and functions.\n   * Part of extraElements and registerVNode methods.\n   * Useful for plugins.\n   */\n  @Method() async refreshExtraElements() {\n    this.extraService?.refresh();\n  }\n\n  /**\n   * Get all providers for grid\n   * Useful for external grid integration\n   */\n  @Method() async getProviders() {\n    return this.getPluginData();\n  }\n\n  // #endregion\n\n  // #region Listeners outside scope\n  private clickTrackForFocusClear?: number;\n  @Listen('touchstart', { target: 'document' })\n  @Listen('mousedown', { target: 'document' })\n  mousedownHandle(event: MouseEvent | TouchEvent) {\n    const screenX = getPropertyFromEvent(event, 'screenX');\n    const screenY = getPropertyFromEvent(event, 'screenY');\n    if (screenX === null || screenY === null) {\n      return;\n    }\n\n    this.clickTrackForFocusClear = screenX + screenY;\n  }\n  /**\n   * To keep your elements from losing focus use mouseup/touchend e.preventDefault();\n   */\n  @Listen('touchend', { target: 'document' })\n  @Listen('mouseup', { target: 'document' })\n  async mouseupHandle(event: MouseEvent | TouchEvent) {\n    const screenX = getPropertyFromEvent(event, 'screenX');\n    const screenY = getPropertyFromEvent(event, 'screenY');\n    if (screenX === null || screenY === null) {\n      return;\n    }\n\n    if (event.defaultPrevented) {\n      return;\n    }\n    const pos = screenX + screenY;\n    // detect if mousemove then do nothing\n    if (Math.abs((this.clickTrackForFocusClear ?? 0) - pos) > 10) {\n      return;\n    }\n\n    // Check if action finished inside the document\n    // if event prevented, or it is current table don't clear focus\n    const path = event.composedPath();\n    if (!path.includes(this.element) &&\n        !(this.element.shadowRoot && path.includes(this.element.shadowRoot))\n      ) {\n      // Perform actions if the click is outside the component\n      await this.clearFocus();\n    }\n  }\n  // #endregion\n\n  // #region Listeners\n  /** Drag events */\n  @Listen('rowdragstartinit') onRowDragStarted(\n    e: CustomEvent<HTMLRevogrOrderEditorElementEventMap['rowdragstartinit']>,\n  ) {\n    const dragStart = this.rowdragstart.emit(e.detail);\n    if (dragStart.defaultPrevented) {\n      e.preventDefault();\n      return;\n    }\n    this.orderService?.start(this.element, {\n      ...e.detail,\n      ...dragStart.detail,\n    });\n  }\n\n  @Listen('rowdragendinit') onRowDragEnd() {\n    this.orderService?.end();\n  }\n\n  @Listen('roworderchange') onRowOrderChange(e: CustomEvent<HTMLRevogrOrderEditorElementEventMap['roworderchange']>) {\n    this.dataProvider?.changeOrder(e.detail);\n  }\n\n  @Listen('rowdragmoveinit') onRowDrag({ detail }: CustomEvent<PositionItem>) {\n    this.orderService?.move(detail);\n  }\n\n  @Listen('rowdragmousemove') onRowMouseMove(e: CustomEvent<Cell>) {\n    this.orderService?.moveTip(e.detail);\n  }\n\n  @Listen('celleditapply') async onCellEdit(\n    e: CustomEvent<BeforeSaveDataDetails>,\n  ) {\n    const { defaultPrevented, detail } = this.beforeedit.emit(e.detail);\n    await timeout();\n    // apply data\n    if (!defaultPrevented) {\n      this.dataProvider?.setCellData(detail);\n\n      // @feature: incrimental update for cells\n      // this.dataProvider.setCellData(detail, false);\n      // await this.setDataAt({\n      //   row: detail.rowIndex,\n      //   col: detail.colIndex,\n      //   rowType: detail.type,\n      //   colType: detail.colType,\n      // });\n      this.afteredit.emit(detail);\n    }\n  }\n\n  @Listen('rangeeditapply') onRangeEdit(\n    e: CustomEvent<HTMLRevogrOverlaySelectionElementEventMap['rangeeditapply']>,\n  ) {\n    if (!this.dataProvider) {\n      throw new Error('Not connected');\n    }\n    const { defaultPrevented, detail } = this.beforerangeedit.emit(e.detail);\n    if (defaultPrevented) {\n      e.preventDefault();\n      return;\n    }\n    this.dataProvider.setRangeData(detail.data, detail.type);\n    this.afteredit.emit(detail);\n  }\n\n  @Listen('selectionchangeinit') onRangeChanged(\n    e: CustomEvent<HTMLRevogrOverlaySelectionElementEventMap['selectionchangeinit']>) {\n    const beforeange = this.beforerange.emit(e.detail);\n    if (beforeange.defaultPrevented) {\n      e.preventDefault();\n    }\n    const beforeFill = this.beforeautofill.emit(beforeange.detail);\n    if (beforeFill.defaultPrevented) {\n      e.preventDefault();\n    }\n  }\n\n  @Listen('rowdropinit') onRowDropped(\n    e: CustomEvent<{ from: number; to: number }>,\n  ) {\n    // e.cancelBubble = true;\n    const { defaultPrevented } = this.roworderchanged.emit(e.detail);\n    if (defaultPrevented) {\n      e.preventDefault();\n    }\n  }\n\n  @Listen('beforeheaderclick') onHeaderClick(\n    e: CustomEvent<InitialHeaderClick>,\n  ) {\n    const { defaultPrevented } = this.headerclick.emit({\n      ...e.detail.column,\n      originalEvent: e.detail.originalEvent,\n    });\n    if (defaultPrevented) {\n      e.preventDefault();\n    }\n  }\n\n  @Listen('beforecellfocusinit') onCellFocus(\n    e: CustomEvent<BeforeSaveDataDetails>,\n  ) {\n    const { defaultPrevented } = this.beforecellfocus.emit(e.detail);\n    if (!this.canFocus || defaultPrevented) {\n      e.preventDefault();\n    }\n  }\n\n  // #endregion\n\n  // #region Private Properties\n  @Element() element: HTMLRevoGridElement;\n  extraElements: HTMLRevogrExtraElement['nodes'] = [];\n  /** \n   * Service for rendering extra elements as virtual nodes\n   * Part of extraElements and registerVNode methods\n   */\n  extraService?: HTMLRevogrExtraElement;\n\n  columnProvider?: ColumnDataProvider;\n  dataProvider?: DataProvider;\n  dimensionProvider?: DimensionProvider;\n  viewportProvider?: ViewportProvider;\n  themeService: ThemeService;\n  pluginService = new PluginService();\n  viewport: ViewportService | null = null;\n  isInited = false;\n\n  orderService: OrdererService;\n  selectionStoreConnector?: SelectionStoreConnector;\n  scrollingService: GridScrollingService;\n\n  // #endregion\n\n  // #region Watchers\n  @Watch('columnTypes') columnTypesChanged() {\n    // Column format change will trigger column structure update\n    this.columnChanged(this.columns);\n  }\n\n  @Watch('columns') columnChanged(\n    newVal: (ColumnGrouping | ColumnRegular)[] = [],\n    _prevVal: (ColumnGrouping | ColumnRegular)[] | undefined = undefined,\n    __watchName: string = 'columns',\n    init = false,\n  ) {\n    if (!this.dimensionProvider || !this.columnProvider) {\n      return;\n    }\n    const columnGather = getColumns(\n      newVal,\n      0,\n      this.columnTypes,\n    );\n    const beforeSetEvent = this.beforecolumnsset.emit(columnGather);\n    if (beforeSetEvent.defaultPrevented) {\n      return;\n    }\n    this.dimensionProvider.applyNewColumns(\n      beforeSetEvent.detail.columns,\n      this.disableVirtualX,\n      init,\n    );\n    const beforeApplyEvent = this.beforecolumnapplied.emit(columnGather);\n    if (beforeApplyEvent.defaultPrevented) {\n      return;\n    }\n    const columns = this.columnProvider.setColumns(beforeApplyEvent.detail);\n    this.aftercolumnsset.emit({\n      columns,\n      order: Object.entries(beforeApplyEvent.detail.sort).reduce((acc: SortingOrder, [prop, column]) => {\n        acc[prop] = column.order;\n        return acc;\n      }, {}),\n    });\n  }\n\n  @Watch('disableVirtualX') disableVirtualXChanged(\n    newVal = false,\n    prevVal = false,\n  ) {\n    if (newVal === prevVal) {\n      return;\n    }\n    this.columnChanged(this.columns);\n  }\n\n  @Watch('rowSize') rowSizeChanged(s: number) {\n    if (!this.dimensionProvider) {\n      return;\n    }\n    // clear existing data\n    this.dimensionProvider.setSettings({ originItemSize: s }, 'rgRow');\n    this.rowDefChanged(this.rowDefinitions, this.rowDefinitions, 'rowSize', true);\n  }\n\n  @Watch('theme') themeChanged(\n    t: Theme,\n    _?: Theme,\n    __ = 'theme',\n    init = false,\n  ) {\n    if (!this.dimensionProvider) {\n      return;\n    }\n    this.themeService.register(t);\n    this.dimensionProvider.setSettings(\n      { originItemSize: this.themeService.rowSize },\n      'rgRow',\n    );\n    this.dimensionProvider.setSettings(\n      { originItemSize: this.colSize },\n      'rgCol',\n    );\n    // if theme change we need to reapply row size and reset viewport\n    if (!init) {\n      // clear existing data\n      this.dimensionProvider.setSettings(\n        { originItemSize: this.themeService.rowSize },\n        'rgRow',\n      );\n      this.rowDefChanged(\n        // for cases when some custom size present and not\n        this.rowDefinitions,\n        this.rowDefinitions,\n        'theme',\n        true,\n      );\n    }\n    this.afterthemechanged.emit(t);\n  }\n\n  @Watch('source')\n  @Watch('pinnedBottomSource')\n  @Watch('pinnedTopSource')\n  dataSourceChanged<T extends DataType>(\n    newVal: T[] = [],\n    _: T[] | undefined,\n    watchName: string,\n  ) {\n    if (!this.dataProvider) {\n      return;\n    }\n    let type: DimensionRows = 'rgRow';\n    switch (watchName) {\n      case 'pinnedBottomSource':\n        type = 'rowPinEnd';\n        break;\n      case 'pinnedTopSource':\n        type = 'rowPinStart';\n        break;\n      case 'source':\n        type = 'rgRow';\n        /**\n         * Applied for source only for cross compatability between plugins\n         */\n        const beforesourceset = this.beforesourceset.emit({\n          type,\n          source: newVal,\n        });\n        newVal = beforesourceset.detail.source as T[];\n        break;\n    }\n    const beforesourceset = this.beforeanysource.emit({\n      type,\n      source: newVal,\n    });\n    const newSource = [...beforesourceset.detail.source];\n    this.dataProvider.setData(newSource, type, this.disableVirtualY);\n\n    /** \n     * Applied for source only for cross compatability between plugins\n     */\n    if (watchName === 'source') {\n      this.aftersourceset.emit({\n        type,\n        source: newVal,\n      });\n    }\n    this.afteranysource.emit({\n      type,\n      source: newVal,\n    });\n  }\n\n  @Watch('disableVirtualY') disableVirtualYChanged(\n    newVal = false,\n    prevVal = false,\n  ) {\n    if (newVal === prevVal) {\n      return;\n    }\n    this.dataSourceChanged(this.source, this.source, 'source');\n  }\n\n  @Watch('rowDefinitions') rowDefChanged(\n    after: RowDefinition[],\n    before?: RowDefinition[],\n    _watchName?: string,\n    forceUpdate = true,\n  ) {\n    // in firefox it's triggered before init\n    if (!this.dimensionProvider || !this.dataProvider) {\n      return;\n    }\n    const {\n      detail: { vals: newVal, oldVals: oldVal },\n    } = this.beforerowdefinition.emit({\n      vals: after,\n      oldVals: before,\n    });\n    // apply new values\n    const newRows = rowDefinitionByType(newVal);\n    // clear current defs\n    if (oldVal) {\n      const remove = rowDefinitionRemoveByType(oldVal);\n      // clear all old data and drop sizes\n      for (const t in remove) {\n        if (remove.hasOwnProperty(t)) {\n          const type = t as DimensionRows;\n          const store = this.dataProvider.stores[type];\n          const sourceLength = store.store.get('source').length;\n          this.dimensionProvider.clearSize(type, sourceLength);\n        }\n      }\n    }\n    // set new sizes\n    rowTypes.forEach((t) => {\n      const newSizes = newRows[t];\n      // apply new sizes or force update\n      if (newSizes || forceUpdate) {\n        this.dimensionProvider?.setCustomSizes(t, newSizes?.sizes || {});\n      }\n    });\n  }\n\n  @Watch('trimmedRows') trimmedRowsChanged(\n    newVal: Record<number, boolean> = {},\n  ) {\n    this.addTrimmed(newVal);\n  }\n  /**\n   * Grouping\n   */\n  @Watch('grouping') groupingChanged(newVal: GroupingOptions = {}) {\n    this.pluginService.getByClass(GroupingRowPlugin)?.setGrouping(newVal || {});\n  }\n  /**\n   * Stretch Plugin Apply\n   */\n  @Watch('stretch') applyStretch(isStretch: boolean | string) {\n    if (!this.dimensionProvider || !this.dataProvider || !this.columnProvider || !this.viewportProvider) {\n      return;\n    }\n    if (isStretch === 'false') {\n      isStretch = false;\n    }\n\n    const pluginData = this.getPluginData();\n    if (!pluginData) {\n      return;\n    }\n    const stretch = this.pluginService.getByClass(StretchColumn);\n    if ((typeof isStretch === 'boolean' && isStretch) || isStretch === 'true') {\n      if (!stretch) {\n        this.pluginService.add(new StretchColumn(this.element, pluginData));\n      } else if (isStretchPlugin(stretch)) {\n        stretch.applyStretch(this.columnProvider.getRawColumns());\n      }\n    } else if (stretch) {\n      this.pluginService.remove(stretch);\n    }\n  }\n\n  @Watch('filter') applyFilter(cfg: boolean | ColumnFilterConfig) {\n    this.filterconfigchanged.emit(cfg);\n  }\n\n  @Watch('sorting') applySorting(cfg?: SortingConfig) {\n    this.sortingconfigchanged.emit(cfg);\n  }\n\n  @Watch('rowHeaders') rowHeadersChange(rowHeaders?: RowHeaders | boolean) {\n    this.rowheaderschanged.emit(rowHeaders);\n  }\n\n  /**\n   * Register external VNodes\n   */\n  @Watch('registerVNode') registerOutsideVNodes(elements: HTMLRevogrExtraElement['nodes'] = []) {\n    this.extraElements = elements;\n  }\n\n  @Watch('additionalData') additionalDataChanged(data: any) {\n    this.additionaldatachanged.emit(data);\n  }\n\n  /**\n   * User can add plugins via plugins property\n   */\n  @Watch('plugins') pluginsChanged(plugins: GridPlugin[] = [], prevPlugins?: GridPlugin[]) {\n    this.pluginService.addUserPluginsAndCreate(this.element, plugins, prevPlugins, this.getPluginData());\n \n  }\n  // #endregion\n\n  // #region Plugins\n  private setPlugins() {\n    // remove old plugins if any\n    this.removePlugins();\n    // pass data provider to plugins\n    const pluginData = this.getPluginData();\n    if (!pluginData) {\n      return;\n    }\n\n    // register system plugins\n    this.setCorePlugins(pluginData);\n    // register user plugins\n    this.pluginsChanged(this.plugins);\n  }\n  \n  private setCorePlugins(pluginData: PluginProviders) {\n    if (this.accessible) {\n      this.pluginService.add(new WCAGPlugin(this.element, pluginData));\n    }\n\n    // register auto size plugin\n    if (this.autoSizeColumn) {\n      this.pluginService.add(new AutoSizeColumnPlugin(\n        this.element,\n        pluginData,\n        typeof this.autoSizeColumn === 'object'\n          ? this.autoSizeColumn\n          : undefined,\n      ));\n    }\n\n    // register filter plugin\n    if (this.filter) {\n      this.pluginService.add(\n        new FilterPlugin(\n          this.element,\n          pluginData,\n          typeof this.filter === 'object' ? this.filter : undefined,\n        ),\n      );\n    }\n\n    // register export plugin\n    if (this.exporting) {\n      this.pluginService.add(new ExportFilePlugin(this.element, pluginData));\n    }\n\n    // register sorting plugin\n    this.pluginService.add(new SortingPlugin(this.element, pluginData));\n\n    // register grouping plugin\n    this.pluginService.add(new GroupingRowPlugin(this.element, pluginData));\n    if (this.canMoveColumns) {\n      this.pluginService.add(new ColumnMovePlugin(this.element, pluginData));\n    }\n  }\n\n  getPluginData(): PluginProviders | undefined {\n    if (!this.dimensionProvider || !this.dataProvider || !this.columnProvider || !this.viewportProvider || !this.selectionStoreConnector) {\n      return;\n    }\n\n    // pass data provider to plugins\n    const pluginData: PluginProviders = {\n      data: this.dataProvider,\n      column: this.columnProvider,\n      dimension: this.dimensionProvider,\n      viewport: this.viewportProvider,\n      selection: this.selectionStoreConnector,\n      plugins: this.pluginService,\n    };\n\n    return pluginData;\n  }\n\n  private removePlugins() {\n    this.pluginService.destroy();\n  }\n  // #endregion\n\n\n  // if reconnect to dom we need to set up plugins\n  connectedCallback() {\n    if (this.isInited) {\n      this.setPlugins();\n    }\n    this.created.emit();\n  }\n\n  /**\n   * Called once just after the component is first connected to the DOM.\n   * Since this method is only called once, it's a good place to load data asynchronously and to setup the state\n   * without triggering extra re-renders.\n   * A promise can be returned, that can be used to wait for the first render().\n   */\n  componentWillLoad() {\n    // #region Setup Providers\n    this.viewportProvider = new ViewportProvider();\n    this.themeService = new ThemeService({\n      rowSize: this.rowSize,\n    });\n    this.dimensionProvider = new DimensionProvider(this.viewportProvider, {\n      realSizeChanged: (k: MultiDimensionType) =>\n        this.contentsizechanged.emit(k),\n    });\n    this.columnProvider = new ColumnDataProvider();\n    this.selectionStoreConnector = new SelectionStoreConnector();\n    this.dataProvider = new DataProvider(this.dimensionProvider);\n    // #endregion\n\n    this.registerOutsideVNodes(this.registerVNode);\n\n    // init plugins\n    this.setPlugins();\n\n    // set data\n    this.applyStretch(this.stretch);\n    this.themeChanged(this.theme, undefined, undefined, true);\n    this.columnChanged(this.columns, undefined, undefined, true);\n    this.dataSourceChanged(this.source, undefined, 'source');\n    this.dataSourceChanged(this.pinnedTopSource, undefined, 'pinnedTopSource');\n    this.dataSourceChanged(\n      this.pinnedBottomSource,\n      undefined,\n      'pinnedBottomSource',\n    );\n    if (Object.keys(this.trimmedRows ?? {}).length > 0) {\n      this.trimmedRowsChanged(this.trimmedRows);\n    }\n    this.rowDefChanged(this.rowDefinitions);\n\n    // init grouping\n    if (this.grouping && Object.keys(this.grouping).length > 0) {\n      this.groupingChanged(this.grouping);\n    }\n\n    // init scrolling service\n    this.scrollingService = new GridScrollingService(\n      (e: ViewPortScrollEvent) => {\n        this.dimensionProvider?.setViewPortCoordinate({\n          coordinate: e.coordinate,\n          type: e.dimension,\n        });\n        this.viewportscroll.emit(e);\n      },\n    );\n\n    this.aftergridinit.emit();\n    // set inited flag for connectedCallback\n    this.isInited = true;\n  }\n\n  componentWillRender() {\n    const event = this.beforegridrender.emit();\n    if (event.defaultPrevented) {\n      return false;\n    }\n    return Promise.all(this.jobsBeforeRender);\n  }\n\n  componentDidRender() {\n    this.aftergridrender.emit();\n  }\n\n  render() {\n    if (!this.dimensionProvider || !this.dataProvider || !this.columnProvider || !this.viewportProvider || !this.selectionStoreConnector) {\n      return;\n    }\n    const contentHeight =\n      this.dimensionProvider.stores['rgRow'].store.get('realSize');\n\n    // init viewport service helpers\n    this.viewport = new ViewportService(\n      {\n        columnProvider: this.columnProvider,\n        dataProvider: this.dataProvider,\n        dimensionProvider: this.dimensionProvider,\n        viewportProvider: this.viewportProvider,\n        scrollingService: this.scrollingService,\n        orderService: this.orderService,\n        selectionStoreConnector: this.selectionStoreConnector,\n        disableVirtualX: this.disableVirtualX,\n        disableVirtualY: this.disableVirtualY,\n        resize: c => this.aftercolumnresize.emit(c),\n      },\n      contentHeight,\n    );\n\n    // #region ViewportSections\n    /**\n     * The code renders a viewport divided into sections.\n     * It starts by rendering the pinned start, data, and pinned end sections.\n     * Within each section, it renders columns along with their headers, pinned top, center data, and pinned bottom.\n     * The code iterates over the columns and their data to generate the view port's HTML structure.\n     */\n\n    const viewportSections: (VNode | VNode[])[] = [];\n\n    // Row headers setting\n    if (this.rowHeaders && this.viewport.columns.length) {\n      const anyView = this.viewport.columns[0];\n      viewportSections.push(\n        <revogr-row-headers\n          additionalData={this.additionalData}\n          height={contentHeight}\n          rowClass={this.rowClass}\n          resize={this.resize}\n          dataPorts={anyView.dataPorts}\n          headerProp={anyView.headerProp}\n          jobsBeforeRender={this.jobsBeforeRender}\n          rowHeaderColumn={\n            typeof this.rowHeaders === 'object' ? this.rowHeaders : undefined\n          }\n          onScrollview={({ detail: e }: CustomEvent) =>\n            this.scrollingService.proxyScroll(e, 'headerRow')\n          }\n          onRef={({ detail: e }: CustomEvent) =>\n            this.scrollingService.registerElement(e, 'headerRow')\n          }\n        />,\n      );\n    }\n\n    // Viewport section render\n    const isMobile = isMobileDevice();\n    const viewPortHtml: VNode[] = [];\n\n    // Render viewports column(horizontal sections)\n    for (let view of this.viewport.columns) {\n      const headerProperties: HeaderProperties = {\n        ...view.headerProp,\n        type: view.type,\n        additionalData: this.additionalData,\n        viewportCol: view.viewportCol,\n        selectionStore: view.columnSelectionStore,\n        canResize: this.resize,\n        readonly: this.readonly,\n        columnFilter: !!this.filter,\n      };\n      // Column headers\n      const dataViews: VNode[] = [\n        <revogr-header {...headerProperties} slot={HEADER_SLOT} />,\n      ];\n\n      // Render viewport data (vertical sections)\n      view.dataPorts.forEach(data => {\n        const key = `${data.type}_${view.type}`;\n        const dataView = (\n          <revogr-overlay-selection\n            {...data}\n            canDrag={this.canDrag && data.canDrag}\n            isMobileDevice={isMobile}\n            onSelectall={() => this.selectionStoreConnector?.selectAll()}\n            editors={this.editors}\n            readonly={this.readonly}\n            range={this.range}\n            useClipboard={this.useClipboard}\n            applyChangesOnClose={this.applyOnClose}\n            additionalData={this.additionalData}\n            slot={data.slot}\n            onBeforenextvpfocus={(e) => this.selectionStoreConnector?.beforeNextFocusCell(e.detail)}\n            onCanceledit={() => this.selectionStoreConnector?.setEdit(false)}\n            onSetedit={({ detail }) => {\n              const event = this.beforeeditstart.emit(detail);\n              if (!event.defaultPrevented) {\n                this.selectionStoreConnector?.setEdit(detail.val);\n              }\n            }}\n          >\n            <revogr-data\n              {...data}\n              colType={view.type}\n              key={key}\n              readonly={this.readonly}\n              range={this.range}\n              rowClass={this.rowClass}\n              rowSelectionStore={data.rowSelectionStore}\n              additionalData={this.additionalData}\n              jobsBeforeRender={this.jobsBeforeRender}\n              slot={DATA_SLOT}\n            >\n              <slot name={`data-${view.type}-${data.type}`} />\n            </revogr-data>\n            <revogr-temp-range\n              selectionStore={data.selectionStore}\n              dimensionRow={data.dimensionRow}\n              dimensionCol={data.dimensionCol}\n            />\n            <revogr-focus\n              colData={data.colData}\n              dataStore={data.dataStore}\n              focusTemplate={this.focusTemplate}\n              rowType={data.type}\n              colType={view.type}\n              selectionStore={data.selectionStore}\n              dimensionRow={data.dimensionRow}\n              dimensionCol={data.dimensionCol}\n            >\n              <slot name={`focus-${view.type}-${data.type}`} />\n            </revogr-focus>\n          </revogr-overlay-selection>\n        );\n\n        dataViews.push(dataView);\n      });\n\n      // Add viewport scroll in the end\n      viewPortHtml.push(\n        <revogr-viewport-scroll\n          {...view.prop}\n          ref={el =>\n            this.scrollingService.registerElement(el, `${view.prop.key}`)\n          }\n          onScrollviewport={e =>\n            this.scrollingService.proxyScroll(e.detail, `${view.prop.key}`)\n          }\n          onScrollviewportsilent={e =>\n            this.scrollingService.scrollSilentService(\n              e.detail,\n              `${view.prop.key}`,\n            )\n          }\n        >\n          {dataViews}\n        </revogr-viewport-scroll>,\n      );\n    }\n\n    viewportSections.push(viewPortHtml);\n    // #endregion\n\n    const typeRow: DimensionType = 'rgRow';\n    const typeCol: DimensionType = 'rgCol';\n\n    const viewports = this.viewportProvider.stores;\n    const dimensions = this.dimensionProvider.stores;\n\n    const verticalScroll = (\n      <revogr-scroll-virtual\n        class=\"vertical\"\n        dimension={typeRow}\n        clientSize={viewports[typeRow].store.get('clientSize')}\n        virtualSize={viewports[typeRow].store.get('virtualSize')}\n        realSize={dimensions[typeRow].store.get('realSize')}\n        ref={el => this.scrollingService.registerElement(el, 'rowScroll')}\n        onScrollvirtual={e => this.scrollingService.proxyScroll(e.detail)}\n      />\n    );\n\n    const horizontalScroll = (\n      <revogr-scroll-virtual\n          class=\"horizontal\"\n          dimension={typeCol}\n          clientSize={viewports[typeCol].store.get('clientSize')}\n          virtualSize={viewports[typeCol].store.get('virtualSize')}\n          realSize={dimensions[typeCol].store.get('realSize')}\n          ref={el => this.scrollingService.registerElement(el, 'colScroll')}\n          onScrollvirtual={e => this.scrollingService.proxyScroll(e.detail)}\n        />\n    );\n\n    return (\n      <Host>\n        {this.hideAttribution ? null : (\n          <revogr-attribution class=\"attribution\" />\n        )}\n        <slot name=\"header\" />\n        <div\n          class=\"main-viewport\"\n          onClick={(e: MouseEvent) => {\n            if (e.currentTarget === e.target) {\n              this.viewport?.clearEdit();\n            }\n          }}\n        >\n          <div class=\"viewports\">\n            <slot name=\"viewport\" />\n            {viewportSections}\n            {verticalScroll}\n            <OrderRenderer ref={e => (this.orderService = e)} />\n          </div>\n        </div>\n        {horizontalScroll}\n        <revogr-extra ref={el => (this.extraService = el)} nodes={this.extraElements} />\n        <slot name=\"footer\" />\n      </Host>\n    );\n  }\n\n  disconnectedCallback() {\n    // Remove all plugins, to avoid memory leaks\n    // and unexpected behaviour when the component is removed\n    this.removePlugins();\n  }\n}\n"]}