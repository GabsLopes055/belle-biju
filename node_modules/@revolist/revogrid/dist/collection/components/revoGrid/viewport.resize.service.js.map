{"version":3,"file":"viewport.resize.service.js","sourceRoot":"","sources":["../../../src/components/revoGrid/viewport.resize.service.ts"],"names":[],"mappings":"AAAA,OAAO,QAAQ,MAAM,iBAAiB,CAAC;AAKvC,MAAM,CAAC,OAAO,OAAO,iBAAiB;IAqBpC,YACE,EAAe,EACE,MAGR,EACT,QAAqC;QAJpB,WAAM,GAAN,MAAM,CAGd;QAzBH,mBAAc,GAA0B,IAAI,CAAC;QAC7C,iBAAY,GAAgB;YAClC,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,CAAC;SACV,CAAC;QACO,UAAK,GAAG,QAAQ,CACvB,CAAC,CAAoC,EAAE,EAAE;;YACvC,MAAM,KAAK,GAAG;gBACZ,KAAK,EAAE,CAAC,CAAC,KAAK;gBACd,MAAM,EAAE,CAAC,CAAC,MAAM;aACjB,CAAC;YACF,MAAA,IAAI,CAAC,MAAM,qDAAG,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YACxC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,EACD,EAAE,EACF;YACE,OAAO,EAAE,KAAK;YACd,QAAQ,EAAE,IAAI;SACf,CACF,CAAC;QASA,MAAM,MAAM,GAAkB,EAAE,CAAC;QACjC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC3B,IAAI,OAAO,EAAE,CAAC;gBACZ,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACvB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;IACxB,CAAC;IAED,IAAI,CAAC,EAAe,EAAE,SAAwB,EAAE;QAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE;YAC9D,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;gBACb,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,EAAE,EAAE,CAAC;oBACvB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;gBAC/B,CAAC;qBAAM,CAAC;oBACN,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,qBAAqB,EAAE,CAAC,CAAC;gBACzC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACrB,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACvB,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;;QACL,MAAA,IAAI,CAAC,cAAc,0CAAE,UAAU,EAAE,CAAC;QAClC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC7B,CAAC;CACF","sourcesContent":["import throttle from 'lodash/throttle';\ntype ResizeEntry = {\n  width: number;\n  height: number;\n};\nexport default class GridResizeService {\n  private resizeObserver: ResizeObserver | null = null;\n  private previousSize: ResizeEntry = {\n    width: 0,\n    height: 0,\n  };\n  readonly apply = throttle(\n    (e: { width: number, height: number }) => {\n      const entry = {\n        width: e.width,\n        height: e.height,\n      };\n      this.resize?.(entry, this.previousSize);\n      this.previousSize = entry;\n    },\n    40,\n    {\n      leading: false,\n      trailing: true,\n    }\n  );\n  constructor(\n    el: HTMLElement,\n    private readonly resize: (\n      entry: ResizeEntry,\n      previousSize: ResizeEntry,\n    ) => void,\n    elements: (HTMLElement | undefined)[],\n  ) {\n    const extras: HTMLElement[] = [];\n    elements.forEach((element) => {\n      if (element) {\n        extras.push(element);\n      }\n    });\n    this.init(el, extras);\n  }\n\n  init(el: HTMLElement, extras: HTMLElement[] = []) {\n    const observer = this.resizeObserver = new ResizeObserver((e) => {\n      if (e.length) {\n        if (e[0].target === el) {\n          this.apply(e[0].contentRect);\n        } else {\n          this.apply(el.getBoundingClientRect());\n        }\n      }\n    });\n    observer.observe(el);\n    extras.forEach((extra) => {\n      observer.observe(extra);\n    });\n  }\n\n  destroy() {\n    this.resizeObserver?.disconnect();\n    this.resizeObserver = null;\n  }\n}\n"]}