{"version":3,"file":"revogr-extra.js","sourceRoot":"","sources":["../../../src/components/extra/revogr-extra.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAS,MAAM,eAAe,CAAC;AAGzE;;;;;;;;;;;;;;;;;;;GAmBG;AAIH,MAAM,OAAO,aAAa;;qBAOlB,EAAE;sBAIU,CAAC;;IAEnB;;;OAGG;IACO,KAAK,CAAC,OAAO;QACrB,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC;IAED,MAAM;;QACJ,OAAO,MAAA,IAAI,CAAC,KAAK,0CAAE,GAAG,CAAC,IAAI,CAAC,EAAE;YAC5B,qDAAqD;YACrD,uEAAuE;YACvE,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE,CAAC;gBAC/B,MAAM,MAAM,GAAiC,EAAE,CAAC;gBAChD,MAAM,QAAQ,GAAG,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,WAAC,OAAA,MAAA,MAAM,CAAC,OAAO,sDAAI,CAAA,EAAA,EAAE,CAAC,CAAC,CAAC;gBAErE,OAAO,CACL,oBACE,KAAK,EAAE,QAAQ,EAAE,EACjB,GAAG,EAAE,CAAC,EAA2B,EAAE,EAAE;wBACnC,IAAI,EAAE,EAAE,CAAC;4BACP,sCAAsC;4BACtC,MAAM,CAAC,OAAO,GAAG,GAAG,EAAE;gCACpB,EAAE,CAAC,KAAK,GAAG,QAAQ,EAAE,CAAC;4BACxB,CAAC,CAAC;wBACJ,CAAC;oBACH,CAAC,GACD,CACH,CAAC;YACJ,CAAC;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { h, Component, Method, Prop, State, VNode } from '@stencil/core';\nimport type { ExtraNodeFuncConfig } from '@type';\n\n/**\n * Contains extra elements for stencil components.\n * Performs rendering and updates for external components.\n * \n * @example\n * In Plugins if you want to add extra elements to grid and use stenciljs vnodes reactivity:\n * function paginationPanel(this: PaginationPlugin, config: { refresh: () => void }) {\n *    // use `config.refresh()` for component to re-render\n *    return h('div')\n * }\n * \n * revogrid.registerVNode = [\n *    ...existingNodes,\n *     paginationPanel.bind(this)\n * ];\n\n\n/**\n * @internal\n */\n@Component({\n  tag: 'revogr-extra',\n})\nexport class RevoGridExtra {\n  /**\n   * Nodes to render\n   */\n  @Prop() nodes: (\n    | VNode\n    | ((c: ExtraNodeFuncConfig) => VNode)\n  )[] = [];\n  /**\n   * Force component to re-render\n   */\n  @State() update = 1;\n\n  /**\n   * Refreshes the extra component. Useful if you want to manually\n   * force the component to re-render.\n   */\n  @Method() async refresh() {\n    this.update *= -1;\n  }\n\n  render() {\n    return this.nodes?.map(node => {\n      // Check if node is a function or a stencil component\n      // If function wrap it in a stencil component with the refresh function\n      if (typeof node === 'function') {\n        const config: Partial<ExtraNodeFuncConfig> = {};\n        const getNodes = () => [node({ refresh: () => config.refresh?.() })];\n\n        return (\n          <revogr-extra\n            nodes={getNodes()}\n            ref={(el?: HTMLRevogrExtraElement) => {\n              if (el) {\n                // Update exclusively for current node\n                config.refresh = () => {\n                  el.nodes = getNodes();\n                };\n              }\n            }}\n          />\n        );\n      }\n      return node;\n    });\n  }\n}\n"]}