{"version":3,"file":"revogr-header.js","sourceRoot":"","sources":["../../../src/components/header/revogr-header.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Prop,\n  type VNode,\n} from '@stencil/core';\nimport keyBy from 'lodash/keyBy';\n\nimport { getItemByIndex, Groups } from '@store';\nimport { HEADER_ACTUAL_ROW_CLASS, HEADER_ROW_CLASS } from '../../utils/consts';\nimport HeaderRenderer, { HeaderRenderProps } from './header-renderer';\nimport { ResizeProps } from './resizable.directive';\nimport type {\n  ColumnRegular,\n  DimensionSettingsState,\n  InitialHeaderClick,\n  ViewportState,\n  ViewSettingSizeProp,\n  DimensionCols,\n  SelectionStoreState,\n  RangeArea,\n  VirtualPositionItem,\n  ProvidersColumns,\n} from '@type';\nimport type { Observable } from '../../utils';\nimport GroupHeaderRenderer, {\n  HeaderGroupRendererProps,\n} from './header-group-renderer';\n\n@Component({\n  tag: 'revogr-header',\n  styleUrl: 'revogr-header-style.scss',\n})\nexport class RevogrHeaderComponent {\n  // #region Properties\n  /**\n   * Stores\n   */\n  /** Viewport X */\n  @Prop() viewportCol: Observable<ViewportState>;\n  /** Dimension settings X */\n  @Prop() dimensionCol: Observable<DimensionSettingsState>;\n  /** Selection, range, focus */\n  @Prop() selectionStore: Observable<SelectionStoreState>;\n\n  /**\n   * Column groups\n   */\n  @Prop() groups: Groups;\n  /**\n   * Grouping depth, how many levels of grouping\n   */\n  @Prop() groupingDepth = 0;\n\n  /**\n   * Readonly mode\n   */\n  @Prop() readonly: boolean;\n  /**\n   * If columns can be resized\n   */\n  @Prop() canResize: boolean;\n  /**\n   * Defines resize position\n   */\n  @Prop() resizeHandler: ResizeProps['active'];\n\n  /**\n   * Columns - defines an array of grid columns.\n   */\n  @Prop() colData: ColumnRegular[];\n\n  /**\n   * Column filter\n   */\n  @Prop() columnFilter: boolean;\n\n  /**\n   * Column type\n   */\n  @Prop() type!: DimensionCols | 'rowHeaders';\n\n  /**\n   * Extra properties to pass into header renderer, such as vue or react components to handle parent\n   */\n  @Prop() additionalData: any = {};\n  // #endregion\n\n  // #region Events\n\n  /**\n   * On initial header click\n   */\n  @Event({\n    eventName: 'beforeheaderclick',\n  })\n  initialHeaderClick: EventEmitter<InitialHeaderClick>;\n\n  /**\n   * On header resize\n   */\n  @Event({\n    eventName: 'headerresize',\n  })\n  headerresize: EventEmitter<ViewSettingSizeProp>;\n\n  /**\n   * On before header resize\n   */\n  @Event({ eventName: 'beforeheaderresize', cancelable: true })\n  beforeResize: EventEmitter<ColumnRegular[]>;\n\n  /**\n   * On header double click\n   */\n  @Event({\n    eventName: 'headerdblclick',\n  })\n  headerdblClick: EventEmitter<InitialHeaderClick>;\n\n  /**\n   * Before each header cell render function. Allows to override cell properties\n   */\n  @Event({ eventName: 'beforeheaderrender' })\n  beforeHeaderRender: EventEmitter<HeaderRenderProps>;\n\n  /**\n   * Before each group header cell render function. Allows to override group header cell properties\n   */\n  @Event({ eventName: 'beforegroupheaderrender' })\n  beforeGroupHeaderRender: EventEmitter<HeaderGroupRendererProps>;\n\n  /**\n   * After all header cells rendered. Finalizes cell rendering.\n   */\n  @Event({ eventName: 'afterheaderrender' })\n  afterHeaderRender: EventEmitter<ProvidersColumns>;\n\n  // #endregion\n\n  @Element() element!: HTMLElement;\n\n  private onResize({ width }: { width?: number }, index: number) {\n    const col = this.colData[index];\n    const event = this.beforeResize.emit([\n      {\n        ...col,\n        size: width || undefined,\n      },\n    ]);\n    if (event.defaultPrevented) {\n      return;\n    }\n    this.headerresize.emit({ [index]: width || 0 });\n  }\n\n  private onResizeGroup(\n    changedX: number,\n    startIndex: number,\n    endIndex: number,\n  ) {\n    const sizes: ViewSettingSizeProp = {};\n    const cols = keyBy(this.viewportCol.get('items'), 'itemIndex');\n    const change = changedX / (endIndex - startIndex + 1);\n    for (let i = startIndex; i <= endIndex; i++) {\n      const item = cols[i];\n      if (item) {\n        sizes[i] = item.size + change;\n      }\n    }\n    this.headerresize.emit(sizes);\n  }\n\n  componentDidRender() {\n    this.afterHeaderRender.emit(this.providers);\n  }\n\n  render() {\n    const cols = this.viewportCol.get('items');\n    const range = this.selectionStore?.get('range');\n\n    const { cells } = this.renderHeaderColumns(cols, range);\n    const groupRow = this.renderGroupingColumns();\n\n    return [\n      <div class=\"group-rgRow\">{groupRow}</div>,\n      <div class={`${HEADER_ROW_CLASS} ${HEADER_ACTUAL_ROW_CLASS}`}>\n        {cells}\n      </div>,\n    ];\n  }\n\n  private renderHeaderColumns(\n    cols: VirtualPositionItem[],\n    range: RangeArea | null,\n  ) {\n    const cells: VNode[] = [];\n    for (let rgCol of cols) {\n      const colData = this.colData[rgCol.itemIndex];\n      const props: HeaderRenderProps = {\n        range,\n        column: rgCol,\n        data: {\n          ...colData,\n          index: rgCol.itemIndex,\n          providers: this.providers,\n        },\n        canFilter: !!this.columnFilter,\n        canResize: this.canResize,\n        active: this.resizeHandler,\n        additionalData: this.additionalData,\n        onResize: e => this.onResize(e, rgCol.itemIndex),\n        onDblClick: e => this.headerdblClick.emit(e),\n        onClick: e => this.initialHeaderClick.emit(e),\n      };\n      const event = this.beforeHeaderRender.emit(props);\n      if (!event.defaultPrevented) {\n        cells.push(<HeaderRenderer {...event.detail} />);\n      }\n    }\n    return { cells };\n  }\n\n  private renderGroupingColumns(): VNode[] {\n    const groupRow: VNode[] = [];\n    for (let i = 0; i < this.groupingDepth; i++) {\n      if (this.groups[i]) {\n        for (let group of this.groups[i]) {\n          const groupStartIndex = group.indexes[0] ?? -1;\n          if (groupStartIndex > -1) {\n            const groupEndIndex = groupStartIndex + group.indexes.length - 1;\n\n            const groupStart = getItemByIndex(\n              this.dimensionCol.state,\n              groupStartIndex,\n            ).start;\n            const groupEnd = getItemByIndex(\n              this.dimensionCol.state,\n              groupEndIndex,\n            ).end;\n\n            const props: HeaderGroupRendererProps = {\n              providers: this.providers,\n              start: groupStart,\n              end: groupEnd,\n              group,\n              active: this.resizeHandler,\n              canResize: this.canResize,\n              additionalData: this.additionalData,\n              onResize: e =>\n                this.onResizeGroup(\n                  e.changedX ?? 0,\n                  groupStartIndex,\n                  groupEndIndex,\n                ),\n            };\n            const event = this.beforeGroupHeaderRender.emit(props);\n            if (!event.defaultPrevented) {\n              groupRow.push(<GroupHeaderRenderer {...event.detail} />);\n            }\n          }\n        }\n      }\n      groupRow.push(<div class={`${HEADER_ROW_CLASS} group`} />);\n    }\n    return groupRow;\n  }\n\n  get providers(): ProvidersColumns<DimensionCols | 'rowHeaders'> {\n    return {\n      type: this.type,\n      readonly: this.readonly,\n      data: this.colData,\n      viewport: this.viewportCol,\n      dimension: this.dimensionCol,\n      selection: this.selectionStore,\n    };\n  }\n}\n"]}