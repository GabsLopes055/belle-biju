{"version":3,"file":"viewport.interfaces.js","sourceRoot":"","sources":["../../src/types/viewport.interfaces.ts"],"names":[],"mappings":"","sourcesContent":["import type { JSXBase } from '@stencil/core/internal';\nimport type {\n  DimensionCols,\n  ColumnRegular,\n  ViewPortScrollEvent,\n  ViewportState,\n  Cell,\n  SelectionStoreState,\n} from '@type';\nimport type {\n  DimensionStoreCollection,\n  ViewportStoreCollection,\n  DSourceState,\n} from '@store';\nimport type { Observable } from '../utils';\nimport type { RowDataSources } from '../services/data.provider';\nimport type { JSX } from '..';\n\nexport type SlotType = 'content' | 'header' | 'footer';\n\nexport interface ElementScroll {\n  changeScroll?(\n    e: ViewPortScrollEvent,\n    silent?: boolean,\n  ): Promise<ViewPortScrollEvent | undefined>;\n  setScroll?(e: ViewPortScrollEvent): Promise<void>;\n}\nexport type ElementsScroll = { [key: string]: ElementScroll[] };\n\nexport type HeaderProperties = JSX.RevogrHeader;\n\nexport type ViewportProperties = JSX.RevogrViewportScroll &\n  JSXBase.HTMLAttributes<HTMLRevogrViewportScrollElement>;\n\nexport type ViewportColumn = {\n  colType: DimensionCols;\n  position: Cell;\n\n  fixWidth?: boolean;\n\n  viewports: ViewportStoreCollection;\n  dimensions: DimensionStoreCollection;\n\n  rowStores: RowDataSources;\n  colStore: Observable<DSourceState<ColumnRegular, DimensionCols>>;\n} & Partial<JSX.RevogrViewportScroll> &\n  Partial<JSX.RevogrHeader>;\n\nexport type ViewportData = {\n  /** Slot to put data */\n  slot: SlotType;\n  style?: { [key: string]: string };\n} & JSX.RevogrOverlaySelection &\n  (Pick<JSXBase.HTMLAttributes<HTMLRevogrOverlaySelectionElement>, 'ref'> &\n    Pick<JSXBase.HTMLAttributes<HTMLRevogrDataElement>, 'ref'>) &\n  JSX.RevogrData;\n\nexport type ViewportProps = {\n  prop: JSX.RevogrViewportScroll &\n    JSXBase.HTMLAttributes<HTMLRevogrViewportScrollElement>;\n  position: Cell;\n  type: DimensionCols;\n  /** Cols dataset */\n  viewportCol: Observable<ViewportState>;\n\n  /** header container props */\n  headerProp: HeaderProperties;\n\n  /** parent selector link */\n  // parent: string;\n\n  /** viewport rows */\n  dataPorts: ViewportData[];\n\n  columnSelectionStore: Observable<SelectionStoreState>;\n};\n"]}