{"version":3,"file":"dispatcher.js","sourceRoot":"","sources":["../../src/plugins/dispatcher.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AACH,MAAM,UAAU,QAAQ,CACtB,MAA4B,EAC5B,SAAiB,EACjB,MAAuB;IAEvB,qEAAqE;IACrE,MAAM,KAAK,GAAG,IAAI,WAAW,CAAiB,SAAS,EAAE;QACvD,MAAM;QACN,UAAU,EAAE,IAAI,EAAE,+CAA+C;QACjE,OAAO,EAAE,IAAI,EAAE,0DAA0D;KAC1E,CAAC,CAAC;IAEH,4CAA4C;IAC5C,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,aAAa,CAAC,KAAK,CAAC,CAAC;IAE7B,+CAA+C;IAC/C,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;;;;;;GAOG;AACH,MAAM,UAAU,eAAe,CAC7B,CAAgD,EAAE,6EAA6E;AAC/H,SAAiB,EAAE,gCAAgC;AACnD,MAAuB;IAEvB,sDAAsD;IACtD,CAAC,CAAC,cAAc,EAAE,CAAC;IAEnB,0FAA0F;IAC1F,OAAO,QAAQ,CAAiB,CAAC,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;AAC/D,CAAC","sourcesContent":["/**\n * Dispatches a custom event to a specified target element.\n *\n * @param target - The target element to dispatch the event to.\n * @param eventName - The name of the custom event.\n * @param detail - Optional. The detail of the custom event.\n * @returns The custom event that was dispatched.\n */\nexport function dispatch<DispatchDetail = any>(\n  target: MouseEvent['target'],\n  eventName: string,\n  detail?: DispatchDetail,\n) {\n  // Create a new CustomEvent with the specified event name and detail.\n  const event = new CustomEvent<DispatchDetail>(eventName, {\n    detail,\n    cancelable: true, // Indicates whether the event can be canceled.\n    bubbles: true, // Indicates whether the event bubbles up through the DOM.\n  });\n\n  // Dispatch the event on the target element.\n  target?.dispatchEvent(event);\n\n  // Return the custom event that was dispatched.\n  return event;\n}\n\n/**\n * Dispatches a custom event based on an existing event object and prevents the default behavior of the original event.\n *\n * @param e - The original event object containing the target and preventDefault method.\n * @param eventName - The name of the custom event.\n * @param detail - Optional. The detail of the custom event.\n * @returns The custom event that was dispatched.\n */\nexport function dispatchByEvent<DispatchDetail = any>(\n  e: Pick<MouseEvent, 'target' | 'preventDefault'>, // The original event object containing the target and preventDefault method.\n  eventName: string, // The name of the custom event.\n  detail?: DispatchDetail, // Optional. The detail of the custom event.\n): CustomEvent {\n  // Prevent the default behavior of the original event.\n  e.preventDefault();\n\n  // Dispatch the custom event to the target element specified in the original event object.\n  return dispatch<DispatchDetail>(e.target, eventName, detail);\n}\n"]}