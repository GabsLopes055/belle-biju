{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/plugins/wcag/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { CellProps, PluginProviders } from '@type';\nimport { BasePlugin } from '../base.plugin';\nimport { ColumnCollection } from 'src/utils';\n\n/**\n * WCAG Plugin is responsible for enhancing the accessibility features of the RevoGrid component.\n * It ensures that the grid is fully compliant with Web Content Accessibility Guidelines (WCAG) 2.1.\n * This plugin should be the last plugin you add, as it modifies the grid's default behavior.\n *\n * The WCAG Plugin performs the following tasks:\n * - Sets the 'dir' attribute to 'ltr' for left-to-right text direction.\n * - Sets the 'role' attribute to 'treegrid' for treelike hierarchical structure.\n * - Sets the 'aria-keyshortcuts' attribute to 'Enter' and 'Esc' for keyboard shortcuts.\n * - Adds event listeners for keyboard navigation and editing.\n *\n * By default, the plugin adds ARIA roles and properties to the grid elements, providing semantic information\n * for assistive technologies. These roles include 'grid', 'row', and 'gridcell'. The plugin also sets\n * ARIA attributes such as 'aria-rowindex', 'aria-colindex', and 'aria-selected'.\n *\n * The WCAG Plugin ensures that the grid is fully functional and usable for users with various disabilities,\n * including visual impairments, deaf-blindness, and cognitive disabilities.\n *\n * Note: The WCAG Plugin should be added as the last plugin in the list of plugins, as it modifies the grid's\n * default behavior and may conflict with other plugins if added earlier.\n */\nexport class WCAGPlugin extends BasePlugin {\n  constructor(revogrid: HTMLRevoGridElement, providers: PluginProviders) {\n    super(revogrid, providers);\n\n    revogrid.setAttribute('dir', 'ltr');\n    revogrid.setAttribute('role', 'treegrid');\n    revogrid.setAttribute('aria-keyshortcuts', 'Enter');\n    revogrid.setAttribute('aria-multiselectable', 'true');\n    revogrid.setAttribute('tabindex', '0');\n\n    /**\n     * Before Columns Set Event\n     */\n    this.addEventListener(\n      'beforecolumnsset',\n      ({ detail }: CustomEvent<ColumnCollection>) => {\n        const columns = [\n          ...detail.columns.colPinStart,\n          ...detail.columns.rgCol,\n          ...detail.columns.colPinEnd,\n        ];\n\n        revogrid.setAttribute('aria-colcount', `${columns.length}`);\n\n        columns.forEach((column, index) => {\n          const { columnProperties, cellProperties } = column;\n\n          column.columnProperties = (...args) => {\n            const result = columnProperties?.(...args) || {};\n\n            result.role = 'columnheader';\n            result['aria-colindex'] = index;\n\n            return result;\n          };\n\n          column.cellProperties = (...args) => {\n            const wcagProps: CellProps = {\n              ['role']: 'gridcell',\n              ['aria-colindex']: index,\n              ['aria-rowindex']: args[0].rowIndex,\n              ['tabindex']: -1,\n            };\n            const columnProps: CellProps = cellProperties?.(...args) || {};\n\n            return {\n              ...wcagProps,\n              ...columnProps,\n            };\n          };\n        });\n      },\n    );\n\n    /**\n     * Before Row Set Event\n     */\n    this.addEventListener(\n      'beforesourceset',\n      ({\n        detail,\n      }: CustomEvent<HTMLRevoGridElementEventMap['beforesourceset']>) => {\n        revogrid.setAttribute('aria-rowcount', `${detail.source.length}`);\n      },\n    );\n    this.addEventListener(\n      'beforerowrender',\n      ({\n        detail,\n      }: CustomEvent<HTMLRevogrDataElementEventMap['beforerowrender']>) => {\n        detail.node.$attrs$ = {\n          ...detail.node.$attrs$,\n          role: 'row',\n          ['aria-rowindex']: detail.item.itemIndex,\n        };\n      },\n    );\n\n    // focuscell\n    this.addEventListener(\n      'afterfocus',\n      async (\n        e: CustomEvent<HTMLRevogrFocusElementEventMap['afterfocus']>,\n      ) => {\n        if (e.defaultPrevented) {\n          return;\n        }\n        const el = this.revogrid.querySelector(\n          `revogr-data[type=\"${e.detail.rowType}\"][col-type=\"${e.detail.colType}\"] [data-rgrow=\"${e.detail.rowIndex}\"][data-rgcol=\"${e.detail.colIndex}\"]`,\n        );\n        if (el instanceof HTMLElement) {\n          el.focus();\n        }\n      },\n    );\n  }\n}\n"]}