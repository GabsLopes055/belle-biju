{"version":3,"file":"headerGroupRenderer.js","sourceRoot":"","sources":["../../../src/plugins/groupingColumn/headerGroupRenderer.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAIlC,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAChE,OAAO,EAAE,kBAAkB,EAAE,MAAM,8CAA8C,CAAC;AAYlF,MAAM,mBAAmB,GAAG,CAAC,CAAQ,EAAwB,EAAE;IAC7D,MAAM,UAAU,GAAqC;QACnD,SAAS,EAAE,CAAC,CAAC,SAAS;QACtB,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,YAAY;QAC3C,QAAQ,EAAE,CAAC;QAEX,MAAM,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC;QACzB,KAAK,EAAE;YACL,CAAC,YAAY,CAAC,EAAE,IAAI;SACrB;QACD,KAAK,EAAE;YACL,SAAS,EAAE,cAAc,CAAC,CAAC,KAAK,KAAK;YACrC,KAAK,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,IAAI;SAC9B;QACD,QAAQ,EAAE,CAAC,CAAC,QAAQ;KACrB,CAAC;IACF,OAAO,CACL,EAAC,kBAAkB,IACjB,IAAI,kCACC,CAAC,CAAC,KAAK,KACV,IAAI,EAAE,EAAE,EACR,SAAS,EAAE,CAAC,CAAC,SAAS,EACtB,KAAK,EAAE,CAAC,CAAC,KAAK,KAEhB,KAAK,EAAE,UAAU,EACjB,cAAc,EAAE,CAAC,CAAC,cAAc,GAChC,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,mBAAmB,CAAC","sourcesContent":["import { h } from '@stencil/core';\nimport { Group } from '@store';\nimport type { CellProps, Providers, DimensionCols } from '@type';\nimport { ResizeEvent, ResizeProps } from '../../components/header/resizable.directive';\nimport { HEADER_CLASS, MIN_COL_SIZE } from '../../utils/consts';\nimport { HeaderCellRenderer } from '../../components/header/header-cell-renderer';\n\ntype Props = {\n  start: number;\n  end: number;\n  group: Group;\n  providers: Providers<DimensionCols | 'rowHeaders'>;\n  additionalData: any;\n  canResize?: boolean;\n  onResize?(e: ResizeEvent): void;\n} & Partial<Pick<ResizeProps, 'active'>>;\n\nconst GroupHeaderRenderer = (p: Props): ReturnType<typeof h> => {\n  const groupProps: CellProps & Partial<ResizeProps> = {\n    canResize: p.canResize,\n    minWidth: p.group.ids.length * MIN_COL_SIZE,\n    maxWidth: 0,\n\n    active: p.active || ['r'],\n    class: {\n      [HEADER_CLASS]: true,\n    },\n    style: {\n      transform: `translateX(${p.start}px)`,\n      width: `${p.end - p.start}px`,\n    },\n    onResize: p.onResize,\n  };\n  return (\n    <HeaderCellRenderer\n      data={{\n        ...p.group,\n        prop: '',\n        providers: p.providers,\n        index: p.start,\n      }}\n      props={groupProps}\n      additionalData={p.additionalData}\n    />\n  );\n};\n\nexport default GroupHeaderRenderer;\n"]}