{"version":3,"file":"grouping.row.types.js","sourceRoot":"","sources":["../../../src/plugins/groupingRow/grouping.row.types.ts"],"names":[],"mappings":"","sourcesContent":["import type { VNode } from '@stencil/core';\nimport type { HyperFunc, ColumnProp, DimensionRows, DataType } from '@type';\n\nexport type GroupLabelTemplateFunc = (\n  createElement: HyperFunc<VNode>,\n  props: { name: string; itemIndex: number; expanded: boolean; depth: number; model?: DataType },\n) => any;\n\nexport type GroupingOptions = {\n  /**\n   * Column props to which grouping will be applied\n   */\n  props?: ColumnProp[];\n\n  /**\n   * Currently expanded items.\n   * Corresponds to prop values as: source = [{ me: 'a' }, { me: 'b' }, { me: 'c' }], to set expanded: { a: true }\n   */\n  prevExpanded?: Record<string, boolean>;\n  \n  /**\n   * Is expanded by default\n   */\n  expandedAll?: boolean;\n\n  /**\n   * Should grouping be preserved on source update.\n   * default: true\n   */\n  preserveGroupingOnUpdate?: boolean;\n  /**\n   * Custom group label template\n   */\n  groupLabelTemplate?: GroupLabelTemplateFunc;\n} & ExpandedOptions;\n\nexport type BeforeSourceSetEvent = {\n  type: DimensionRows;\n  source: DataType[];\n};\n\nexport type OnExpandEvent = {\n  model: DataType;\n  virtualIndex: number;\n};\n\nexport type SourceGather = {\n  source: DataType[];\n  prevExpanded: Record<string, boolean>;\n  oldNewIndexes?: Record<number, number>;\n};\n\nexport type ExpandedOptions = {\n  prevExpanded?: Record<string, boolean>;\n  /**\n   * Is expanded by default\n   */\n  expandedAll?: boolean;\n\n  /**\n   * Custom group label value parser\n   */\n  getGroupValue?(item: DataType, prop: string | number): any;\n  /**\n   * Custom group label template\n   */\n  groupLabelTemplate?: GroupLabelTemplateFunc;\n};"]}