{"version":3,"names":["GroupHeaderRenderer","p","groupProps","canResize","minWidth","group","ids","length","MIN_COL_SIZE","maxWidth","active","class","HEADER_CLASS","style","transform","start","width","end","onResize","h","HeaderCellRenderer","data","Object","assign","prop","providers","index","props","additionalData","ColumnGroupsRenderer","depth","groups","visibleProps","dimensionCol","groupRow","i","indexFirstVisibleCol","findIndex","id","colVisibleIndex","groupStartIndex","groupEndIndex","groupStart","getItemByIndex","groupEnd","push","e","_a","changedX","HEADER_ROW_CLASS","PADDING_DEPTH","RowRenderer","rowClass","size","cells","DATA_ROW","height","paddingLeft","undefined","expandEvent","model","virtualIndex","event","CustomEvent","detail","cancelable","bubbles","target","dispatchEvent","GroupingRowRenderer","itemIndex","hasExpand","groupingCustomRenderer","name","PSEUDO_GROUP_ITEM","expanded","GROUP_EXPANDED","parseInt","GROUP_DEPTH","onClick","GROUP_EXPAND_BTN","focusable","viewBox","fill","d","RowHighlightPlugin","constructor","this","currentRange","selectionChange","renderedRows","forEach","row","y","y1","$elm$","HTMLElement","classList","contains","ROW_FOCUSED_CLASS","remove","$attrs$","includes","replace","get","attrs","add","isRowFocused","convertVNodeToHTML","parentHolder","redraw","Promise","resolve","vnode","document","createElement","appendChild","addEventListener","renderCell","v","els","template","schemaModel","column","cellTemplate","rowDrag","isRowDragService","DRAGGABLE_CLASS","onMouseDown","originalEvent","dragStartCell","emit","DRAG_ICON_CLASS","getCellDataParsed","CellRenderer","renderProps","cellProps","render","bind","revogrDataStyleCss","RevogrDataStyle0","RevogrData","Map","updateCell","cell","_b","$children$","col","_c","children","element","innerHTML","html","$key$","Math","random","onDataStoreChange","onStoreChange","onColDataChange","columnService","destroy","ColumnService","dataStore","colData","type","readonly","viewport","viewportCol","dimension","dimensionRow","selection","rowSelectionStore","rangeUnsubscribe","call","onChange","rowHighlightPlugin","connectedCallback","disconnectedCallback","componentWillRender","beforeDataRender","rowType","colType","all","jobsBeforeRender","map","componentDidRender","afterrender","columnsData","columns","rows","viewportRow","cols","rowsEls","groupDepth","hasGrouping","rgRow","dataItem","getSourceItem","isGrouping","rgCol","smodel","rowDataModel","cellEvent","triggerBeforeCellRender","defaultPrevented","columnProps","rowProps","defaultProps","DATA_COL","mergeProperties","cellNode","getRowClass","beforerowrender","node","item","set","Host","beforeCellRender","defineProperty","func","getNative","defineProperty$1","baseAssignValue","object","key","value","configurable","enumerable","writable","arrayAggregator","array","setter","iteratee","accumulator","baseAggregator","collection","baseEach","createAggregator","initializer","isArray","baseIteratee","keyBy","result","keyBy$1","HeaderRenderer","cellClass","HEADER_SORTABLE_CLASS","sortable","order","dataProps","minSize","_d","maxSize","onDblClick","range","x","x1","FOCUS_CLASS","SortingSign","canFilter","_e","filter","FilterButton","revogrHeaderStyleCss","RevogrHeaderStyle0","RevogrHeaderComponent","beforeResize","headerresize","onResizeGroup","startIndex","endIndex","sizes","change","afterHeaderRender","selectionStore","columnFilter","resizeHandler","headerdblClick","initialHeaderClick","beforeHeaderRender","state","groupingDepth","HEADER_ACTUAL_ROW_CLASS","async","resizeObserver","window","module","import","ResizeObserver","GridResizeService","el","events","resize","throttle","o","init","observe","disconnect","revogrViewportScrollStyleCss","RevogrViewportScrollStyle0","RevogrViewportScroll","setScroll","localScrollTimer","latestScrollUpdate","localScrollService","changeScroll","silent","coordinate","verticalScroll","delta","horizontalScroll","scrollLeft","scrollTop","mousewheelVertical","verticalMouseWheel","mousewheelHorizontal","horizontalMouseWheel","scrollApply","applyOnScroll","onVerticalMouseWheel","onHorizontalMouseWheel","LocalScrollTimer","documentElement","LocalScrollService","runScroll","scrollViewport","applyScroll","setCoordinate","componentDidLoad","resizeService","entries","contentRect","header","clientHeight","footer","contentSize","contentHeight","scroll","_f","noScroll","_g","contentWidth","dim","resizeViewport","rowHeader","_h","_j","setScrollVisibility","innerContentSize","hasScroll","scrollchange","setParams","clientSize","virtualSize","clientWidth","onWheel","onScroll","ref","HEADER_SLOT","CONTENT_SLOT","FOOTER_SLOT","silentScroll","outside","isReady","scrollHeight","atBottom","deltaY","atTop","preventDefault","pos","deltaX","scrollWidth","atRight","atLeft","VNodeToHtml","vnodes","visibility","position"],"sources":["src/plugins/groupingColumn/headerGroupRenderer.tsx","src/plugins/groupingColumn/columnGroupsRenderer.tsx","src/components/data/row-renderer.tsx","src/plugins/groupingRow/grouping.row.renderer.tsx","src/components/data/row-highlight.plugin.ts","src/components/vnode/vnode.utils.ts","src/components/data/cell-renderer.tsx","src/components/data/revogr-data-style.scss?tag=revogr-data","src/components/data/revogr-data.tsx","node_modules/lodash/_defineProperty.js","node_modules/lodash/_baseAssignValue.js","node_modules/lodash/_arrayAggregator.js","node_modules/lodash/_baseAggregator.js","node_modules/lodash/_createAggregator.js","node_modules/lodash/keyBy.js","src/components/header/header-renderer.tsx","src/components/header/revogr-header-style.scss?tag=revogr-header","src/components/header/revogr-header.tsx","src/utils/resize-observer.polifill.ts","src/components/revoGrid/viewport.resize.service.ts","src/components/scroll/revogr-viewport-scroll-style.scss?tag=revogr-viewport-scroll","src/components/scroll/revogr-viewport-scroll.tsx","src/components/vnode/vnode-converter.tsx"],"sourcesContent":["import { h } from '@stencil/core';\nimport { Group } from '@store';\nimport type { CellProps, Providers, DimensionCols } from '@type';\nimport { ResizeEvent, ResizeProps } from '../../components/header/resizable.directive';\nimport { HEADER_CLASS, MIN_COL_SIZE } from '../../utils/consts';\nimport { HeaderCellRenderer } from '../../components/header/header-cell-renderer';\n\ntype Props = {\n  start: number;\n  end: number;\n  group: Group;\n  providers: Providers<DimensionCols | 'rowHeaders'>;\n  additionalData: any;\n  canResize?: boolean;\n  onResize?(e: ResizeEvent): void;\n} & Partial<Pick<ResizeProps, 'active'>>;\n\nconst GroupHeaderRenderer = (p: Props): ReturnType<typeof h> => {\n  const groupProps: CellProps & Partial<ResizeProps> = {\n    canResize: p.canResize,\n    minWidth: p.group.ids.length * MIN_COL_SIZE,\n    maxWidth: 0,\n\n    active: p.active || ['r'],\n    class: {\n      [HEADER_CLASS]: true,\n    },\n    style: {\n      transform: `translateX(${p.start}px)`,\n      width: `${p.end - p.start}px`,\n    },\n    onResize: p.onResize,\n  };\n  return (\n    <HeaderCellRenderer\n      data={{\n        ...p.group,\n        prop: '',\n        providers: p.providers,\n        index: p.start,\n      }}\n      props={groupProps}\n      additionalData={p.additionalData}\n    />\n  );\n};\n\nexport default GroupHeaderRenderer;\n","import { h } from '@stencil/core';\nimport findIndex from 'lodash/findIndex';\nimport { Group, getItemByIndex } from '@store';\nimport { DimensionSettingsState, Providers, DimensionCols } from '@type';\nimport { HEADER_ROW_CLASS } from '../../utils/consts';\nimport GroupHeaderRenderer from './headerGroupRenderer';\nimport { ResizeProps } from '../../components/header/resizable.directive';\n\ntype Props<T> = {\n  visibleProps: { [prop: string]: number };\n  groups: Record<number, Group[]>;\n  dimensionCol: Pick<DimensionSettingsState, 'indexes' | 'originItemSize' | 'indexToItem'>;\n  depth: number;\n  canResize: boolean;\n  providers: Providers<T>;\n  additionalData: any;\n  onResize(changedX: number, startIndex: number, endIndex: number): void;\n} & Partial<Pick<ResizeProps, 'active'>>;\n\nconst ColumnGroupsRenderer = ({\n  additionalData, providers, depth, groups, visibleProps, dimensionCol, canResize, active, onResize\n}: Props<DimensionCols | 'rowHeaders'>): ReturnType<typeof h>[] => {\n  // render group columns\n  const groupRow: ReturnType<typeof h>[] = [];\n  for (let i = 0; i < depth; i++) {\n    if (groups[i]) {\n      for (let group of groups[i]) {\n        // if group in visible range\n        // find first visible group prop in visible columns range\n        const indexFirstVisibleCol: number | undefined = findIndex(group.ids, id => typeof visibleProps[id] === 'number');\n        if (indexFirstVisibleCol > -1) {\n          const colVisibleIndex = visibleProps[group.ids[indexFirstVisibleCol]]; // get column index\n          const groupStartIndex = colVisibleIndex - indexFirstVisibleCol; // first column index in group\n          const groupEndIndex = groupStartIndex + group.ids.length - 1; // last column index in group\n\n          // coordinates\n          const groupStart = getItemByIndex(dimensionCol, groupStartIndex).start;\n          const groupEnd = getItemByIndex(dimensionCol, groupEndIndex).end;\n          groupRow.push(\n            <GroupHeaderRenderer\n              providers={providers}\n              start={groupStart}\n              end={groupEnd}\n              group={group}\n              active={active}\n              canResize={canResize}\n              onResize={e => onResize(e.changedX ?? 0, groupStartIndex, groupEndIndex)}\n              additionalData={additionalData}\n            />,\n          );\n        }\n      }\n    }\n    groupRow.push(<div class={`${HEADER_ROW_CLASS} group`} />);\n  }\n  return groupRow;\n};\n\nexport default ColumnGroupsRenderer;\n","import { h, type VNode } from '@stencil/core';\nimport { JSXBase } from '@stencil/core/internal';\nimport { DATA_ROW } from '../../utils/consts';\n\nexport interface RowProps extends JSXBase.HTMLAttributes {\n  size: number;\n  start: number;\n  index: number;\n  rowClass?: string;\n  depth?: number;\n}\n\nexport const PADDING_DEPTH = 10;\n\nconst RowRenderer = ({ rowClass, index, size, start, depth }: RowProps, cells: VNode[]) => {\n  const props = {\n    ...{ [DATA_ROW]: index },\n  };\n  return (\n    <div\n      {...props}\n      class={`rgRow ${rowClass || ''}`}\n      style={{\n        height: `${size}px`,\n        transform: `translateY(${start}px)`,\n        paddingLeft: depth ? `${PADDING_DEPTH * depth}px` : undefined,\n      }}\n    >\n      {cells}\n    </div>\n  );\n};\n\nexport default RowRenderer;\n","import { h } from '@stencil/core';\nimport RowRenderer, { RowProps } from '../../components/data/row-renderer';\nimport { GROUP_DEPTH, GROUP_EXPANDED, GROUP_EXPAND_BTN, PSEUDO_GROUP_ITEM } from './grouping.const';\nimport { GroupLabelTemplateFunc } from './grouping.row.types';\nimport { DataType, PositionItem } from '@type';\nimport { RevoGridCustomEvent } from 'src';\n\ninterface GroupRowPros extends RowProps {\n  model: DataType;\n  hasExpand: boolean;\n  groupingCustomRenderer?: GroupLabelTemplateFunc | null;\n}\ntype Props = GroupRowPros & PositionItem;\n\nfunction expandEvent(e: MouseEvent, model: DataType, virtualIndex: number) {\n  const event = new CustomEvent('groupexpandclick', {\n    detail: {\n      model,\n      virtualIndex,\n    },\n    cancelable: true,\n    bubbles: true,\n  }) as RevoGridCustomEvent<HTMLRevoGridElementEventMap['groupexpandclick']>;\n  e.target?.dispatchEvent(event);\n}\n\nconst GroupingRowRenderer = (props: Props) => {\n  const { model, itemIndex, hasExpand, groupingCustomRenderer } = props;\n  const name = model[PSEUDO_GROUP_ITEM];\n  const expanded = model[GROUP_EXPANDED];\n  const depth = parseInt(model[GROUP_DEPTH], 10) || 0;\n  \n  if (!hasExpand) {\n    return <RowRenderer {...props} rowClass=\"groupingRow\" depth={depth} />;\n  }\n\n  if (groupingCustomRenderer) {\n    return (\n      <RowRenderer {...props} rowClass=\"groupingRow\" depth={depth}>\n        <div onClick={e => expandEvent(e, model, itemIndex)}>\n          {groupingCustomRenderer(h, { name, model, itemIndex, expanded, depth })}\n        </div>\n      </RowRenderer>\n    );\n  }\n\n  return (\n    <RowRenderer {...props} rowClass=\"groupingRow\" depth={depth}>\n      <button class={{ [GROUP_EXPAND_BTN]: true }} onClick={e => expandEvent(e, model, itemIndex)}>\n        <svg aria-hidden=\"true\" style={{ transform: `rotate(${!expanded ? -90 : 0}deg)` }} focusable=\"false\" viewBox=\"0 0 448 512\">\n          <path\n            fill=\"currentColor\"\n            d=\"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z\"\n          ></path>\n        </svg>\n      </button>\n      {name}\n    </RowRenderer>\n  );\n};\nexport default GroupingRowRenderer;\n","import { type VNode } from '@stencil/core';\nimport { ROW_FOCUSED_CLASS } from '../../utils/consts';\nimport { RangeArea } from '@type';\n\n/**\n * Class is responsible for highlighting rows in a table.\n */\nexport class RowHighlightPlugin {\n  private currentRange: RangeArea | null = null;\n  selectionChange(e: RangeArea, renderedRows: Map<number, VNode>) {\n    // clear previous range\n    if (this.currentRange) {\n      renderedRows.forEach((row, y) => {\n        // skip current range\n        if (e && y >= e.y && y <= e.y1) {\n          return;\n        }\n\n        // clear previous range\n        if (\n          row &&\n          row.$elm$ instanceof HTMLElement &&\n          row.$elm$.classList.contains(ROW_FOCUSED_CLASS)\n        ) {\n          row.$elm$.classList.remove(ROW_FOCUSED_CLASS);\n          if (row.$attrs$?.class.includes(ROW_FOCUSED_CLASS)) {\n            row.$attrs$.class = row.$attrs$.class.replace(\n              ROW_FOCUSED_CLASS,\n              '',\n            );\n          }\n        }\n      });\n    }\n\n    // apply new range\n    if (e) {\n      for (let y = e.y; y <= e.y1; y++) {\n        const row = renderedRows.get(y);\n        if (\n          row &&\n          row.$elm$ instanceof HTMLElement &&\n          !row.$elm$.classList.contains(ROW_FOCUSED_CLASS)\n        ) {\n          const attrs = (row.$attrs$ = row.$attrs$ || {});\n          attrs.class = (attrs.class || '') + ' ' + ROW_FOCUSED_CLASS;\n          row.$elm$.classList.add(ROW_FOCUSED_CLASS);\n        }\n      }\n    }\n    this.currentRange = e;\n  }\n\n  isRowFocused(y: number) {\n    return (\n      this.currentRange && y >= this.currentRange.y && y <= this.currentRange.y1\n    );\n  }\n}\n","import { type VNode } from '@stencil/core';\nimport { type JSX } from '../../components';\n\n/**\n * Converts a VNode element into an HTML element and appends it to the specified parentHolder.\n */\nexport function convertVNodeToHTML(parentHolder: Element, redraw: JSX.VnodeHtml['redraw']): Promise<{ html: string; vnodes: (VNode[]) | null }> {\n  return new Promise<{ html: string; vnodes: (VNode[]) | null }>(resolve => {\n    const vnode = document.createElement('vnode-html');\n    parentHolder.appendChild(vnode);\n    vnode.redraw = redraw;\n    vnode.addEventListener('html', e => {\n      vnode.remove();\n      resolve(e.detail);\n    });\n  });\n}\n","import { h, type VNode, Build, EventEmitter } from '@stencil/core';\nimport {\n  DragStartEvent,\n  CellTemplateProp,\n} from '@type';\n\nimport {\n  DRAGGABLE_CLASS,\n  DRAG_ICON_CLASS,\n  getCellDataParsed,\n} from '../../utils';\n\nimport { isRowDragService } from './column.service';\n\ninterface RenderProps {\n  schemaModel: CellTemplateProp;\n  additionalData?: any;\n  dragStartCell?: EventEmitter<DragStartEvent>;\n}\n\n\nfunction renderCell(v: RenderProps) {\n  const els: (VNode | string)[] = [];\n\n  // #region Custom cell\n  const template = v.schemaModel.column?.cellTemplate;\n  if (template) {\n    els.push(template(h, v.schemaModel, v.additionalData));\n  }\n  // #endregion\n\n  // #region Regular cell\n  else {\n    if (!v.schemaModel.column) {\n      // something is wrong with data\n      if (Build.isDev) {\n        console.error('Investigate column problem.', v.schemaModel);\n      }\n      return '';\n    }\n\n    // Row drag\n    if (\n      v.schemaModel.column.rowDrag &&\n      isRowDragService(v.schemaModel.column.rowDrag, v.schemaModel)\n    ) {\n      els.push(\n        <span\n          class={DRAGGABLE_CLASS}\n          onMouseDown={originalEvent =>\n            v.dragStartCell?.emit({\n              originalEvent,\n              model: v.schemaModel,\n            })\n          }\n        >\n          <span class={DRAG_ICON_CLASS} />\n        </span>,\n      );\n    }\n    \n    els.push(`${\n      getCellDataParsed(v.schemaModel.model, v.schemaModel.column)\n    }`);\n  }\n  return els;\n}\n\nexport const CellRenderer = ({\n  renderProps,\n  cellProps,\n}: {\n  renderProps: RenderProps;\n  cellProps: any;\n}): VNode => {\n  const render = renderCell.bind(null, renderProps);\n  return (\n    <div {...cellProps} redraw={render}>\n      {render()}\n    </div>\n  );\n};\n","revogr-data {\n  display: block;\n  width: 100%;\n  position: relative;\n\n  .rgRow {\n    position: absolute;\n    width: 100%;\n    left: 0;\n\n    &.groupingRow {\n      font-weight: 600;\n      text-align: left;\n\n      .group-expand {\n        width: 25px;\n        height: 100%;\n        max-height: 25px;\n        margin-right: 2px;\n        background-color: transparent;\n        border-color: transparent;\n        vertical-align: middle;\n        padding-left: 5px;\n\n        svg {\n          width: 7px;\n        }\n      }\n    }\n  }\n\n  .revo-draggable {\n    $w: 24px;\n\n    border: none;\n    height: 32px;\n    display: inline-flex;\n    outline: 0;\n    padding: 0;\n    font-size: 0.8125rem;\n    box-sizing: border-box;\n    align-items: center;\n    white-space: nowrap;\n    vertical-align: middle;\n    justify-content: center;\n    text-decoration: none;\n    width: $w;\n    height: 100%;\n    cursor: pointer;\n    display: inline-flex;\n\n    &:hover {\n      > .revo-drag-icon {\n        opacity: 1;\n        zoom: 1.2;\n        font-weight: 600;\n      }\n    }\n\n    > .revo-drag-icon {\n      pointer-events: none;\n      transition: opacity 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, zoom 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n    }\n  }\n\n  .rgCell {\n    top: 0;\n    left: 0;\n    position: absolute;\n    box-sizing: border-box;\n    height: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    outline: none;\n\n    &.align-center {\n      text-align: center;\n    }\n    &.align-left {\n      text-align: left;\n    }\n    &.align-right {\n      text-align: right;\n    }\n  }\n}\n","import {\n  type VNode,\n  Component,\n  Host,\n  Watch,\n  Element,\n  Event,\n  Prop,\n  EventEmitter,\n  h,\n  Method,\n  State,\n} from '@stencil/core';\n\nimport ColumnService from './column.service';\nimport { DATA_COL, DATA_ROW, ROW_FOCUSED_CLASS } from '../../utils/consts';\n\nimport { DSourceState, getSourceItem } from '@store';\nimport RowRenderer, { PADDING_DEPTH } from './row-renderer';\nimport GroupingRowRenderer from '../../plugins/groupingRow/grouping.row.renderer';\nimport { isGrouping } from '../../plugins/groupingRow/grouping.service';\nimport { AllDimensionType, CellTemplateProp, DimensionCols, DimensionRows } from '@type';\nimport { RowHighlightPlugin } from './row-highlight.plugin';\nimport { convertVNodeToHTML } from '../vnode/vnode.utils';\nimport { CellRenderer } from './cell-renderer';\nimport {\n  ViewportState,\n  DimensionSettingsState,\n  BeforeRowRenderEvent,\n  Providers,\n  ColumnRegular,\n  DataType,\n  CellProps,\n  BeforeCellRenderEvent,\n  DragStartEvent,\n  VirtualPositionItem,\n  RangeArea,\n  SelectionStoreState,\n} from '@type';\nimport { Observable } from '../../utils';\n\n/**\n * This component is responsible for rendering data\n * Rows, columns, groups and cells\n */\n@Component({\n  tag: 'revogr-data',\n  styleUrl: 'revogr-data-style.scss',\n})\nexport class RevogrData {\n  // #region Properties\n  /**\n   * Readonly mode\n   */\n  @Prop() readonly: boolean;\n  /**\n   * Range allowed\n   */\n  @Prop() range: boolean;\n\n  /**\n   * Defines property from which to read row class\n   */\n  @Prop() rowClass: string;\n  /**\n   * Additional data to pass to renderer\n   * Used in plugins such as vue or react to pass root app entity to cells\n   */\n  @Prop() additionalData: any;\n  /** Stores */\n  /** Selection, range, focus for row selection */\n  @Prop() rowSelectionStore!: Observable<SelectionStoreState>;\n  /** Viewport Y */\n  @Prop() viewportRow!: Observable<ViewportState>;\n  /** Viewport X */\n  @Prop() viewportCol!: Observable<ViewportState>;\n  /** Dimension settings Y */\n  @Prop() dimensionRow!: Observable<DimensionSettingsState>;\n\n  /** Static stores, not expected to change during component lifetime */\n  /**\n   * Column source\n   */\n  @Prop() colData!: Observable<DSourceState<ColumnRegular, DimensionCols>>;\n  /**\n   * Data rows source\n   */\n  @Prop() dataStore!: Observable<DSourceState<DataType, DimensionRows>>;\n  /**\n   * Row data type\n   */\n  @Prop({ reflect: true }) type!: DimensionRows;\n\n  /**\n   * Column data type\n   */\n  @Prop({ reflect: true }) colType!: DimensionCols | 'rowHeaders';\n\n  /**\n   * Prevent rendering until job is done.\n   * Can be used for initial rendering performance improvement.\n   * When several plugins require initial rendering this will prevent double initial rendering.\n   */\n  @Prop() jobsBeforeRender: (Promise<any> | (() => Promise<any>))[] = [];\n  // #endregion\n\n  /**\n   * Before each row render\n   */\n  @Event() beforerowrender: EventEmitter<BeforeRowRenderEvent>;\n  \n  /**\n   * When data render finished for the designated type\n   */\n  @Event() afterrender: EventEmitter<{ type: DimensionRows }>;\n  /**\n   * Before each cell render function. Allows to override cell properties\n   */\n  @Event({ eventName: 'beforecellrender' })\n  beforeCellRender: EventEmitter<BeforeCellRenderEvent<CellTemplateProp>>;\n\n  /**\n   * Before data render\n   */\n  @Event({ eventName: 'beforedatarender' })\n  beforeDataRender: EventEmitter<AllDimensionType>;\n  /**\n   * Event emitted on cell drag start\n   */\n  @Event({ eventName: 'dragstartcell' })\n  dragStartCell: EventEmitter<DragStartEvent>;\n\n  /**\n   * Pointed cell update.\n   */\n  @Method() async updateCell(e: {\n    row: number; // virtual\n    col: number; // virtual\n  }) {\n    // Stencil tweak to update cell content\n    const cell = this.renderedRows.get(e.row)?.$children$?.[e.col];\n    if (cell?.$attrs$?.redraw) {\n      const children = await convertVNodeToHTML(\n        this.element,\n        cell.$attrs$.redraw,\n      );\n      cell.$elm$.innerHTML = children.html;\n      cell.$key$ = Math.random();\n    }\n  }\n\n  @Element() element!: Element;\n  @State() providers: Providers;\n  private columnService: ColumnService;\n  private rowHighlightPlugin: RowHighlightPlugin;\n  /**\n   * Rendered rows - virtual index vs vnode\n   */\n  private renderedRows = new Map<number, VNode>();\n  private rangeUnsubscribe: (() => void) | undefined;\n\n  @Watch('dataStore') onDataStoreChange() {\n    this.onStoreChange();\n  }\n  @Watch('colData') onColDataChange() {\n    this.onStoreChange();\n  }\n  onStoreChange() {\n    this.columnService?.destroy();\n    this.columnService = new ColumnService(this.dataStore, this.colData);\n    // make sure we have correct data, before render\n    this.providers = {\n      type: this.type,\n      readonly: this.readonly,\n      data: this.dataStore,\n      viewport: this.viewportCol,\n      dimension: this.dimensionRow,\n      selection: this.rowSelectionStore,\n    };\n\n    this.rangeUnsubscribe?.();\n    this.rangeUnsubscribe = this.rowSelectionStore.onChange(\n      'range',\n      (e: RangeArea) =>\n        this.rowHighlightPlugin.selectionChange(e, this.renderedRows),\n    );\n  }\n\n  connectedCallback() {\n    this.rowHighlightPlugin = new RowHighlightPlugin();\n    this.onStoreChange();\n  }\n\n  disconnectedCallback() {\n    this.columnService?.destroy();\n    this.rangeUnsubscribe?.();\n  }\n\n  async componentWillRender() {\n    this.beforeDataRender.emit({\n      rowType: this.type,\n      colType: this.colType as DimensionCols,\n    });\n    return Promise.all(this.jobsBeforeRender.map(p => typeof p === 'function' ? p() : p));\n  }\n\n  componentDidRender() {\n    this.afterrender.emit({ type: this.type });\n  }\n\n  render() {\n    this.renderedRows = new Map();\n    const columnsData = this.columnService.columns;\n    if (!columnsData.length) {\n      return;\n    }\n    const rows = this.viewportRow.get('items');\n    if (!rows.length) {\n      return;\n    }\n    const cols = this.viewportCol.get('items');\n    if (!cols.length) {\n      return;\n    }\n    const rowsEls: VNode[] = [];\n    const depth = this.dataStore.get('groupingDepth');\n    const groupingCustomRenderer = this.dataStore.get('groupingCustomRenderer');\n    const groupDepth = this.columnService.hasGrouping ? depth : 0;\n    for (let rgRow of rows) {\n      const dataItem = getSourceItem(this.dataStore, rgRow.itemIndex);\n\n      // #region Grouping\n      if (isGrouping(dataItem)) {\n        rowsEls.push(\n          <GroupingRowRenderer\n            {...rgRow}\n            index={rgRow.itemIndex}\n            model={dataItem}\n            groupingCustomRenderer={groupingCustomRenderer}\n            hasExpand={this.columnService.hasGrouping}\n          />,\n        );\n        continue;\n      }\n      // #endregion\n      const cells: (VNode | string | void)[] = [];\n\n      // #region Cells\n      for (let rgCol of cols) {\n        const smodel: CellTemplateProp = {\n          ...this.columnService.rowDataModel(\n            rgRow.itemIndex,\n            rgCol.itemIndex,\n          ),\n          providers: this.providers,\n        };\n\n        // call before cell render\n        const cellEvent = this.triggerBeforeCellRender(smodel, rgRow, rgCol);\n\n        // if event was prevented\n        if (cellEvent.defaultPrevented) {\n          continue;\n        }\n\n        const {\n          detail: { column: columnProps, row: rowProps, model: schemaModel },\n        } = cellEvent;\n\n        const defaultProps: CellProps = {\n          [DATA_COL]: columnProps.itemIndex,\n          [DATA_ROW]: rowProps.itemIndex,\n          style: {\n            width: `${columnProps.size}px`,\n            transform: `translateX(${columnProps.start}px)`,\n            height: rowProps.size ? `${rowProps.size}px` : undefined,\n          },\n        };\n        /**\n         * For grouping, can be removed in the future and replaced with event\n         */\n        if (groupDepth && !columnProps.itemIndex && defaultProps.style) {\n          defaultProps.style.paddingLeft = `${PADDING_DEPTH * groupDepth}px`;\n        }\n\n        const props = this.columnService.mergeProperties(\n          rowProps.itemIndex,\n          columnProps.itemIndex,\n          defaultProps,\n          schemaModel,\n        );\n\n        // Never use webcomponent for cell render\n        // It's very slow because of webcomponent initialization takes time\n        const cellNode = <CellRenderer\n          renderProps={{\n            schemaModel,\n            additionalData: this.additionalData,\n            dragStartCell: this.dragStartCell,\n          }}\n          cellProps={props}\n        />;\n        cells.push(cellNode);\n      }\n      // #endregion\n\n      // #region Rows\n      let rowClass = this.rowClass\n        ? this.columnService.getRowClass(rgRow.itemIndex, this.rowClass)\n        : '';\n      if (this.rowHighlightPlugin.isRowFocused(rgRow.itemIndex)) {\n        rowClass += ` ${ROW_FOCUSED_CLASS}`;\n      }\n      const row: VNode = (\n        <RowRenderer\n          index={rgRow.itemIndex}\n          rowClass={rowClass}\n          size={rgRow.size}\n          start={rgRow.start}\n        >\n          {cells}\n        </RowRenderer>\n      );\n      this.beforerowrender.emit({\n        node: row,\n        item: rgRow,\n        model: dataItem,\n        colType: this.columnService.type,\n        rowType: this.type,\n      });\n      rowsEls.push(row);\n      this.renderedRows.set(rgRow.itemIndex, row);\n      // #endregion\n    }\n    return (\n      <Host>\n        <slot />\n        {rowsEls}\n      </Host>\n    );\n  }\n\n  triggerBeforeCellRender(\n    model: CellTemplateProp,\n    row: VirtualPositionItem,\n    column: VirtualPositionItem,\n  ) {\n    const detail: BeforeCellRenderEvent<CellTemplateProp> = {\n      column,\n      row,\n      model,\n      rowType: model.type,\n      colType: model.colType,\n    };\n    return this.beforeCellRender.emit(detail);\n  }\n}\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nexport default keyBy;\n","import { h } from '@stencil/core';\nimport type {\n  VirtualPositionItem,\n  ColumnTemplateProp,\n  InitialHeaderClick,\n  RangeArea\n} from '@type';\n\nimport { FilterButton } from '../../plugins/filter/filter.button';\nimport { SortingSign } from '../../plugins/sorting/sorting.sign';\nimport { ResizeEvent, ResizeProps } from './resizable.directive';\nimport {\n  DATA_COL,\n  FOCUS_CLASS,\n  HEADER_CLASS,\n  HEADER_SORTABLE_CLASS,\n  MIN_COL_SIZE,\n} from '../../utils/consts';\nimport { HeaderCellRenderer } from './header-cell-renderer';\nimport { ResizableElementHTMLAttributes } from './resizable.element';\n\nexport type HeaderRenderProps = {\n  column: VirtualPositionItem;\n  additionalData: any;\n  data: ColumnTemplateProp;\n  range?: RangeArea | null;\n  canResize?: boolean;\n  canFilter?: boolean;\n  onResize?(e: ResizeEvent): void;\n  onClick?(data: InitialHeaderClick): void;\n  onDblClick?(data: InitialHeaderClick): void;\n} & Partial<Pick<ResizeProps, 'active'>>;\n\nconst HeaderRenderer = (p: HeaderRenderProps): ReturnType<typeof h> => {\n  const cellClass: { [key: string]: boolean } = {\n    [HEADER_CLASS]: true,\n    [HEADER_SORTABLE_CLASS]: !!p.data?.sortable,\n  };\n  if (p.data?.order) {\n    cellClass[p.data.order] = true;\n  }\n  const dataProps: ResizableElementHTMLAttributes = {\n    [DATA_COL]: p.column.itemIndex,\n    canResize: p.canResize,\n    minWidth: p.data?.minSize || MIN_COL_SIZE,\n    maxWidth: p.data?.maxSize,\n    active: p.active || ['r'],\n    class: cellClass,\n    style: {\n      width: `${p.column.size}px`,\n      transform: `translateX(${p.column.start}px)`,\n    },\n    onResize: p.onResize,\n    onDblClick(originalEvent: MouseEvent) {\n      p.onDblClick?.({\n        column: p.data,\n        index: p.column.itemIndex,\n        originalEvent,\n        providers: p.data.providers,\n      });\n    },\n    onClick(originalEvent: MouseEvent) {\n      if (originalEvent.defaultPrevented || !p.onClick) {\n        return;\n      }\n      p.onClick({\n        column: p.data,\n        index: p.column.itemIndex,\n        originalEvent,\n        providers: p.data.providers,\n      });\n    },\n  };\n  if (p.range) {\n    if (p.column.itemIndex >= p.range.x && p.column.itemIndex <= p.range.x1) {\n      if (typeof dataProps.class === 'object') {\n        dataProps.class[FOCUS_CLASS] = true;\n      }\n    }\n  }\n  return (\n    <HeaderCellRenderer\n      data={p.data}\n      props={dataProps}\n      additionalData={p.additionalData}\n    >\n      {<SortingSign column={p.data} />}\n      {p.canFilter && p.data?.filter !== false ? (\n        <FilterButton column={p.data} />\n      ) : (\n        ''\n      )}\n    </HeaderCellRenderer>\n  );\n};\n\nexport default HeaderRenderer;\n","revogr-header {\n  position: relative;\n  z-index: 5;\n  display: block;\n  \n\n  .rgHeaderCell {\n    display: flex;\n\n    &.align-center {\n      text-align: center;\n    }\n    &.align-left {\n      text-align: left;\n    }\n    &.align-right {\n      text-align: right;\n    }\n    &.sortable {\n      cursor: pointer;\n    }\n\n    i {\n      &.asc,\n      &.desc {\n        &:after {\n          font-size: 13px;\n        }\n      }\n      &.asc {\n        &:after {\n          content: '↑';\n        }\n      }\n      &.desc {\n        &:after {\n          content: '↓';\n        }\n      }\n    }\n  }\n\n  .rgHeaderCell,\n  .grouped-cell {\n    position: absolute;\n    box-sizing: border-box;\n    height: 100%;\n    z-index: 1;\n  }\n\n  .header-rgRow {\n    display: block;\n    position: relative;\n\n    &.group {\n      z-index: 0;\n    }\n  }\n\n  .group-rgRow {\n    position: relative;\n  }\n\n  .rgHeaderCell {\n    &.active {\n      z-index: 10;\n\n      .resizable {\n        background-color: deepskyblue;\n      }\n    }\n    .header-content {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      flex-grow: 1;\n    }\n    .resizable {\n      display: block;\n      position: absolute;\n      z-index: 90;\n      touch-action: none;\n      user-select: none;\n      &:hover {\n        background-color: deepskyblue;\n      }\n    }\n    $size: 6px;\n    > .resizable-r {\n      cursor: ew-resize;\n      width: $size;\n      right: 0;\n      top: 0;\n      height: 100%;\n    }\n    > .resizable-rb {\n      cursor: se-resize;\n      width: $size;\n      height: $size;\n      right: 0;\n      bottom: 0;\n    }\n\n    > .resizable-b {\n      cursor: s-resize;\n      height: $size;\n      bottom: 0;\n      width: 100%;\n      left: 0;\n    }\n\n    > .resizable-lb {\n      cursor: sw-resize;\n      width: $size;\n      height: $size;\n      left: 0;\n      bottom: 0;\n    }\n\n    > .resizable-l {\n      cursor: w-resize;\n      width: $size;\n      left: 0;\n      height: 100%;\n      top: 0;\n    }\n\n    > .resizable-lt {\n      cursor: nw-resize;\n      width: $size;\n      height: $size;\n      left: 0;\n      top: 0;\n    }\n\n    > .resizable-t {\n      cursor: n-resize;\n      height: $size;\n      top: 0;\n      width: 100%;\n      left: 0;\n    }\n\n    > .resizable-rt {\n      cursor: ne-resize;\n      width: $size;\n      height: $size;\n      right: 0;\n      top: 0;\n    }\n  }\n  .rv-filter {\n    visibility: hidden;\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Prop,\n  type VNode,\n} from '@stencil/core';\nimport keyBy from 'lodash/keyBy';\n\nimport { HEADER_ACTUAL_ROW_CLASS, HEADER_ROW_CLASS } from '../../utils/consts';\nimport { Groups } from '@store';\nimport HeaderRenderer, { HeaderRenderProps } from './header-renderer';\nimport ColumnGroupsRenderer from '../../plugins/groupingColumn/columnGroupsRenderer';\nimport { ResizeProps } from './resizable.directive';\nimport {\n  ColumnRegular,\n  DimensionSettingsState,\n  InitialHeaderClick,\n  Providers,\n  ViewportState,\n  ViewSettingSizeProp,\n  DimensionCols,\n  SelectionStoreState,\n} from '@type';\nimport { Observable } from '../../utils';\n\n@Component({\n  tag: 'revogr-header',\n  styleUrl: 'revogr-header-style.scss',\n})\nexport class RevogrHeaderComponent {\n  // #region Properties\n  /**\n   * Stores\n   */\n  /** Viewport X */\n  @Prop() viewportCol: Observable<ViewportState>;\n  /** Dimension settings X */\n  @Prop() dimensionCol: Observable<DimensionSettingsState>;\n  /** Selection, range, focus */\n  @Prop() selectionStore: Observable<SelectionStoreState>;\n\n  /**\n   * Column groups\n   */\n  @Prop() groups: Groups;\n  /**\n   * Grouping depth, how many levels of grouping\n   */\n  @Prop() groupingDepth = 0;\n\n  /**\n   * Readonly mode\n   */\n  @Prop() readonly: boolean;\n  /**\n   * If columns can be resized\n   */\n  @Prop() canResize: boolean;\n  /**\n   * Defines resize position\n   */\n  @Prop() resizeHandler: ResizeProps['active'];\n\n  /**\n   * Columns - defines an array of grid columns.\n   */\n  @Prop() colData: ColumnRegular[];\n\n  /**\n   * Column filter\n   */\n  @Prop() columnFilter: boolean;\n\n  /**\n   * Column type\n   */\n  @Prop() type!: DimensionCols | 'rowHeaders';\n\n  /**\n   * Extra properties to pass into header renderer, such as vue or react components to handle parent\n   */\n  @Prop() additionalData: any = {};\n  // #endregion\n\n  // #region Events\n\n  /**\n   * On initial header click\n   */\n  @Event({\n    eventName: 'beforeheaderclick',\n  })\n  initialHeaderClick: EventEmitter<InitialHeaderClick>;\n\n  /**\n   * On header resize\n   */\n  @Event({\n    eventName: 'headerresize',\n  })\n  headerresize: EventEmitter<ViewSettingSizeProp>;\n\n  /**\n   * On before header resize\n   */\n  @Event({ eventName: 'beforeheaderresize', cancelable: true })\n  beforeResize: EventEmitter<ColumnRegular[]>;\n\n  /**\n   * On header double click\n   */\n  @Event({\n    eventName: 'headerdblclick',\n  })\n  headerdblClick: EventEmitter<InitialHeaderClick>;\n\n  /**\n   * Before each header cell render function. Allows to override cell properties\n   */\n  @Event({ eventName: 'beforeheaderrender' })\n  beforeHeaderRender: EventEmitter<HeaderRenderProps>;\n\n  /**\n   * After all header cells rendered. Finalizes cell rendering.\n   */\n  @Event({ eventName: 'afterheaderrender' })\n  afterHeaderRender: EventEmitter<Providers<DimensionCols | 'rowHeaders'>>;\n\n  // #endregion\n\n  @Element() element!: HTMLElement;\n\n  private onResize({ width }: { width?: number }, index: number) {\n    const col = this.colData[index];\n    const event = this.beforeResize.emit([\n      {\n        ...col,\n        size: width || undefined,\n      },\n    ]);\n    if (event.defaultPrevented) {\n      return;\n    }\n    this.headerresize.emit({ [index]: width || 0 });\n  }\n\n  private onResizeGroup(\n    changedX: number,\n    startIndex: number,\n    endIndex: number,\n  ) {\n    const sizes: ViewSettingSizeProp = {};\n    const cols = keyBy(this.viewportCol.get('items'), 'itemIndex');\n    const change = changedX / (endIndex - startIndex + 1);\n    for (let i = startIndex; i <= endIndex; i++) {\n      const item = cols[i];\n      if (item) {\n        sizes[i] = item.size + change;\n      }\n    }\n    this.headerresize.emit(sizes);\n  }\n\n  componentDidRender() {\n    this.afterHeaderRender.emit(this.providers);\n  }\n\n  render() {\n    const cols = this.viewportCol.get('items');\n    const range = this.selectionStore?.get('range');\n    const cells: VNode[] = [];\n    const visibleProps: { [prop: string]: number } = {};\n\n    // render header columns\n    for (let rgCol of cols) {\n      const colData = this.colData[rgCol.itemIndex];\n      const props: HeaderRenderProps = {\n        range: range,\n        column: rgCol,\n        data: {\n          ...colData,\n          index: rgCol.itemIndex,\n          providers: this.providers,\n        },\n        canFilter: !!this.columnFilter,\n        canResize: this.canResize,\n        active: this.resizeHandler,\n        onResize: e => this.onResize(e, rgCol.itemIndex),\n        onDblClick: e => this.headerdblClick.emit(e),\n        onClick: e => this.initialHeaderClick.emit(e),\n        additionalData: this.additionalData,\n      };\n      const event = this.beforeHeaderRender.emit(props);\n      if (event.defaultPrevented) {\n        continue;\n      }\n      cells.push(<HeaderRenderer {...event.detail} />);\n      visibleProps[colData?.prop] = rgCol.itemIndex;\n    }\n\n    return [\n      <div class=\"group-rgRow\">\n        <ColumnGroupsRenderer\n          canResize={this.canResize}\n          active={this.resizeHandler}\n          visibleProps={visibleProps}\n          providers={this.providers}\n          groups={this.groups}\n          dimensionCol={this.dimensionCol.state}\n          depth={this.groupingDepth}\n          onResize={(changedX, startIndex, endIndex) =>\n            this.onResizeGroup(changedX, startIndex, endIndex)\n          }\n          additionalData={this.additionalData}\n        />\n      </div>,\n      <div class={`${HEADER_ROW_CLASS} ${HEADER_ACTUAL_ROW_CLASS}`}>\n        {cells}\n      </div>,\n    ];\n  }\n\n  get providers(): Providers<DimensionCols | 'rowHeaders'> {\n    return {\n      type: this.type,\n      readonly: this.readonly,\n      data: this.colData,\n      viewport: this.viewportCol,\n      dimension: this.dimensionCol,\n      selection: this.selectionStore,\n    };\n  }\n}\n","export async function resizeObserver() {\n  if (!('ResizeObserver' in window)) {\n    const module = await import('@juggle/resize-observer');\n    (window as Window & typeof globalThis).ResizeObserver = (module.ResizeObserver as unknown) as typeof ResizeObserver;\n  }\n}\n","import throttle from 'lodash/throttle';\nimport { resizeObserver } from '../../utils/resize-observer.polifill';\ninterface Events {\n  resize(entries: ReadonlyArray<ResizeObserverEntry>, observer: ResizeObserver): void;\n}\nexport default class GridResizeService {\n  private resizeObserver: ResizeObserver | null = null;\n  private resize = throttle((e: ReadonlyArray<ResizeObserverEntry>, o: ResizeObserver) => this.events?.resize(e, o), 10);\n  constructor(el: HTMLElement, private events: Events) {\n    this.init(el);\n  }\n\n  async init(el: HTMLElement): Promise<void> {\n    await resizeObserver();\n    this.resizeObserver = new ResizeObserver(this.resize);\n    this.resizeObserver?.observe(el);\n  }\n\n  public destroy() {\n    this.resizeObserver?.disconnect();\n    this.resizeObserver = null;\n  }\n}\n","@mixin noScroll {\n  /* Hide scrollbar for IE and Edge */\n  -ms-overflow-style: none;\n  scrollbar-width: none; /* Firefox */\n  /* Hide scrollbar for Chrome, Safari and Opera */\n  &::-webkit-scrollbar {\n    display: none;\n    -webkit-appearance: none;\n  }\n}\n\n.rowHeaders {\n  z-index: 2;\n  font-size: 10px;\n  display: flex;\n  height: 100%;\n\n  revogr-data .rgCell {\n    text-align: center;\n  }\n\n  .rgCell {\n    padding: 0 1em !important;\n    min-width: 100%;\n  }\n}\n\nrevogr-viewport-scroll {\n  @include noScroll;\n\n  overflow-x: auto;\n  overflow-y: hidden;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n\n  &.colPinStart,\n  &.colPinEnd {\n    z-index: 2;\n  }\n\n  // make sure it would work\n  &.colPinEnd:has(.active) {\n    overflow: visible;\n  }\n\n  &.rgCol {\n    flex-grow: 1;\n  }\n\n  .content-wrapper {\n    overflow: hidden;\n  }\n\n  .inner-content-table {\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    width: 100%;\n    min-width: 100%;\n    position: relative;\n    z-index: 0;\n  }\n\n  .vertical-inner {\n    overflow-y: auto;\n    position: relative;\n    width: 100%;\n    flex-grow: 1;\n    outline: none; // avoid accessibility focus issue\n    @include noScroll;\n\n    revogr-data,\n    revogr-overlay-selection {\n      height: 100%;\n    }\n  }\n}\n","import {\n  Component,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Element,\n  Prop,\n  Host,\n  Listen,\n} from '@stencil/core';\n\nimport GridResizeService from '../revoGrid/viewport.resize.service';\nimport LocalScrollService from '../../services/local.scroll.service';\nimport { LocalScrollTimer } from '../../services/local.scroll.timer';\nimport {\n  CONTENT_SLOT,\n  FOOTER_SLOT,\n  HEADER_SLOT,\n} from '../revoGrid/viewport.helpers';\nimport type {\n  DimensionCols,\n  DimensionType,\n  ElementScroll,\n  ScrollCoordinateEvent,\n  ViewPortResizeEvent,\n  ViewPortScrollEvent\n} from '@type';\n\ntype Delta = 'deltaX' | 'deltaY';\ntype LocalScrollEvent = {\n  preventDefault(): void;\n} & { [x in Delta]: number };\n\n/**\n * Viewport scroll component for RevoGrid\n * @slot - content\n * @slot header - header\n * @slot footer - footer\n */\n@Component({\n  tag: 'revogr-viewport-scroll',\n  styleUrl: 'revogr-viewport-scroll-style.scss',\n})\nexport class RevogrViewportScroll implements ElementScroll {\n  /**\n   * Enable row header\n  */\n  @Prop() readonly rowHeader: boolean;\n\n  /**\n   * Width of inner content\n   */\n  @Prop() contentWidth = 0;\n  /**\n   * Height of inner content\n   */\n  @Prop() contentHeight = 0;\n\n  @Prop() colType!: DimensionCols | 'rowHeaders';\n\n  /**\n   * Before scroll event\n   */\n  @Event({ eventName: 'scrollviewport', bubbles: true }) scrollViewport: EventEmitter<ViewPortScrollEvent>;\n  /**\n   * Viewport resize\n   */\n  @Event({ eventName: 'resizeviewport' }) resizeViewport: EventEmitter<ViewPortResizeEvent>;\n\n  /**\n   * Triggered on scroll change, can be used to get information about scroll visibility\n   */\n  @Event() scrollchange: EventEmitter<{\n    type: DimensionType;\n    hasScroll: boolean;\n  }>;\n\n  /**\n   * Silently scroll to coordinate\n   * Made to align negative coordinates for mobile devices\n  */\n  @Event({ eventName: 'scrollviewportsilent' }) silentScroll: EventEmitter<ViewPortScrollEvent>;\n\n  @Element() horizontalScroll: HTMLElement;\n\n  private verticalScroll?: HTMLElement;\n  private header?: HTMLElement;\n  private footer?: HTMLElement;\n\n  /**\n   * Static functions to bind wheel change\n   */\n  private horizontalMouseWheel: (e: Partial<LocalScrollEvent>) => void;\n  private verticalMouseWheel: (e: Partial<LocalScrollEvent>) => void;\n\n  private resizeService?: GridResizeService;\n  private localScrollService: LocalScrollService;\n  private localScrollTimer: LocalScrollTimer;\n\n\n  @Method() async setScroll(e: ViewPortScrollEvent) {\n    this.localScrollTimer.latestScrollUpdate(e.dimension);\n    this.localScrollService?.setScroll(e);\n  }\n\n  /**\n   * update on delta in case we don't know existing position or external change\n   * @param e\n   */\n  @Method() async changeScroll(\n    e: ViewPortScrollEvent,\n    silent = false,\n  ) {\n    if (silent) {\n      if (e.coordinate && this.verticalScroll) {\n        switch (e.dimension) {\n          // for mobile devices to skip negative scroll loop. only on vertical scroll\n          case 'rgRow':\n            this.verticalScroll.style.transform = `translateY(${-1 * e.coordinate}px)`;\n            break;\n        }\n      }\n      return;\n    }\n    if (e.delta) {\n      switch (e.dimension) {\n        case 'rgCol':\n          e.coordinate = this.horizontalScroll.scrollLeft + e.delta;\n          break;\n        case 'rgRow':\n          e.coordinate = (this.verticalScroll?.scrollTop ?? 0) + e.delta;\n          break;\n      }\n      this.setScroll(e);\n    }\n    return e;\n  }\n\n  /**\n   * Dispatch this event to trigger vertical mouse wheel from plugins\n   */\n  @Listen('mousewheel-vertical') mousewheelVertical({\n    detail: e,\n  }: CustomEvent<LocalScrollEvent>) {\n    this.verticalMouseWheel(e);\n  }\n  /**\n   * Dispatch this event to trigger horizontal mouse wheel from plugins\n   */\n  @Listen('mousewheel-horizontal') mousewheelHorizontal({\n    detail: e,\n  }: CustomEvent<LocalScrollEvent>) {\n    this.horizontalMouseWheel(e);\n  }\n  /**\n   * Allows to use outside listener\n   */\n  @Listen('scroll-coordinate') scrollApply({\n    detail: { type, coordinate },\n  }: CustomEvent<ScrollCoordinateEvent>) {\n    this.applyOnScroll(type, coordinate, true);\n  }\n\n  connectedCallback() {\n    /**\n     * Bind scroll functions for farther usage\n     */\n    // allow mousewheel for all devices including mobile\n    this.verticalMouseWheel = this.onVerticalMouseWheel.bind(\n      this,\n      'rgRow',\n      'deltaY',\n    );\n    this.horizontalMouseWheel = this.onHorizontalMouseWheel.bind(\n      this,\n      'rgCol',\n      'deltaX',\n    );\n    this.localScrollTimer = new LocalScrollTimer('ontouchstart' in document.documentElement ? 0 : 10);\n    /**\n     * Create local scroll service\n     */\n    this.localScrollService = new LocalScrollService({\n      // to improve safari smoothnes on scroll\n      // skipAnimationFrame: isSafariDesktop(),\n      runScroll: e => this.scrollViewport.emit(e),\n      applyScroll: e => {\n        this.localScrollTimer.setCoordinate(e);\n        switch (e.dimension) {\n          case 'rgCol':\n            // this will trigger on scroll event\n            this.horizontalScroll.scrollLeft = e.coordinate;\n            break;\n          case 'rgRow':\n            if (this.verticalScroll) {\n              // this will trigger on scroll event\n              this.verticalScroll.scrollTop = e.coordinate;\n              // for mobile devices to skip negative scroll loop. only on vertical scroll\n              if (this.verticalScroll.style.transform) {\n                this.verticalScroll.style.transform = '';\n              }\n            }\n            break;\n        }\n      },\n    });\n  }\n\n  componentDidLoad() {\n    // track horizontal viewport resize\n    this.resizeService = new GridResizeService(this.horizontalScroll, {\n      resize: entries => {\n        let height = entries[0]?.contentRect.height || 0;\n        if (height) {\n          height -= (this.header?.clientHeight ?? 0) + (this.footer?.clientHeight ?? 0);\n        }\n        const els = {\n          rgRow: {\n            size: height,\n            contentSize: this.contentHeight,\n            scroll: this.verticalScroll?.scrollTop,\n            noScroll: false,\n          },\n          rgCol: {\n            size: entries[0]?.contentRect.width || 0,\n            contentSize: this.contentWidth,\n            scroll: this.horizontalScroll.scrollLeft,\n            noScroll: this.colType !== 'rgCol',\n          },\n        };\n        for (const [dim, item] of Object.entries(els)) {\n          const dimension = dim as DimensionType;\n          this.resizeViewport.emit({ dimension, size: item.size, rowHeader: this.rowHeader });\n          if (item.noScroll) {\n            continue;\n          }\n          this.localScrollService?.scroll(item.scroll ?? 0, dimension, true);\n          // track scroll visibility on outer element change\n          this.setScrollVisibility(dimension, item.size, item.contentSize);\n        }\n      },\n    });\n  }\n\n  /**\n   * Check if scroll present or not per type\n   * Trigger this method on inner content size change or on outer element size change\n   * If inner content bigger then outer size then scroll is present and mousewheel binding required\n   * @param type - dimension type 'rgRow/y' or 'rgCol/x'\n   * @param size - outer content size\n   * @param innerContentSize - inner content size\n   */\n  setScrollVisibility(\n    type: DimensionType,\n    size: number,\n    innerContentSize: number,\n  ) {\n    // test if scroll present\n    const hasScroll = size < innerContentSize;\n    let el: HTMLElement | undefined;\n    // event reference for binding\n    switch (type) {\n      case 'rgCol':\n        el = this.horizontalScroll;\n        break;\n      case 'rgRow':\n        el = this.verticalScroll;\n        break;\n    }\n    // based on scroll visibility assign or remove class and event\n    if (hasScroll) {\n      el?.classList.add(`scroll-${type}`);\n    } else {\n      el?.classList.remove(`scroll-${type}`);\n    }\n    this.scrollchange.emit({ type, hasScroll });\n  }\n\n  disconnectedCallback() {\n    this.resizeService?.destroy();\n  }\n\n  async componentDidRender() {\n    this.localScrollService.setParams(\n      {\n        contentSize: this.contentHeight,\n        clientSize: this.verticalScroll?.clientHeight ?? 0,\n        virtualSize: 0,\n      },\n      'rgRow',\n    );\n\n    this.localScrollService.setParams(\n      {\n        contentSize: this.contentWidth,\n        clientSize: this.horizontalScroll.clientWidth,\n        virtualSize: 0,\n      },\n      'rgCol',\n    );\n    this.setScrollVisibility(\n      'rgRow',\n      this.verticalScroll?.clientHeight ?? 0,\n      this.contentHeight,\n    );\n    this.setScrollVisibility(\n      'rgCol',\n      this.horizontalScroll.clientWidth,\n      this.contentWidth,\n    );\n  }\n\n  render() {\n    return (\n      <Host\n        onWheel={this.horizontalMouseWheel}\n        onScroll={(e: UIEvent) => this.applyScroll('rgCol', e)}\n      >\n        <div\n          class=\"inner-content-table\"\n          style={{ width: `${this.contentWidth}px` }}\n        >\n          <div class=\"header-wrapper\" ref={e => (this.header = e)}>\n            <slot name={HEADER_SLOT} />\n          </div>\n          <div\n            class=\"vertical-inner\"\n            ref={el => (this.verticalScroll = el)}\n            onWheel={this.verticalMouseWheel}\n            onScroll={(e: MouseEvent) => this.applyScroll('rgRow', e)}\n          >\n            <div\n              class=\"content-wrapper\"\n              style={{ height: `${this.contentHeight}px` }}\n            >\n              <slot name={CONTENT_SLOT} />\n            </div>\n          </div>\n          <div class=\"footer-wrapper\" ref={e => (this.footer = e)}>\n            <slot name={FOOTER_SLOT} />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n  /**\n   * Extra layer for scroll event monitoring, where MouseWheel event is not passing\n   * We need to trigger scroll event in case there is no mousewheel event\n   */\n  @Method() async applyScroll(type: DimensionType, e: UIEvent) {\n    if (!(e.target instanceof HTMLElement)) {\n      return;\n    }\n    let scroll = 0;\n    switch (type) {\n      case 'rgCol':\n        scroll = e.target.scrollLeft;\n        break;\n      case 'rgRow':\n        scroll = e.target.scrollTop;\n        break;\n    }\n\n    // for mobile devices to skip negative scroll loop\n    if (scroll < 0) {\n      this.silentScroll.emit({ dimension: type, coordinate: scroll });\n      return;\n    }\n    this.applyOnScroll(type, scroll);\n  }\n\n  /**\n   * Applies change on scroll event only if mousewheel event happened some time ago\n   */\n  private applyOnScroll(\n    type: DimensionType,\n    coordinate: number,\n    outside = false,\n  ) {\n    // apply after throttling\n    if (this.localScrollTimer.isReady(type, coordinate)) {\n      this.localScrollService?.scroll(\n        coordinate,\n        type,\n        undefined,\n        undefined,\n        outside,\n      );\n    }\n  }\n\n  /**\n   * On vertical mousewheel event\n   * @param type\n   * @param delta\n   * @param e\n   */\n  private onVerticalMouseWheel(\n    type: DimensionType,\n    delta: Delta,\n    e: LocalScrollEvent,\n  ) {\n    const scrollTop = this.verticalScroll?.scrollTop ?? 0;\n    const clientHeight = this.verticalScroll?.clientHeight ?? 0;\n    const scrollHeight = this.verticalScroll?.scrollHeight ?? 0;\n\n    // Detect if the user has reached the bottom\n    const atBottom = (scrollTop + clientHeight >= scrollHeight) && e.deltaY > 0;\n    const atTop = scrollTop === 0 && e.deltaY < 0;\n    if (!atBottom && !atTop) {\n      e.preventDefault?.();\n    }\n    const pos = scrollTop + e[delta];\n    this.localScrollService?.scroll(pos, type, undefined, e[delta]);\n    this.localScrollTimer.latestScrollUpdate(type);\n  }\n\n  /**\n   * On horizontal mousewheel event\n   * @param type\n   * @param delta\n   * @param e\n   */\n  private onHorizontalMouseWheel(\n    type: DimensionType,\n    delta: Delta,\n    e: LocalScrollEvent,\n  ) {\n    if (!e.deltaX) {\n      return;\n    }\n    const { scrollLeft, scrollWidth, clientWidth } = this.horizontalScroll;\n\n    // Detect if the user has reached the right end\n    const atRight = (scrollLeft + clientWidth >= scrollWidth) && e.deltaX > 0;\n\n    // Detect if the user has reached the left end\n    const atLeft = scrollLeft === 0 && e.deltaX < 0;\n    if (!atRight && !atLeft) {\n      e.preventDefault?.();\n    }\n    const pos = scrollLeft + e[delta];\n    this.localScrollService?.scroll(pos, type, undefined, e[delta]);\n    this.localScrollTimer.latestScrollUpdate(type);\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Host,\n  Prop,\n  type VNode,\n  h,\n} from '@stencil/core';\n\n/**\n * VNode to html converter for stencil components.\n * Transform VNode to html string.\n */\n/**\n * @internal\n */\n@Component({\n  tag: 'vnode-html',\n})\nexport class VNodeToHtml {\n  @Prop() redraw: (() => VNode[]) | null | undefined = null;\n  @Event() html: EventEmitter<{ html: string; vnodes: (VNode[]) | null }>;\n  @Element() el: HTMLElement;\n\n  private vnodes: VNode[] | null = [];\n\n  componentDidRender() {\n    this.html.emit({\n      html: this.el.innerHTML,\n      vnodes: this.vnodes,\n    });\n  }\n\n  render() {\n    this.vnodes = this.redraw?.() ?? null;\n    return (\n      <Host\n        style={{ visibility: 'hidden', position: 'absolute' }}\n      >\n        {this.vnodes}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}