{"version":3,"names":["closest","Element","prototype","matches","msMatchesSelector","webkitMatchesSelector","s","el","this","call","parentElement","parentNode","nodeType","filterStyleCss","RevogrFilterPanelStyle0","defaultType","FILTER_LIST_CLASS","FILTER_LIST_CLASS_ACTION","FILTER_ID","FilterPanel","filterCaptionsInternal","title","ok","save","reset","cancel","add","placeholder","and","or","debouncedApplyFilter","debounce","filterChange","emit","filterItems","onMouseDown","e","changes","defaultPrevented","path","composedPath","select","document","getElementById","HTMLSelectElement","includes","value","currentFilterType","type","currentFilterId","isOutside","element","target","HTMLElement","isFilterBtn","undefined","show","newEntity","getChanges","componentWillRender","isFilterIdSet","Object","keys","prop","filterId","length","getFilterItemsList","_a","propFilters","_b","capts","assign","filterCaptions","h","key","map","filter","index","andOrButton","hidden","onClick","toggleFilterAndOr","id","AndOrButton","text","relation","class","onChange","onFilterTypeChange","renderSelectOptions","onRemoveFilter","TrashButton","renderExtra","f","autoCorrect","pos","getBoundingClientRect","maxLeft","window","innerWidth","width","left","offsetLeft","style","setTimeout","input","HTMLInputElement","focus","disableDynamicFiltering","onAddNewFilter","addNewFilterToProp","push","onUserInput","event","onKeyDown","toLowerCase","stopPropagation","onSave","onCancel","onReset","assertChanges","resetChange","items","findIndex","d","splice","Error","isDefaultTypeRemoved","options","Set","entries","forEach","_","values","selected","filterNames","gIndex","filterTypes","group","k","has","disabled","currentFilter","filterEntities","extra","onInput","bind","render","Host","display","x","top","y","ref","slot","extraContent","_c","hideDefaultFilters"],"sources":["src/utils/closest.polifill.ts","src/plugins/filter/filter.style.scss?tag=revogr-filter-panel","src/plugins/filter/filter.panel.tsx"],"sourcesContent":["(function closest() {\n  if (!Element.prototype.matches) {\n    Element.prototype.matches =\n      ((Element.prototype as unknown) as { msMatchesSelector: (selectors: string) => boolean }).msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  if (!Element.prototype.closest) {\n    Element.prototype.closest = function (s: string) {\n      let el: HTMLElement | Element | (Node & ParentNode) | null = this;\n\n      do {\n        if (Element.prototype.matches.call(el, s)) {\n          return el;\n        }\n        el = el.parentElement || el.parentNode;\n      } while (el !== null && el.nodeType === 1);\n      return null;\n    };\n  }\n})();\n","revogr-filter-panel {\n  position: absolute;\n  display: block;\n  top: 0;\n  left: 0;\n  z-index: 100;\n  max-height: calc(100% - 80px);\n  min-width: 250px;\n  overflow: auto;\n\n  opacity: 1;\n  transform: none;\n  background-color: #fff;\n  transform-origin: 62px 0px;\n  box-shadow: 0 5px 18px -2px rgba(black, 20%);\n  padding: 10px;\n  border-radius: 4px;\n\n  min-width: 220px;\n  text-align: left;\n\n  .filter-holder > div {\n    display: flex;\n    flex-direction: column;\n  }\n\n  label {\n    font-size: 13px;\n    display: block;\n    padding: 8px 0;\n  }\n\n  select {\n    width: 100%;\n  }\n\n  input[type='text'] {\n    border: 0;\n    min-height: 34px;\n    margin: 5px 0;\n    background: #f3f3f3;\n    border-radius: 5px;\n    padding: 0 10px;\n    box-sizing: border-box;\n    width: 100%;\n  }\n\n  button {\n    margin-top: 10px;\n    margin-right: 5px;\n  }\n\n  .filter-actions {\n    text-align: right;\n    margin-right: -5px;\n  }\n}\n\n.rgHeaderCell {\n  &:hover .rv-filter {\n    transition:\n      opacity 267ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\n      transform 178ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  }\n  &:hover .rv-filter,\n  .rv-filter.active {\n    opacity: 1;\n  }\n\n  .rv-filter {\n    $btn-size: 24px;\n    height: $btn-size;\n    width: $btn-size;\n    background: none;\n    border: 0;\n    opacity: 0;\n    visibility: visible;\n    cursor: pointer;\n    border-radius: 4px;\n\n    &.active {\n      color: #10224a;\n    }\n\n    .filter-img {\n      $img-size: 11px;\n      color: gray;\n      width: $img-size;\n    }\n  }\n}\n\n.select-css {\n  $gradient: 'data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E';\n  $linearGradient: linear-gradient(to bottom, #ffffff 0%, #ffffff 100%);\n  $borderColor: #f1f1f1;\n\n  display: block;\n  font-family: sans-serif;\n  font-weight: 600;\n  color: #444;\n  line-height: 1.3;\n  padding: 0.6em 1.4em 0.5em 0.8em;\n  width: 100%;\n  max-width: 100%; /* useful when width is set to anything other than 100% */\n  box-sizing: border-box;\n  margin: 0;\n  border: 1px solid $borderColor;\n  box-shadow: transparent;\n  border-radius: 0.5em;\n  appearance: none;\n  background-color: #fff;\n  background-image: url($gradient), $linearGradient;\n  background-repeat: no-repeat, repeat;\n  /* arrow icon position (1em from the right, 50% vertical) , then gradient position*/\n  background-position:\n    right 0.7em top 50%,\n    0 0;\n  /* icon size, then gradient */\n  background-size:\n    0.65em auto,\n    100%;\n\n  /* Hide arrow icon in IE browsers */\n  &::-ms-expand {\n    display: none;\n  }\n  /* Hover style */\n  &:hover {\n    border-color: rgb(197, 197, 197);\n  }\n  /* Focus style */\n  &:focus {\n    border-color: $borderColor;\n    box-shadow: 0 0 1px 3px rgba(59, 153, 252, 0.7);\n    box-shadow: 0 0 0 3px -moz-mac-focusring;\n    color: #222;\n    outline: none;\n  }\n\n  /* Set options to normal weight */\n  option {\n    font-weight: normal;\n  }\n\n  /* Disabled styles */\n  &:disabled,\n  &[aria-disabled='true'] {\n    color: gray;\n    background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22graytext%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E'),\n      linear-gradient(to bottom, #ffffff 0%, #ffffff 100%);\n  }\n\n  &:disabled:hover,\n  &[aria-disabled='true'] {\n    border-color: $borderColor;\n  }\n}\n\n.multi-filter-list {\n  margin-top: 5px;\n  margin-bottom: 5px;\n\n  div {\n    white-space: nowrap;\n  }\n\n  .multi-filter-list-action {\n    display: flex;\n\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .and-or-button {\n    margin: 0 0 0 10px;\n    min-width: 58px;\n    cursor: pointer;\n  }\n  .trash-button {\n    $btn-remove-size: 22px;\n    margin: 0 0 -2px 6px;\n    cursor: pointer;\n\n    width: $btn-remove-size;\n    height: 100%;\n    font-size: 16px;\n\n    .trash-img {\n      width: 1em;\n    }\n  }\n}\n\n.add-filter-divider {\n  display: block;\n  margin: 0 -10px 10px -10px;\n\n  border-bottom: 1px solid #d9d9d9;\n  height: 10px;\n}\n\n.select-input {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nrevo-grid[theme^='dark'] {\n  revogr-filter-panel {\n    background-color: $el-color-dark;\n\n    .add-filter-divider {\n      border-bottom-color: $el-color-dark;\n    }\n\n    input[type=text] {\n      background-color: $font-color-dark;\n      color: black;\n    }\n  }\n}","// filter.panel.tsx\n\nimport {\n  h,\n  Component,\n  Event,\n  EventEmitter,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  type VNode,\n  Element,\n} from '@stencil/core';\nimport debounce from 'lodash/debounce';\n\nimport { AndOrButton, isFilterBtn, TrashButton } from './filter.button';\nimport '../../utils/closest.polifill';\nimport {\n  FilterCaptions,\n  LogicFunction,\n  MultiFilterItem,\n  ShowData,\n} from './filter.types';\nimport type { ColumnProp } from '@type';\nimport { FilterType } from './filter.indexed';\n\nconst defaultType: FilterType = 'none';\n\nconst FILTER_LIST_CLASS = 'multi-filter-list';\nconst FILTER_LIST_CLASS_ACTION = 'multi-filter-list-action';\nconst FILTER_ID = 'add-filter';\n\n/**\n * Filter panel for editing filters\n */\n/**\n * @internal\n */\n@Component({\n  tag: 'revogr-filter-panel',\n  styleUrl: 'filter.style.scss',\n})\nexport class FilterPanel {\n  private filterCaptionsInternal: FilterCaptions = {\n    title: 'Filter by',\n    ok: 'Ok',\n    save: 'Save',\n    // drops the filter\n    reset: 'Reset',\n    cancel: 'Cancel',\n    add: 'Add condition',\n    placeholder: 'Enter value...',\n    and: 'and',\n    or: 'or',\n  };\n\n  @Element() element!: HTMLElement;\n  @State() isFilterIdSet = false;\n  @State() filterId = 0;\n  @State() currentFilterId = -1;\n  @State() currentFilterType: FilterType = defaultType;\n  @State() changes: ShowData | undefined;\n  @State() filterItems: MultiFilterItem = {};\n  @Prop() filterNames: Record<string, string> = {};\n  @Prop() filterEntities: Record<string, LogicFunction> = {};\n  @Prop() filterCaptions: FilterCaptions | undefined;\n  /**\n   * Disables dynamic filtering. A way to apply filters on Save only\n   */\n  @Prop() disableDynamicFiltering = false;\n  @Event() filterChange: EventEmitter<MultiFilterItem>;\n  @Event() resetChange: EventEmitter<ColumnProp>;\n\n  @Listen('mousedown', { target: 'document' }) onMouseDown(e: MouseEvent) {\n    // click on anything then select drops values to default\n    if (!this.changes || e.defaultPrevented) {\n      return;\n    }\n    const path = e.composedPath();\n    const select = document.getElementById(FILTER_ID);\n    if (select instanceof HTMLSelectElement) {\n      // click on select should be skipped\n      if (path.includes(select)) {\n        return;\n      }\n      select.value = defaultType;\n    }\n    this.currentFilterType = defaultType;\n    if (this.changes) {\n      this.changes.type = defaultType;\n    }\n    this.currentFilterId = -1;\n\n    const isOutside = !path.includes(this.element);\n\n    if (\n      e.target instanceof HTMLElement &&\n      isOutside &&\n      !isFilterBtn(e.target)\n    ) {\n      this.changes = undefined;\n    }\n  }\n\n  @Method() async show(newEntity?: ShowData) {\n    this.changes = newEntity;\n    this.filterItems = newEntity?.filterItems || {};\n    if (this.changes) {\n      this.changes.type = this.changes.type || defaultType;\n    }\n  }\n\n  @Method() async getChanges() {\n    return this.changes;\n  }\n\n  componentWillRender() {\n    if (!this.isFilterIdSet) {\n      this.isFilterIdSet = true;\n      const filterItems = Object.keys(this.filterItems);\n      for (const prop of filterItems) {\n        // we set the proper filterId so there won't be any conflict when removing filters\n        this.filterId += this.filterItems[prop].length;\n      }\n    }\n  }\n\n  getFilterItemsList() {\n    const prop = this.changes?.prop;\n    if (typeof prop === 'undefined') return '';\n\n    const propFilters = this.filterItems[prop] ?? [];\n    const capts = Object.assign(\n      this.filterCaptionsInternal,\n      this.filterCaptions,\n    );\n    return (\n      <div key={this.filterId}>\n        {propFilters.map((filter, index) => {\n          let andOrButton;\n          if (filter.hidden) {\n            return;\n          }\n\n          // hide toggle button if there is only one filter and the last one\n          if (index !== this.filterItems[prop].length - 1) {\n            andOrButton = (\n              <div onClick={() => this.toggleFilterAndOr(filter.id)}>\n                <AndOrButton\n                  text={filter.relation === 'and' ? capts.and : capts.or}\n                />\n              </div>\n            );\n          }\n\n          return (\n            <div key={filter.id} class={FILTER_LIST_CLASS}>\n              <div class={{ 'select-input': true }}>\n                <select\n                  class=\"select-css select-filter\"\n                  onChange={e => this.onFilterTypeChange(e, prop, index)}\n                >\n                  {this.renderSelectOptions(\n                    this.filterItems[prop][index].type,\n                    true,\n                  )}\n                </select>\n                <div class={FILTER_LIST_CLASS_ACTION}>{andOrButton}</div>\n                <div onClick={() => this.onRemoveFilter(filter.id)}>\n                  <TrashButton />\n                </div>\n              </div>\n              <div>{this.renderExtra(prop, index)}</div>\n            </div>\n          );\n        })}\n\n        {propFilters.filter(f => !f.hidden).length > 0 ? <div class=\"add-filter-divider\" /> : ''}\n      </div>\n    );\n  }\n\n  private autoCorrect(el?: HTMLElement | null) {\n    if (!el) {\n      return;\n    }\n    const pos = el.getBoundingClientRect();\n    const maxLeft = window.innerWidth - pos.width;\n\n    if (pos.left > maxLeft && el.offsetLeft) {\n      el.style.left = `${maxLeft - (el.parentElement?.getBoundingClientRect().left ?? 0)}px`;\n    }\n  }\n\n  private onFilterTypeChange(e: Event, prop: ColumnProp, index: number) {\n    if (!(e.target instanceof HTMLSelectElement)) {\n      return;\n    }\n    this.filterItems[prop][index].type = e.target.value as FilterType;\n\n    // this re-renders the input to know if we need extra input\n    this.filterId++;\n\n    // adding setTimeout will wait for the next tick DOM update then focus on input\n    setTimeout(() => {\n      const input = document.getElementById(\n        'filter-input-' + this.filterItems[prop][index].id,\n      );\n      if (input instanceof HTMLInputElement) {\n        input.focus();\n      }\n    }, 0);\n\n    if (!this.disableDynamicFiltering) {\n      this.debouncedApplyFilter();\n    }\n  }\n\n  private debouncedApplyFilter = debounce(() => {\n    this.filterChange.emit(this.filterItems);\n  }, 400);\n\n  private onAddNewFilter(e: Event) {\n    const el = e.target as HTMLSelectElement;\n    this.currentFilterType = el.value as FilterType;\n    this.addNewFilterToProp();\n\n    // reset value after adding new filter\n    const select = document.getElementById('add-filter') as HTMLSelectElement;\n    if (select) {\n      select.value = defaultType;\n      this.currentFilterType = defaultType;\n    }\n\n    if (!this.disableDynamicFiltering) {\n      this.debouncedApplyFilter();\n    }\n  }\n\n  private addNewFilterToProp() {\n    const prop = this.changes?.prop;\n    if (!(prop || prop === 0)) return;\n\n    if (!this.filterItems[prop]) {\n      this.filterItems[prop] = [];\n    }\n\n    if (this.currentFilterType === 'none') return;\n\n    this.filterId++;\n    this.currentFilterId = this.filterId;\n\n    this.filterItems[prop].push({\n      id: this.currentFilterId,\n      type: this.currentFilterType,\n      value: '',\n      relation: 'and',\n    });\n\n    // adding setTimeout will wait for the next tick DOM update then focus on input\n    setTimeout(() => {\n      const input = document.getElementById(\n        'filter-input-' + this.currentFilterId,\n      ) as HTMLInputElement;\n      if (input) input.focus();\n    }, 0);\n  }\n\n  private onUserInput(index: number, prop: ColumnProp, event: Event) {\n    // update the value of the filter item\n    this.filterItems[prop][index].value = (\n      event.target as HTMLInputElement\n    ).value;\n\n    if (!this.disableDynamicFiltering) {\n      this.debouncedApplyFilter();\n    }\n  }\n\n  private onKeyDown(e: KeyboardEvent) {\n    if (e.key.toLowerCase() === 'enter') {\n      const select = document.getElementById('add-filter') as HTMLSelectElement;\n      if (select) {\n        select.value = defaultType;\n        this.currentFilterType = defaultType;\n        this.addNewFilterToProp();\n        select.focus();\n      }\n      return;\n    }\n    // keep event local, don't escalate farther to dom\n    e.stopPropagation();\n  }\n\n  private onSave() {\n    this.filterChange.emit(this.filterItems);\n  }\n\n  private onCancel() {\n    this.changes = undefined;\n  }\n\n  private onReset() {\n    this.assertChanges();\n\n    this.resetChange.emit(this.changes?.prop);\n\n    // this updates the DOM which is used by getFilterItemsList() key\n    this.filterId++;\n  }\n\n  private onRemoveFilter(id: number) {\n    this.assertChanges();\n\n    // this is for reactivity issues for getFilterItemsList()\n    this.filterId++;\n\n    const prop = this.changes?.prop;\n\n    const items = this.filterItems[prop ?? ''];\n    if (!items) return;\n\n    const index = items.findIndex(d => d.id === id);\n    if (index === -1) return;\n    items.splice(index, 1);\n\n    // let's remove the prop if no more filters so the filter icon will be removed\n    if (items.length === 0) delete this.filterItems[prop ?? ''];\n\n    if (!this.disableDynamicFiltering) {\n      this.debouncedApplyFilter();\n    }\n  }\n\n  private toggleFilterAndOr(id: number) {\n    this.assertChanges();\n\n    // this is for reactivity issues for getFilterItemsList()\n    this.filterId++;\n\n    const prop = this.changes?.prop;\n\n    const items = this.filterItems[prop ?? ''];\n    if (!items) return;\n\n    const index = items.findIndex(d => d.id === id);\n    if (index === -1) return;\n\n    items[index].relation = items[index].relation === 'and' ? 'or' : 'and';\n    if (!this.disableDynamicFiltering) {\n      this.debouncedApplyFilter();\n    }\n  }\n\n  private assertChanges() {\n    if (!this.changes) {\n      throw new Error('Changes required per edit');\n    }\n  }\n\n  renderSelectOptions(type: FilterType, isDefaultTypeRemoved = false) {\n    if (!this.changes) {\n      return;\n    }\n    const options: VNode[] = [];\n    const prop = this.changes.prop;\n\n    const hidden = new Set<string>();\n    Object.entries(this.filterItems).forEach(([_, values]) => {\n      values.forEach((filter) => {\n        if (filter.hidden) {\n          hidden.add(filter.type);\n        }\n      })\n    });\n\n    if (!isDefaultTypeRemoved) {\n      const capts = Object.assign(\n        this.filterCaptionsInternal,\n        this.filterCaptions,\n      );\n\n      options.push(\n        <option\n          selected={this.currentFilterType === defaultType}\n          value={defaultType}\n        >\n          {prop && this.filterItems[prop] && this.filterItems[prop].length > 0\n            ? capts.add\n            : this.filterNames[defaultType]}\n        </option>,\n      );\n    }\n\n    for (let gIndex in this.changes.filterTypes) {\n      const group = this.changes.filterTypes[gIndex].filter(k => !hidden.has(k));\n      if (group.length) {\n        options.push(\n          ...group.map(k => (\n            <option value={k} selected={type === k}>\n              {this.filterNames[k]}\n            </option>\n          )),\n        );\n        options.push(<option disabled></option>);\n      }\n    }\n    return options;\n  }\n\n  renderExtra(prop: ColumnProp, index: number) {\n    const currentFilter = this.filterItems[prop];\n\n    if (!currentFilter) return '';\n\n    if (this.filterEntities[currentFilter[index].type].extra !== 'input')\n      return '';\n\n    const capts = Object.assign(\n      this.filterCaptionsInternal,\n      this.filterCaptions,\n    );\n\n    return (\n      <input\n        id={`filter-input-${currentFilter[index].id}`}\n        placeholder={capts.placeholder}\n        type=\"text\"\n        value={currentFilter[index].value}\n        onInput={this.onUserInput.bind(this, index, prop)}\n        onKeyDown={e => this.onKeyDown(e)}\n      />\n    );\n  }\n\n  render() {\n    if (!this.changes) {\n      return <Host style={{ display: 'none' }}></Host>;\n    }\n    const style = {\n      display: 'block',\n      left: `${this.changes.x}px`,\n      top: `${this.changes.y}px`,\n    };\n\n    const capts = Object.assign(\n      this.filterCaptionsInternal,\n      this.filterCaptions,\n    );\n\n    return (\n      <Host\n        style={style}\n        ref={el => {\n          this.changes?.autoCorrect && this.autoCorrect(el);\n        }}\n      >\n        <slot slot=\"header\" />\n        { this.changes.extraContent?.(this.changes) || '' }\n\n        { this.changes?.hideDefaultFilters !== true && (\n          [\n            <label>{capts.title}</label>,\n            <div class=\"filter-holder\">{this.getFilterItemsList()}</div>,\n            <div class=\"add-filter\">\n              <select\n                id={FILTER_ID}\n                class=\"select-css\"\n                onChange={e => this.onAddNewFilter(e)}\n              >\n                {this.renderSelectOptions(this.currentFilterType)}\n              </select>\n            </div>\n          ]\n        )}\n\n        <slot />\n        <div class=\"filter-actions\">\n          {this.disableDynamicFiltering && [\n            <button\n              id=\"revo-button-save\"\n              aria-label=\"save\"\n              class=\"revo-button green\"\n              onClick={() => this.onSave()}\n            >\n              {capts.save}\n            </button>,\n            <button\n              id=\"revo-button-ok\"\n              aria-label=\"ok\"\n              class=\"revo-button green\"\n              onClick={() => this.onCancel()}\n            >\n              {capts.cancel}\n            </button>,\n          ]}\n          {!this.disableDynamicFiltering && [\n            <button\n              id=\"revo-button-ok\"\n              aria-label=\"ok\"\n              class=\"revo-button green\"\n              onClick={() => this.onCancel()}\n            >\n              {capts.ok}\n            </button>,\n\n            <button\n              id=\"revo-button-reset\"\n              aria-label=\"reset\"\n              class=\"revo-button outline\"\n              onClick={() => this.onReset()}\n            >\n              {capts.reset}\n            </button>,\n          ]}\n        </div>\n        <slot slot=\"footer\" />\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}