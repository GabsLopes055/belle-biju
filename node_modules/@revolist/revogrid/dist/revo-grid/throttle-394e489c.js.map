{"version":3,"names":["initialParams","contentSize","clientSize","virtualSize","maxSize","NO_COORDINATE","getContentSize","LocalScrollService","constructor","cfg","this","preventArtificialScroll","rgRow","rgCol","previousScroll","params","Object","assign","setParams","dimension","virtualContentSize","setScroll","e","cancelScroll","frameAnimation","Promise","resolve","reject","skipAnimationFrame","animationId","window","requestAnimationFrame","bind","getParams","coordinate","Math","ceil","wrapCoordinate","applyScroll","convert","id","cancelAnimationFrame","scroll","force","delta","outside","param","runScroll","c","_b","_a","call","pos","toReal","minRange","from","to","scaleValue","LocalScrollTimer","scrollThrottling","mouseWheelScrollTimestamp","lastKnownScrollCoordinate","setCoordinate","latestScrollUpdate","Date","getTime","isReady","type","change","FUNC_ERROR_TEXT","throttle","func","wait","options","leading","trailing","TypeError","isObject","debounce","maxWait"],"sources":["src/services/local.scroll.service.ts","src/services/local.scroll.timer.ts","node_modules/lodash/throttle.js"],"sourcesContent":["import type { DimensionType, ViewPortScrollEvent } from '@type';\nimport { scaleValue } from '../utils';\n\ninterface Config {\n  skipAnimationFrame?: boolean;\n  // scroll event inited and direction cached\n  // scrollingService.proxyScroll get tiggered\n  // setScroll event called from scrollingService\n  runScroll(e: ViewPortScrollEvent): void;\n  // all operation finished, apply scroll values\n  applyScroll(e: ViewPortScrollEvent): void;\n}\n\ntype Params = {\n  contentSize: number;\n  virtualContentSize?: number;\n  clientSize: number;\n  virtualSize: number;\n  maxSize?: number;\n};\n\nconst initialParams: Params = {\n  contentSize: 0,\n  clientSize: 0,\n  virtualSize: 0,\n  maxSize: 0,\n};\nconst NO_COORDINATE = -1;\n\n/**\n * Based on content size, client size and virtual size\n * return full size\n */\nexport function getContentSize(\n  contentSize: number,\n  clientSize: number,\n  virtualSize = 0,\n): number {\n  return contentSize + (virtualSize ? clientSize - virtualSize : 0);\n}\n\nexport default class LocalScrollService {\n  private preventArtificialScroll: Record<DimensionType, (() => void) | null> = {\n    rgRow: null,\n    rgCol: null,\n  };\n  // to check if scroll changed\n  private previousScroll: Record<DimensionType, number> = {\n    rgRow: NO_COORDINATE,\n    rgCol: NO_COORDINATE,\n  };\n  private params: Record<DimensionType, Params> = {\n    rgRow: { ...initialParams },\n    rgCol: { ...initialParams },\n  };\n\n  constructor(private cfg: Config) {}\n\n  setParams(params: Params, dimension: DimensionType) {\n    const virtualContentSize = getContentSize(\n      params.contentSize,\n      params.clientSize,\n      params.virtualSize,\n    );\n    this.params[dimension] = {\n      ...params,\n      maxSize: virtualContentSize - params.clientSize,\n      virtualContentSize,\n    };\n  }\n\n  // apply scroll values after scroll done\n  async setScroll(e: ViewPortScrollEvent) {\n    this.cancelScroll(e.dimension);\n\n    // start frame animation\n    const frameAnimation = new Promise<void>((resolve, reject) => {\n      // for example safari desktop has issues with animation frame\n      if (this.cfg.skipAnimationFrame) {\n        return resolve();\n      }\n      const animationId = window.requestAnimationFrame(() => {\n        resolve();\n      });\n      this.preventArtificialScroll[e.dimension] = reject.bind(\n        null,\n        animationId,\n      );\n    });\n\n    try {\n      await frameAnimation;\n      const params = this.getParams(e.dimension);\n      e.coordinate = Math.ceil(e.coordinate);\n      this.previousScroll[e.dimension] = this.wrapCoordinate(\n        e.coordinate,\n        params,\n      );\n      this.preventArtificialScroll[e.dimension] = null;\n      this.cfg.applyScroll({\n        ...e,\n        coordinate: params.virtualSize\n          ? this.convert(e.coordinate, params, false)\n          : e.coordinate,\n      });\n    } catch (id) {\n      window.cancelAnimationFrame(id);\n    }\n  }\n\n  /**\n   * On scroll event started\n   */\n  scroll(\n    coordinate: number,\n    dimension: DimensionType,\n    force = false,\n    delta?: number,\n    outside = false,\n  ) {\n    // cancel all previous scrolls for same dimension\n    this.cancelScroll(dimension);\n\n    // drop if no change\n    if (!force && this.previousScroll[dimension] === coordinate) {\n      this.previousScroll[dimension] = NO_COORDINATE;\n      return;\n    }\n\n    const param = this.getParams(dimension);\n    // let component know about scroll event started\n    this.cfg.runScroll({\n      dimension: dimension,\n      coordinate: param.virtualSize\n        ? this.convert(coordinate, param)\n        : coordinate,\n      delta,\n      outside,\n    });\n  }\n\n  private getParams(dimension: DimensionType): Params {\n    return this.params[dimension];\n  }\n\n  // check if scroll outside of region to avoid looping\n  private wrapCoordinate(c: number, param: Params): number {\n    if (c < 0) {\n      return NO_COORDINATE;\n    }\n\n    if (typeof param.maxSize === 'number' && c > param.maxSize) {\n      return param.maxSize;\n    }\n    return c;\n  }\n\n  // prevent already started scroll, performance optimization\n  private cancelScroll(dimension: DimensionType) {\n    this.preventArtificialScroll[dimension]?.();\n    this.preventArtificialScroll[dimension] = null;\n  }\n\n  /* convert virtual to real and back, scale range */\n  private convert(pos: number, param: Params, toReal = true): number {\n    const minRange = param.clientSize;\n    const from: [number, number] = [0, (param.virtualContentSize ?? minRange) - minRange];\n    const to: [number, number] = [0, param.contentSize - param.virtualSize];\n    if (toReal) {\n      return scaleValue(pos, from, to);\n    }\n    return scaleValue(pos, to, from);\n  }\n}\n","import type { DimensionType } from '@type';\n/**\n * Apply changes only if mousewheel event happened some time ago (scrollThrottling)\n */\nexport class LocalScrollTimer {\n  /**\n   * Last mw event time for trigger scroll function below\n   * If mousewheel function was ignored we still need to trigger render\n   */\n  private mouseWheelScrollTimestamp: Record<DimensionType, number> = {\n    rgCol: 0,\n    rgRow: 0,\n  };\n  private lastKnownScrollCoordinate: Record<DimensionType, number> = {\n    rgCol: 0,\n    rgRow: 0,\n  };\n\n  constructor(private scrollThrottling = 10) {}\n\n  setCoordinate(e: { dimension: DimensionType; coordinate: number }) {\n    this.lastKnownScrollCoordinate[e.dimension] = e.coordinate;\n  }\n\n  /**\n   * Remember last mw event time\n   */\n  latestScrollUpdate(dimension: DimensionType) {\n    this.mouseWheelScrollTimestamp[dimension] = new Date().getTime();\n  }\n\n  /**\n   * Check if scroll is ready to accept new value\n   */\n  isReady(type: DimensionType, coordinate: number) {\n    const change = new Date().getTime() - this.mouseWheelScrollTimestamp[type];\n    // apply after throttling\n    return (\n      change > this.scrollThrottling &&\n      coordinate !== this.lastKnownScrollCoordinate[type]\n    );\n  }\n}\n","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n"],"mappings":"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","ignoreList":[]}