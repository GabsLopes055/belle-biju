{"version":3,"names":["dispatch","target","eventName","detail","event","CustomEvent","cancelable","bubbles","dispatchEvent","dispatchByEvent","e","preventDefault","ResizeEvents","RESIZE_MASK","bit","cursor","DISABLE_MASK","l","t","w","h","defaultProps","props","Object","assign","fitParent","active","disableAttributes","minWidth","minHeight","ResizeDirective","constructor","initialProps","$event","this","mouseX","mouseY","width","height","changeX","changeY","disableCalcMap","mouseMoveFunc","handleMove","bind","mouseUpFunc","handleUp","minW","minH","maxW","_a","maxWidth","maxH","_b","maxHeight","parent","resizeState","set","$el","forEach","attr","emitEvent","additionalOptions","isLeft","activeResizer","classList","contains","changedX","changedY","isTouchEvent","touches","length","eventY","eventX","clientY","clientX","isX","isY","diffY","newHeight","style","bottom","diffX","newWidth","right","left","move","handleDown","defaultPrevented","dropInitial","elClass","document","body","setInitials","start","bindMove","end","unbindMove","computedStyle","getComputedStyle","add","clientWidth","parentElement","minPaddingX","parseFloat","paddingLeft","paddingRight","Math","max","clientHeight","_d","_c","minPaddingY","paddingTop","paddingBottom","removeAttribute","remove","undefined","documentElement","addEventListener","removeEventListener","ResizableElement","children","resizeEls","directive","canResize","onResize","call","p","push","onClick","onDblClick","onMouseDown","onTouchStart","class","ref","ON_COLUMN_CLICK","HeaderCellRenderer","data","additionalData","colTemplate","name","cellProps","columnTemplate","columnProperties","extra","doPropMerge","resizeProps","currentTarget"],"sources":["src/plugins/dispatcher.ts","src/components/header/resizable.directive.tsx","src/components/header/resizable.element.tsx","src/components/header/header-cell-renderer.tsx"],"sourcesContent":["/**\n * Dispatches a custom event to a specified target element.\n *\n * @param target - The target element to dispatch the event to.\n * @param eventName - The name of the custom event.\n * @param detail - Optional. The detail of the custom event.\n * @returns The custom event that was dispatched.\n */\nexport function dispatch<DispatchDetail = any>(\n  target: MouseEvent['target'],\n  eventName: string,\n  detail?: DispatchDetail,\n) {\n  // Create a new CustomEvent with the specified event name and detail.\n  const event = new CustomEvent<DispatchDetail>(eventName, {\n    detail,\n    cancelable: true, // Indicates whether the event can be canceled.\n    bubbles: true, // Indicates whether the event bubbles up through the DOM.\n  });\n\n  // Dispatch the event on the target element.\n  target?.dispatchEvent(event);\n\n  // Return the custom event that was dispatched.\n  return event;\n}\n\n/**\n * Dispatches a custom event based on an existing event object and prevents the default behavior of the original event.\n *\n * @param e - The original event object containing the target and preventDefault method.\n * @param eventName - The name of the custom event.\n * @param detail - Optional. The detail of the custom event.\n * @returns The custom event that was dispatched.\n */\nexport function dispatchByEvent<DispatchDetail = any>(\n  e: Pick<MouseEvent, 'target' | 'preventDefault'>, // The original event object containing the target and preventDefault method.\n  eventName: string, // The name of the custom event.\n  detail?: DispatchDetail, // Optional. The detail of the custom event.\n): CustomEvent {\n  // Prevent the default behavior of the original event.\n  e.preventDefault();\n\n  // Dispatch the custom event to the target element specified in the original event object.\n  return dispatch<DispatchDetail>(e.target, eventName, detail);\n}\n","export type ResizeProps = {\n  active: ('r' | 'rb' | 'b' | 'lb' | 'l' | 'lt' | 't' | 'rt')[]; // all\n  fitParent: boolean; // false\n  minWidth: number; // 0\n  minHeight: number; // 0\n\n  disableAttributes: ('l' | 't' | 'w' | 'h')[]; // []\n  maxWidth?: number;\n  maxHeight?: number;\n\n  onResize?(e: ResizeEvent): void;\n};\n\nexport type ResizeEvent = {\n  eventName: string;\n  changedX?: number;\n  changedY?: number;\n  width?: number;\n  height?: number;\n};\n\nexport enum ResizeEvents {\n  start = 'resize:start',\n  move = 'resize:move',\n  end = 'resize:end',\n}\n\nconst RESIZE_MASK: { [key: string]: any } = {\n  'resizable-r': { bit: 0b0001, cursor: 'ew-resize' },\n  'resizable-rb': { bit: 0b0011, cursor: 'se-resize' },\n  'resizable-b': { bit: 0b0010, cursor: 's-resize' },\n  'resizable-lb': { bit: 0b0110, cursor: 'sw-resize' },\n  'resizable-l': { bit: 0b0100, cursor: 'w-resize' },\n  'resizable-lt': { bit: 0b1100, cursor: 'nw-resize' },\n  'resizable-t': { bit: 0b1000, cursor: 'n-resize' },\n  'resizable-rt': { bit: 0b1001, cursor: 'ne-resize' },\n};\n\nconst DISABLE_MASK = {\n  l: 0b0001,\n  t: 0b0010,\n  w: 0b0100,\n  h: 0b1000,\n};\n\nconst defaultProps = (props: Partial<ResizeProps>): ResizeProps => {\n  return {\n    ...props,\n    fitParent: props.fitParent || false,\n    active: props.active || [],\n    disableAttributes: props.disableAttributes || [],\n    minWidth: props.minWidth || 0,\n    minHeight: props.minHeight || 0,\n  };\n};\n\nexport class ResizeDirective {\n  private $el: HTMLElement;\n  private props: ResizeProps;\n  private minW: number;\n  private minH: number;\n  private maxW: number;\n  private maxH: number;\n\n  private mouseX = 0;\n  private mouseY = 0;\n\n  private width = 0;\n  private height = 0;\n\n  private changeX = 0;\n  private changeY = 0;\n\n  private parent: { width: number; height: number };\n  private resizeState: number;\n  private activeResizer?: HTMLElement;\n  private disableCalcMap = 0b1111;\n\n  private mouseMoveFunc: () => void;\n  private mouseUpFunc: () => void;\n\n  constructor(\n    private initialProps: Partial<ResizeProps>,\n    private $event?: (e: ResizeEvent) => void,\n  ) {\n    this.props = defaultProps(initialProps);\n    this.mouseMoveFunc = this.handleMove.bind(this);\n    this.mouseUpFunc = this.handleUp.bind(this);\n\n    this.minW = this.props.minWidth;\n    this.minH = this.props.minHeight;\n    this.maxW = this.props.maxWidth ?? 0;\n    this.maxH = this.props.maxHeight ?? 0;\n    this.parent = { width: 0, height: 0 };\n    this.resizeState = 0;\n  }\n\n  set($el: HTMLElement) {\n    this.$el = $el;\n    this.props.disableAttributes.forEach(attr => {\n      switch (attr) {\n        case 'l':\n          this.disableCalcMap &= ~DISABLE_MASK.l;\n          break;\n        case 't':\n          this.disableCalcMap &= ~DISABLE_MASK.t;\n          break;\n        case 'w':\n          this.disableCalcMap &= ~DISABLE_MASK.w;\n          break;\n        case 'h':\n          this.disableCalcMap &= ~DISABLE_MASK.h;\n      }\n    });\n  }\n  emitEvent(eventName: string, additionalOptions?: any) {\n    if (!this.$event) {\n      return;\n    }\n    const isLeft = this.activeResizer?.classList.contains('resizable-l');\n    this.$event({\n      eventName,\n      width: this.width + this.changeX * (isLeft ? -1 : 1),\n      height: this.height + this.changeY,\n      changedX: this.changeX,\n      changedY: this.changeY,\n      ...additionalOptions,\n    });\n  }\n\n  private static isTouchEvent(e: MouseEvent | TouchEvent): e is TouchEvent {\n    const event = e as TouchEvent;\n    return event.touches?.length >= 0;\n  }\n\n  handleMove(event: MouseEvent | TouchEvent) {\n    if (!this.resizeState) {\n      return;\n    }\n    let eventY, eventX;\n    if (ResizeDirective.isTouchEvent(event)) {\n      eventY = event.touches[0].clientY;\n      eventX = event.touches[0].clientX;\n    } else {\n      eventY = event.clientY;\n      eventX = event.clientX;\n    }\n    let isX =\n      this.resizeState & RESIZE_MASK['resizable-r'].bit ||\n      this.resizeState & RESIZE_MASK['resizable-l'].bit;\n\n    let isY =\n      this.resizeState & RESIZE_MASK['resizable-t'].bit ||\n      this.resizeState & RESIZE_MASK['resizable-b'].bit;\n\n    if (isY && this.disableCalcMap & DISABLE_MASK.h) {\n      let diffY = eventY - this.mouseY;\n      let changedY = this.changeY + diffY;\n      const newHeight = this.height + changedY;\n      // if overcrossed min height\n      if (newHeight < this.minH) {\n        changedY = -(this.height - this.minH);\n      }\n      // if overcrossed max heiht\n      if (this.maxH && newHeight > this.maxH) {\n        changedY = this.maxH - this.height;\n      }\n\n      this.changeY = changedY;\n      this.mouseY = eventY;\n\n      if (this.activeResizer) {\n        this.activeResizer.style.bottom = `${-this.changeY}px`;\n      }\n    }\n    if (isX && this.disableCalcMap & DISABLE_MASK.w) {\n      const isLeft = this.activeResizer?.classList.contains('resizable-l');\n      let diffX = eventX - this.mouseX;\n      let changedX = this.changeX + diffX;\n      const newWidth = this.width + changedX * (isLeft ? -1 : 1);\n\n      // if overcrossed min width\n      if (newWidth < this.minW) {\n        changedX = -(this.width - this.minW);\n      }\n      // if overcrossed max width\n      if (this.maxW && newWidth > this.maxW) {\n        changedX = this.maxW - this.width;\n      }\n\n      this.changeX = changedX;\n      this.mouseX = eventX;\n\n      if (this.activeResizer) {\n        if (!isLeft) {\n          this.activeResizer.style.right = `${-this.changeX}px`;\n        } else {\n          this.activeResizer.style.left = `${this.changeX}px`;\n        }\n      }\n    }\n    this.emitEvent(ResizeEvents.move);\n  }\n\n  handleDown(event: MouseEvent | TouchEvent) {\n    if (event.defaultPrevented) {\n      return;\n    }\n    // stop other events if resize in progress\n    event.preventDefault();\n\n    this.dropInitial();\n    for (let elClass in RESIZE_MASK) {\n      const target = event.target as HTMLElement | null;\n      if (this.$el.contains(target) && target?.classList.contains(elClass)) {\n        document.body.style.cursor = RESIZE_MASK[elClass].cursor;\n        if (ResizeDirective.isTouchEvent(event)) {\n          this.setInitials(event.touches[0], target);\n        } else {\n          event.preventDefault && event.preventDefault();\n          this.setInitials(event, target);\n        }\n        this.resizeState = RESIZE_MASK[elClass].bit;\n        const eventName = ResizeEvents.start;\n        this.emitEvent(eventName);\n        break;\n      }\n    }\n    this.bindMove();\n  }\n\n  handleUp(e: MouseEvent) {\n    e.preventDefault();\n    if (this.resizeState !== 0) {\n      this.resizeState = 0;\n      document.body.style.cursor = '';\n      const eventName = ResizeEvents.end;\n      this.emitEvent(eventName);\n    }\n    this.dropInitial();\n    this.unbindMove();\n  }\n\n  private setInitials(\n    { clientX, clientY }: { clientX: number; clientY: number },\n    target?: HTMLElement,\n  ) {\n    const computedStyle = getComputedStyle(this.$el);\n    this.$el.classList.add('active');\n    this.activeResizer = target;\n\n    if (this.disableCalcMap & DISABLE_MASK.w) {\n      this.mouseX = clientX;\n      this.width = this.$el.clientWidth;\n      this.parent.width = this.$el.parentElement?.clientWidth ?? 0;\n\n      // min width\n      const minPaddingX =\n        parseFloat(computedStyle.paddingLeft) +\n        parseFloat(computedStyle.paddingRight);\n      this.minW = Math.max(minPaddingX, this.initialProps.minWidth || 0);\n\n      // max width\n      if (this.initialProps.maxWidth) {\n        this.maxW = Math.max(this.width, this.initialProps.maxWidth);\n      }\n    }\n\n    if (this.disableCalcMap & DISABLE_MASK.h) {\n      this.mouseY = clientY;\n      this.height = this.$el.clientHeight;\n      this.parent.height = this.$el.parentElement?.clientHeight ?? 0;\n\n      // min height\n      const minPaddingY =\n        parseFloat(computedStyle.paddingTop) +\n        parseFloat(computedStyle.paddingBottom);\n      this.minH = Math.max(minPaddingY, this.initialProps.minHeight || 0);\n      // max height\n      if (this.initialProps.maxHeight) {\n        this.maxH = Math.max(this.height, this.initialProps.maxHeight);\n      }\n    }\n  }\n\n  private dropInitial() {\n    this.changeX = this.changeY = this.minW = this.minH;\n    this.width = this.height = 0;\n    if (this.activeResizer) {\n      this.activeResizer.removeAttribute('style');\n    }\n    this.$el.classList.remove('active');\n    this.activeResizer = undefined;\n  }\n\n  private bindMove() {\n    document.documentElement.addEventListener(\n      'mouseup',\n      this.mouseUpFunc,\n      true,\n    );\n    document.documentElement.addEventListener(\n      'touchend',\n      this.mouseUpFunc,\n      true,\n    );\n    document.documentElement.addEventListener(\n      'mousemove',\n      this.mouseMoveFunc,\n      true,\n    );\n    document.documentElement.addEventListener(\n      'touchmove',\n      this.mouseMoveFunc,\n      true,\n    );\n    document.documentElement.addEventListener('mouseleave', this.mouseUpFunc);\n  }\n\n  private unbindMove() {\n    document.documentElement.removeEventListener(\n      'mouseup',\n      this.mouseUpFunc,\n      true,\n    );\n    document.documentElement.removeEventListener(\n      'touchend',\n      this.mouseUpFunc,\n      true,\n    );\n    document.documentElement.removeEventListener(\n      'mousemove',\n      this.mouseMoveFunc,\n      true,\n    );\n    document.documentElement.removeEventListener(\n      'touchmove',\n      this.mouseMoveFunc,\n      true,\n    );\n    document.documentElement.removeEventListener(\n      'mouseleave',\n      this.mouseUpFunc,\n    );\n  }\n}\n","import { type FunctionalComponent, h, type VNode } from '@stencil/core';\nimport {\n  ResizeProps,\n  ResizeDirective,\n  ResizeEvents,\n} from './resizable.directive';\nimport type { CellProps } from '@type';\n\nexport type ResizableElementHTMLAttributes = Partial<ResizeProps> & CellProps;\n\nexport const ResizableElement: FunctionalComponent = (\n  props: ResizableElementHTMLAttributes,\n  children: VNode[],\n) => {\n  const resizeEls: VNode[] = [];\n  const directive =\n    (props.canResize &&\n      new ResizeDirective(props, e => {\n        if (e.eventName === ResizeEvents.end) {\n          props.onResize?.(e);\n        }\n      })) ||\n    null;\n\n  if (props.active) {\n    if (props.canResize) {\n      for (let p in props.active) {\n        resizeEls.push(\n          <div\n            onClick={e => e.preventDefault()}\n            onDblClick={e => {\n              e.preventDefault();\n              props.onDblClick?.(e);\n            }}\n            onMouseDown={(e: MouseEvent) => directive?.handleDown(e)}\n            onTouchStart={(e: TouchEvent) => directive?.handleDown(e)}\n            class={`resizable resizable-${props.active[p]}`}\n          />,\n        );\n      }\n    } else {\n      for (let p in props.active) {\n        resizeEls.push(\n          <div\n            onClick={e => e.preventDefault()}\n            onTouchStart={(e: TouchEvent) => e.preventDefault()}\n            onDblClick={e => {\n              e.preventDefault();\n              props.onDblClick?.(e);\n            }}\n            class={`no-resize resizable resizable-${props.active[p]}`}\n          />,\n        );\n      }\n    }\n  }\n  return (\n    <div {...props} ref={e => e && directive?.set(e)}>\n      {children}\n      {resizeEls}\n    </div>\n  );\n};\n","import { type FunctionalComponent, h } from '@stencil/core';\nimport { dispatch } from '../../plugins/dispatcher';\nimport { doPropMerge } from '../data/column.service';\nimport {\n  ResizableElement,\n  ResizableElementHTMLAttributes,\n} from './resizable.element';\nimport { ColumnTemplateProp } from '@type';\n\nexport const ON_COLUMN_CLICK = 'columnclick';\n\nexport const HeaderCellRenderer: FunctionalComponent<{\n  props: ResizableElementHTMLAttributes;\n  additionalData: any;\n  data?: ColumnTemplateProp;\n}> = ({ data, props, additionalData }, children) => {\n  let colTemplate: ReturnType<typeof h> = data?.name || '';\n  let cellProps = props;\n  if (data?.columnTemplate) {\n    colTemplate = data.columnTemplate(h, data, additionalData);\n  }\n  if (data?.columnProperties) {\n    const extra = data.columnProperties(data);\n    if (extra) {\n      cellProps = doPropMerge(props, extra);\n    }\n  }\n  const resizeProps = {\n    ...cellProps,\n    onMouseDown(e: MouseEvent) {\n      dispatch(e.currentTarget, ON_COLUMN_CLICK, {\n        data,\n        event: e,\n      });\n    },\n  };\n  return (\n    <ResizableElement {...resizeProps}>\n      <div class=\"header-content\">{colTemplate}</div>\n      {children}\n    </ResizableElement>\n  );\n};\n"],"mappings":"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","ignoreList":[]}